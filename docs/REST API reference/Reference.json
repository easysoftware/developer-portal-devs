{
   "openapi":"3.0.0",
   "info":{
      "version":"3.4.1",
      "title":"Easy Redmine API",
      "description":"https://app.swaggerhub.com/apis/easysoftware/EasySwagger",
      "contact":{
         "name":"Lukas Pokorny",
         "email":"support@easyredmine.com",
         "url":"https://www.easyredmine.com"
      },
      "license":{
         "name":"GPLv3"
      }
   },
   "security":[
      {
         "key":[
            
         ],
         "headerKey":[
            
         ]
      }
   ],
   "tags":[
      {
         "name":"Attachment",
         "description":"Attachment API"
      },
      {
         "name":"Custom field",
         "description":"CustomField API"
      },
      {
         "name":"Document",
         "description":"Document object with all its details"
      },
      {
         "name":"Easy async export",
         "description":"EasyAsyncExports API"
      },
      {
         "name":"Easy attendance",
         "description":"Easy Attendances API"
      },
      {
         "name":"Easy checklist",
         "description":"Easy Checklists API"
      },
      {
         "name":"Easy checklist item",
         "description":"Easy Checklist Items API"
      },
      {
         "name":"Easy contact",
         "description":"EasyContact API"
      },
      {
         "name":"Easy crm case",
         "description":"Crm Case API"
      },
      {
         "name":"Easy entity activity",
         "description":"EasyEntityActivities API"
      },
      {
         "name":"Easy entity import",
         "description":"EasyEntityImports API"
      },
      {
         "name":"Easy helpdesk project",
         "description":"EasyHelpdeskProjects API"
      },
      {
         "name":"Easy knowledge story",
         "description":"Knowledge posts API"
      },
      {
         "name":"Easy lead",
         "description":"EasyLead API"
      },
      {
         "name":"Easy mind map",
         "description":"Easy Mind Maps API"
      },
      {
         "name":"Easy money expected expense",
         "description":"Easy Money Expected Expenses Api"
      },
      {
         "name":"Easy money expected revenue",
         "description":"Easy Money Expected Revenues Api"
      },
      {
         "name":"Easy money other expense",
         "description":"Easy Money Other Expenses Api"
      },
      {
         "name":"Easy money other revenue",
         "description":"Easy Money Other Revenues Api"
      },
      {
         "name":"Easy one time contract",
         "description":"EasyOneTimeContract API"
      },
      {
         "name":"Easy partner",
         "description":"EasyPartner API"
      },
      {
         "name":"Easy personal contact",
         "description":"EasyPersonalContact API"
      },
      {
         "name":"Easy price book quote",
         "description":"EasyPriceBookQuote API"
      },
      {
         "name":"Easy setting",
         "description":"Manage EasySetting remotely"
      },
      {
         "name":"Easy sla event",
         "description":"EasySlaEvents API"
      },
      {
         "name":"Easy stakeholder",
         "description":"EasyStakeholder API"
      },
      {
         "name":"Easy time based contract",
         "description":"EasyTimeBasedContract API"
      },
      {
         "name":"Easy web hook",
         "description":"EasyWebHook API"
      },
      {
         "name":"EasyCalendarMeeting",
         "description":"Easy Calendar API"
      },
      {
         "name":"Group",
         "description":"Groups API"
      },
      {
         "name":"Issue",
         "description":"Tasks API"
      },
      {
         "name":"Membership",
         "description":"Membership object with all its details"
      },
      {
         "name":"Project",
         "description":"Projects API"
      },
      {
         "name":"Project documents",
         "description":"A list of Project Documents with all its details"
      },
      {
         "name":"Project membership",
         "description":"A list of Project Memberships with all its details"
      },
      {
         "name":"Project template",
         "description":"ProjectTemplates API"
      },
      {
         "name":"Search",
         "description":"Search API"
      },
      {
         "name":"Test case",
         "description":"TestCasesController API"
      },
      {
         "name":"Test case issue execution",
         "description":"TestCaseIssueExecitionsController API"
      },
      {
         "name":"Test case issue execution result",
         "description":"TestCaseIssueExecutionResultsController API"
      },
      {
         "name":"Test plan",
         "description":"TestPlansController API"
      },
      {
         "name":"Time entry",
         "description":"Spent time API"
      },
      {
         "name":"User",
         "description":"Users API"
      },
      {
         "name":"Version",
         "description":"Milestones API"
      }
   ],
   "paths":{
      "/attachments/{id}.{format}":{
         "get":{
            "summary":"Get Attachment",
            "tags":[
               "Attachment"
            ],
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of Attachment",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               },
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               }
            ],
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "200":{
                  "description":"detail of Attachment",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "attachment":{
                                 "$ref":"#/components/schemas/AttachmentApiResponse"
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/AttachmentApiResponse"
                        }
                     }
                  }
               }
            }
         },
         "delete":{
            "summary":"Destroy Attachment",
            "tags":[
               "Attachment"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of Attachment",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               }
            ],
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "204":{
                  "description":"ok"
               }
            }
         }
      },
      "/uploads.{format}":{
         "post":{
            "summary":"Upload file to server",
            "tags":[
               "Attachment"
            ],
            "requestBody":{
               "description":"Request body is the file content",
               "required":true,
               "content":{
                  "application/octet-stream":{
                     "schema":{
                        "type":"string",
                        "format":"binary"
                     }
                  }
               }
            },
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               }
            ],
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "422":{
                  "description":"unprocessable entity",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "201":{
                  "description":"created",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "upload":{
                                 "$ref":"#/components/schemas/UploadResponse"
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/UploadResponse"
                        }
                     }
                  }
               }
            }
         }
      },
      "/attach.{format}":{
         "post":{
            "summary":"Attach file to entity",
            "tags":[
               "Attachment"
            ],
            "requestBody":{
               "required":true,
               "description":"entity_type and entity_id correspond with entity the attachment will be attached to",
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "attach":{
                              "$ref":"#/components/schemas/AttachRequest"
                           }
                        }
                     }
                  },
                  "application/xml":{
                     "schema":{
                        "$ref":"#/components/schemas/AttachRequest"
                     }
                  }
               }
            },
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               }
            ],
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "422":{
                  "description":"unprocessable entity",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "200":{
                  "description":"ok"
               }
            }
         }
      },
      "/custom_fields.{format}":{
         "post":{
            "summary":"Create CustomField",
            "tags":[
               "Custom field"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"type",
                  "description":"Name of custom field class",
                  "in":"query",
                  "schema":{
                     "type":"string",
                     "example":"IssueCustomField",
                     "enum":[
                        "IssueCustomField",
                        "ProjectCustomField",
                        "UserCustomField"
                     ]
                  }
               }
            ],
            "requestBody":{
               "description":"Create CustomField",
               "required":true,
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "custom_field":{
                              "$ref":"#/components/schemas/CustomFieldApiRequest"
                           }
                        }
                     }
                  },
                  "application/xml":{
                     "schema":{
                        "$ref":"#/components/schemas/CustomFieldApiRequest"
                     }
                  }
               }
            },
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "422":{
                  "description":"unprocessable entity",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "201":{
                  "description":"created",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "custom_field":{
                                 "$ref":"#/components/schemas/CustomFieldApiResponse"
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/CustomFieldApiResponse"
                        }
                     }
                  }
               }
            }
         },
         "get":{
            "summary":"List of CustomFields",
            "description":"",
            "tags":[
               "Custom field"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"ok",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "xml":{
                              "name":"custom_fields",
                              "wrapped":true
                           },
                           "properties":{
                              "custom_fields":{
                                 "type":"array",
                                 "items":{
                                    "$ref":"#/components/schemas/CustomFieldApiResponse"
                                 }
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "type":"object",
                           "xml":{
                              "name":"custom_fields",
                              "wrapped":true
                           },
                           "properties":{
                              "custom_fields":{
                                 "type":"array",
                                 "items":{
                                    "$ref":"#/components/schemas/CustomFieldApiResponse"
                                 }
                              }
                           }
                        }
                     }
                  }
               },
               "401":{
                  "description":"not authorized"
               }
            }
         }
      },
      "/custom_fields/{id}.{format}":{
         "get":{
            "summary":"Get CustomField",
            "tags":[
               "Custom field"
            ],
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of CustomField",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               },
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               }
            ],
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "200":{
                  "description":"detail of CustomField",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "custom_field":{
                                 "$ref":"#/components/schemas/CustomFieldApiResponse"
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/CustomFieldApiResponse"
                        }
                     }
                  }
               }
            }
         },
         "put":{
            "summary":"Update CustomField",
            "tags":[
               "Custom field"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of CustomField",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               }
            ],
            "requestBody":{
               "description":"Update given CustomField",
               "required":true,
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "custom_field":{
                              "$ref":"#/components/schemas/CustomFieldApiRequest"
                           }
                        }
                     }
                  },
                  "application/xml":{
                     "schema":{
                        "$ref":"#/components/schemas/CustomFieldApiRequest"
                     }
                  }
               }
            },
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "422":{
                  "description":"unprocessable entity",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "204":{
                  "description":"ok"
               }
            }
         },
         "delete":{
            "summary":"Destroy CustomField",
            "tags":[
               "Custom field"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of CustomField",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               }
            ],
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "204":{
                  "description":"ok"
               }
            }
         }
      },
      "/documents/{id}.{format}":{
         "get":{
            "summary":"Get Document",
            "tags":[
               "Document"
            ],
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of Document",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               },
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               }
            ],
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "200":{
                  "description":"detail of Document",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "document":{
                                 "$ref":"#/components/schemas/DocumentApiResponse"
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/DocumentApiResponse"
                        }
                     }
                  }
               }
            }
         },
         "put":{
            "summary":"Update Document",
            "tags":[
               "Document"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of Document",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               }
            ],
            "requestBody":{
               "description":"Update given Document",
               "required":true,
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "document":{
                              "$ref":"#/components/schemas/DocumentApiRequest"
                           }
                        }
                     }
                  },
                  "application/xml":{
                     "schema":{
                        "$ref":"#/components/schemas/DocumentApiRequest"
                     }
                  }
               }
            },
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "422":{
                  "description":"unprocessable entity",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "200":{
                  "description":"updated",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "document":{
                                 "$ref":"#/components/schemas/DocumentApiResponse"
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/DocumentApiResponse"
                        }
                     }
                  }
               }
            }
         },
         "delete":{
            "summary":"Destroy Document",
            "tags":[
               "Document"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of Document",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               }
            ],
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "204":{
                  "description":"ok"
               }
            }
         }
      },
      "/projects/{project_id}/documents.{format}":{
         "get":{
            "summary":"Retrieve documents of the Project with specified id",
            "tags":[
               "Document",
               "Project documents"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"project_id",
                  "in":"path",
                  "description":"ID of Project",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               }
            ],
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "200":{
                  "description":"ok",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "groups":{
                                 "type":"array",
                                 "items":{
                                    "$ref":"#/components/schemas/DocumentsGroupApiResponse"
                                 }
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "groups":{
                                 "type":"array",
                                 "items":{
                                    "$ref":"#/components/schemas/DocumentsGroupApiResponse"
                                 }
                              }
                           }
                        }
                     }
                  }
               }
            }
         },
         "post":{
            "summary":"Create a document in the Project with specified id",
            "tags":[
               "Document",
               "Project documents"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"project_id",
                  "in":"path",
                  "description":"ID of Project",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               }
            ],
            "requestBody":{
               "description":"Create Document",
               "required":true,
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "document":{
                              "$ref":"#/components/schemas/ProjectDocumentApiRequest"
                           }
                        }
                     }
                  },
                  "application/xml":{
                     "schema":{
                        "$ref":"#/components/schemas/ProjectDocumentApiRequest"
                     }
                  }
               }
            },
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "422":{
                  "description":"unprocessable entity",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "201":{
                  "description":"created",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "document":{
                                 "$ref":"#/components/schemas/DocumentApiResponse"
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/DocumentApiResponse"
                        }
                     }
                  }
               }
            }
         }
      },
      "/easy_async_exports.{format}":{
         "get":{
            "summary":"List of EasyAsyncExports",
            "description":"For filtering send parameter `set_filter=1` and specify filters",
            "tags":[
               "Easy async export"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"easy_query_q",
                  "description":"free-text filter of current entity",
                  "in":"query",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"set_filter",
                  "description":"enable filter through Easy Query",
                  "in":"query",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"limit",
                  "description":"the number of items to be present in the response (default is 25, maximum is 100)",
                  "in":"query",
                  "schema":{
                     "type":"integer"
                  }
               },
               {
                  "name":"offset",
                  "description":"the offset of the first object to retrieve",
                  "in":"query",
                  "schema":{
                     "type":"integer"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"ok",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "xml":{
                              "name":"easy_async_exports",
                              "wrapped":true
                           },
                           "properties":{
                              "total_count":{
                                 "type":"number",
                                 "example":75,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "offset":{
                                 "type":"number",
                                 "example":0,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "limit":{
                                 "type":"number",
                                 "example":25,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "easy_async_exports":{
                                 "type":"array",
                                 "items":{
                                    "$ref":"#/components/schemas/EasyAsyncExportApiResponse"
                                 }
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "type":"object",
                           "xml":{
                              "name":"easy_async_exports",
                              "wrapped":true
                           },
                           "properties":{
                              "total_count":{
                                 "type":"number",
                                 "example":75,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "offset":{
                                 "type":"number",
                                 "example":0,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "limit":{
                                 "type":"number",
                                 "example":25,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "easy_async_exports":{
                                 "type":"array",
                                 "items":{
                                    "$ref":"#/components/schemas/EasyAsyncExportApiResponse"
                                 }
                              }
                           }
                        }
                     }
                  }
               },
               "401":{
                  "description":"not authorized"
               }
            }
         }
      },
      "/easy_async_exports/{id}.{format}":{
         "delete":{
            "summary":"Destroy EasyAsyncExport",
            "tags":[
               "Easy async export"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of EasyAsyncExport",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               }
            ],
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "204":{
                  "description":"ok"
               }
            }
         }
      },
      "/easy_attendances.{format}":{
         "get":{
            "summary":"List of EasyAttendances",
            "description":"For filtering send parameter `set_filter=1` and specify filters",
            "tags":[
               "Easy attendance"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"easy_query_q",
                  "description":"free-text filter of current entity",
                  "in":"query",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"set_filter",
                  "description":"enable filter through Easy Query",
                  "in":"query",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"limit",
                  "description":"the number of items to be present in the response (default is 25, maximum is 100)",
                  "in":"query",
                  "schema":{
                     "type":"integer"
                  }
               },
               {
                  "name":"offset",
                  "description":"the offset of the first object to retrieve",
                  "in":"query",
                  "schema":{
                     "type":"integer"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"ok",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "xml":{
                              "name":"easy_attendances",
                              "wrapped":true
                           },
                           "properties":{
                              "total_count":{
                                 "type":"number",
                                 "example":75,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "offset":{
                                 "type":"number",
                                 "example":0,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "limit":{
                                 "type":"number",
                                 "example":25,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "easy_attendances":{
                                 "type":"array",
                                 "items":{
                                    "$ref":"#/components/schemas/EasyAttendanceApiResponse"
                                 }
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "type":"object",
                           "xml":{
                              "name":"easy_attendances",
                              "wrapped":true
                           },
                           "properties":{
                              "total_count":{
                                 "type":"number",
                                 "example":75,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "offset":{
                                 "type":"number",
                                 "example":0,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "limit":{
                                 "type":"number",
                                 "example":25,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "easy_attendances":{
                                 "type":"array",
                                 "items":{
                                    "$ref":"#/components/schemas/EasyAttendanceApiResponse"
                                 }
                              }
                           }
                        }
                     }
                  }
               },
               "401":{
                  "description":"not authorized"
               }
            }
         },
         "post":{
            "summary":"Create EasyAttendance",
            "tags":[
               "Easy attendance"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               }
            ],
            "requestBody":{
               "description":"Create EasyAttendance",
               "required":true,
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "easy_attendance":{
                              "$ref":"#/components/schemas/EasyAttendanceApiRequest"
                           }
                        }
                     }
                  },
                  "application/xml":{
                     "schema":{
                        "$ref":"#/components/schemas/EasyAttendanceApiRequest"
                     }
                  }
               }
            },
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "422":{
                  "description":"unprocessable entity",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "201":{
                  "description":"created",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "easy_attendance":{
                                 "$ref":"#/components/schemas/EasyAttendanceApiResponse"
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/EasyAttendanceApiResponse"
                        }
                     }
                  }
               }
            }
         }
      },
      "/easy_attendances/{id}.{format}":{
         "get":{
            "summary":"Get EasyAttendance",
            "tags":[
               "Easy attendance"
            ],
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of EasyAttendance",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               },
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               }
            ],
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "200":{
                  "description":"detail of EasyAttendance",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "easy_attendance":{
                                 "$ref":"#/components/schemas/EasyAttendanceApiResponse"
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/EasyAttendanceApiResponse"
                        }
                     }
                  }
               }
            }
         },
         "put":{
            "summary":"Update EasyAttendance",
            "tags":[
               "Easy attendance"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of EasyAttendance",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               }
            ],
            "requestBody":{
               "description":"Update given EasyAttendance",
               "required":true,
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "easy_attendance":{
                              "$ref":"#/components/schemas/EasyAttendanceApiRequest"
                           }
                        }
                     }
                  },
                  "application/xml":{
                     "schema":{
                        "$ref":"#/components/schemas/EasyAttendanceApiRequest"
                     }
                  }
               }
            },
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "422":{
                  "description":"unprocessable entity",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "200":{
                  "description":"updated",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "easy_attendance":{
                                 "$ref":"#/components/schemas/EasyAttendanceApiResponse"
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/EasyAttendanceApiResponse"
                        }
                     }
                  }
               }
            }
         },
         "delete":{
            "summary":"Destroy EasyAttendance",
            "tags":[
               "Easy attendance"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of EasyAttendance",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               }
            ],
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "204":{
                  "description":"ok"
               }
            }
         }
      },
      "/easy_checklist_items.{format}":{
         "post":{
            "summary":"Create EasyChecklistItem",
            "tags":[
               "Easy checklist item"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               }
            ],
            "requestBody":{
               "description":"Create EasyChecklistItem",
               "required":true,
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "easy_checklist_item":{
                              "$ref":"#/components/schemas/EasyChecklistItemApiRequest"
                           }
                        }
                     }
                  },
                  "application/xml":{
                     "schema":{
                        "$ref":"#/components/schemas/EasyChecklistItemApiRequest"
                     }
                  }
               }
            },
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "422":{
                  "description":"unprocessable entity",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "201":{
                  "description":"created",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "easy_checklist_item":{
                                 "$ref":"#/components/schemas/EasyChecklistItemApiResponse"
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/EasyChecklistItemApiResponse"
                        }
                     }
                  }
               }
            }
         }
      },
      "/easy_checklist_items/{id}.{format}":{
         "put":{
            "summary":"Update EasyChecklistItem",
            "tags":[
               "Easy checklist item"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of EasyChecklistItem",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               }
            ],
            "requestBody":{
               "description":"Update given EasyChecklistItem",
               "required":true,
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "easy_checklist_item":{
                              "$ref":"#/components/schemas/EasyChecklistItemApiRequest"
                           }
                        }
                     }
                  },
                  "application/xml":{
                     "schema":{
                        "$ref":"#/components/schemas/EasyChecklistItemApiRequest"
                     }
                  }
               }
            },
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "422":{
                  "description":"unprocessable entity",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "200":{
                  "description":"updated",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "easy_checklist_item":{
                                 "$ref":"#/components/schemas/EasyChecklistItemApiResponse"
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/EasyChecklistItemApiResponse"
                        }
                     }
                  }
               }
            }
         },
         "delete":{
            "summary":"Destroy EasyChecklistItem",
            "tags":[
               "Easy checklist item"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of EasyChecklistItem",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               }
            ],
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "204":{
                  "description":"ok"
               }
            }
         }
      },
      "/easy_checklists.{format}":{
         "post":{
            "summary":"Create EasyChecklist",
            "tags":[
               "Easy checklist"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               }
            ],
            "requestBody":{
               "description":"Create EasyChecklist",
               "required":true,
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "easy_checklist":{
                              "$ref":"#/components/schemas/EasyChecklistApiRequest"
                           }
                        }
                     }
                  },
                  "application/xml":{
                     "schema":{
                        "$ref":"#/components/schemas/EasyChecklistApiRequest"
                     }
                  }
               }
            },
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "422":{
                  "description":"unprocessable entity",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "201":{
                  "description":"created",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "easy_checklist":{
                                 "$ref":"#/components/schemas/EasyChecklistApiResponse"
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/EasyChecklistApiResponse"
                        }
                     }
                  }
               }
            }
         }
      },
      "/easy_checklists/{id}.{format}":{
         "get":{
            "summary":"Get EasyChecklist",
            "tags":[
               "Easy checklist"
            ],
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of EasyChecklist",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               },
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               }
            ],
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "200":{
                  "description":"detail of EasyChecklist",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "easy_checklist":{
                                 "$ref":"#/components/schemas/EasyChecklistApiResponse"
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/EasyChecklistApiResponse"
                        }
                     }
                  }
               }
            }
         },
         "put":{
            "summary":"Update EasyChecklist",
            "tags":[
               "Easy checklist"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of EasyChecklist",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               }
            ],
            "requestBody":{
               "description":"Update given EasyChecklist",
               "required":true,
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "easy_checklist":{
                              "$ref":"#/components/schemas/EasyChecklistApiRequest"
                           }
                        }
                     }
                  },
                  "application/xml":{
                     "schema":{
                        "$ref":"#/components/schemas/EasyChecklistApiRequest"
                     }
                  }
               }
            },
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "422":{
                  "description":"unprocessable entity",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "200":{
                  "description":"updated",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "easy_checklist":{
                                 "$ref":"#/components/schemas/EasyChecklistApiResponse"
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/EasyChecklistApiResponse"
                        }
                     }
                  }
               }
            }
         },
         "delete":{
            "summary":"Destroy EasyChecklist",
            "tags":[
               "Easy checklist"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of EasyChecklist",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               }
            ],
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "204":{
                  "description":"ok"
               }
            }
         }
      },
      "/easy_contacts.{format}":{
         "get":{
            "summary":"List of EasyContacts",
            "description":"For filtering send parameter `set_filter=1` and specify filters",
            "tags":[
               "Easy contact"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"easy_query_q",
                  "description":"free-text filter of current entity",
                  "in":"query",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"set_filter",
                  "description":"enable filter through Easy Query",
                  "in":"query",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"limit",
                  "description":"the number of items to be present in the response (default is 25, maximum is 100)",
                  "in":"query",
                  "schema":{
                     "type":"integer"
                  }
               },
               {
                  "name":"offset",
                  "description":"the offset of the first object to retrieve",
                  "in":"query",
                  "schema":{
                     "type":"integer"
                  }
               },
               {
                  "name":"include",
                  "description":"explicitly specify the associations you want to be included in the query result (separated by a comma)\n\n* **author** (Include author)",
                  "in":"query",
                  "schema":{
                     "type":"array",
                     "items":{
                        "type":"string",
                        "enum":[
                           "author"
                        ]
                     }
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"ok",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "xml":{
                              "name":"easy_contacts",
                              "wrapped":true
                           },
                           "properties":{
                              "total_count":{
                                 "type":"number",
                                 "example":75,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "offset":{
                                 "type":"number",
                                 "example":0,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "limit":{
                                 "type":"number",
                                 "example":25,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "easy_contacts":{
                                 "type":"array",
                                 "items":{
                                    "$ref":"#/components/schemas/EasyContactApiResponse"
                                 }
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "type":"object",
                           "xml":{
                              "name":"easy_contacts",
                              "wrapped":true
                           },
                           "properties":{
                              "total_count":{
                                 "type":"number",
                                 "example":75,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "offset":{
                                 "type":"number",
                                 "example":0,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "limit":{
                                 "type":"number",
                                 "example":25,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "easy_contacts":{
                                 "type":"array",
                                 "items":{
                                    "$ref":"#/components/schemas/EasyContactApiResponse"
                                 }
                              }
                           }
                        }
                     }
                  }
               },
               "401":{
                  "description":"not authorized"
               }
            }
         },
         "post":{
            "summary":"Create EasyContact",
            "tags":[
               "Easy contact"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               }
            ],
            "requestBody":{
               "description":"Create EasyContact",
               "required":true,
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "easy_contact":{
                              "$ref":"#/components/schemas/EasyContactApiRequest"
                           }
                        }
                     }
                  },
                  "application/xml":{
                     "schema":{
                        "$ref":"#/components/schemas/EasyContactApiRequest"
                     }
                  }
               }
            },
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "422":{
                  "description":"unprocessable entity",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "201":{
                  "description":"created",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "easy_contact":{
                                 "$ref":"#/components/schemas/EasyContactApiResponse"
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/EasyContactApiResponse"
                        }
                     }
                  }
               }
            }
         }
      },
      "/easy_contacts/{id}.{format}":{
         "get":{
            "summary":"Get EasyContact",
            "tags":[
               "Easy contact"
            ],
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of EasyContact",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               },
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"include",
                  "description":"explicitly specify the associations you want to be included in the query result (separated by a comma)\n\n* **author** (Include author)",
                  "in":"query",
                  "schema":{
                     "type":"array",
                     "items":{
                        "type":"string",
                        "enum":[
                           "author"
                        ]
                     }
                  }
               }
            ],
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "200":{
                  "description":"detail of EasyContact",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "easy_contact":{
                                 "$ref":"#/components/schemas/EasyContactApiResponse"
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/EasyContactApiResponse"
                        }
                     }
                  }
               }
            }
         },
         "put":{
            "summary":"Update EasyContact",
            "tags":[
               "Easy contact"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of EasyContact",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               }
            ],
            "requestBody":{
               "description":"Update given EasyContact",
               "required":true,
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "easy_contact":{
                              "$ref":"#/components/schemas/EasyContactApiRequest"
                           }
                        }
                     }
                  },
                  "application/xml":{
                     "schema":{
                        "$ref":"#/components/schemas/EasyContactApiRequest"
                     }
                  }
               }
            },
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "422":{
                  "description":"unprocessable entity",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "200":{
                  "description":"updated",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "easy_contact":{
                                 "$ref":"#/components/schemas/EasyContactApiResponse"
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/EasyContactApiResponse"
                        }
                     }
                  }
               }
            }
         },
         "delete":{
            "summary":"Destroy EasyContact",
            "tags":[
               "Easy contact"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of EasyContact",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               }
            ],
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "204":{
                  "description":"ok"
               }
            }
         }
      },
      "/easy_crm_cases.{format}":{
         "get":{
            "summary":"List of EasyCrmCases",
            "description":"For filtering send parameter `set_filter=1` and specify filters",
            "tags":[
               "Easy crm case"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"easy_query_q",
                  "description":"free-text filter of current entity",
                  "in":"query",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"set_filter",
                  "description":"enable filter through Easy Query",
                  "in":"query",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"limit",
                  "description":"the number of items to be present in the response (default is 25, maximum is 100)",
                  "in":"query",
                  "schema":{
                     "type":"integer"
                  }
               },
               {
                  "name":"offset",
                  "description":"the offset of the first object to retrieve",
                  "in":"query",
                  "schema":{
                     "type":"integer"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"ok",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "xml":{
                              "name":"easy_crm_cases",
                              "wrapped":true
                           },
                           "properties":{
                              "total_count":{
                                 "type":"number",
                                 "example":75,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "offset":{
                                 "type":"number",
                                 "example":0,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "limit":{
                                 "type":"number",
                                 "example":25,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "easy_crm_cases":{
                                 "type":"array",
                                 "items":{
                                    "$ref":"#/components/schemas/EasyCrmCaseApiResponse"
                                 }
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "type":"object",
                           "xml":{
                              "name":"easy_crm_cases",
                              "wrapped":true
                           },
                           "properties":{
                              "total_count":{
                                 "type":"number",
                                 "example":75,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "offset":{
                                 "type":"number",
                                 "example":0,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "limit":{
                                 "type":"number",
                                 "example":25,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "easy_crm_cases":{
                                 "type":"array",
                                 "items":{
                                    "$ref":"#/components/schemas/EasyCrmCaseApiResponse"
                                 }
                              }
                           }
                        }
                     }
                  }
               },
               "401":{
                  "description":"not authorized"
               }
            }
         },
         "post":{
            "summary":"Create EasyCrmCase",
            "tags":[
               "Easy crm case"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               }
            ],
            "requestBody":{
               "description":"Create EasyCrmCase",
               "required":true,
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "easy_crm_case":{
                              "$ref":"#/components/schemas/EasyCrmCaseApiRequest"
                           }
                        }
                     }
                  },
                  "application/xml":{
                     "schema":{
                        "$ref":"#/components/schemas/EasyCrmCaseApiRequest"
                     }
                  }
               }
            },
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "422":{
                  "description":"unprocessable entity",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "201":{
                  "description":"created",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "easy_crm_case":{
                                 "$ref":"#/components/schemas/EasyCrmCaseApiResponse"
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/EasyCrmCaseApiResponse"
                        }
                     }
                  }
               }
            }
         }
      },
      "/easy_crm_cases/{id}.{format}":{
         "get":{
            "summary":"Get EasyCrmCase",
            "tags":[
               "Easy crm case"
            ],
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of EasyCrmCase",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               },
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               }
            ],
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "200":{
                  "description":"detail of EasyCrmCase",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "easy_crm_case":{
                                 "$ref":"#/components/schemas/EasyCrmCaseApiResponse"
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/EasyCrmCaseApiResponse"
                        }
                     }
                  }
               }
            }
         },
         "put":{
            "summary":"Update EasyCrmCase",
            "tags":[
               "Easy crm case"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of EasyCrmCase",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               }
            ],
            "requestBody":{
               "description":"Update given EasyCrmCase",
               "required":true,
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "easy_crm_case":{
                              "$ref":"#/components/schemas/EasyCrmCaseApiRequest"
                           }
                        }
                     }
                  },
                  "application/xml":{
                     "schema":{
                        "$ref":"#/components/schemas/EasyCrmCaseApiRequest"
                     }
                  }
               }
            },
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "422":{
                  "description":"unprocessable entity",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "200":{
                  "description":"updated",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "easy_crm_case":{
                                 "$ref":"#/components/schemas/EasyCrmCaseApiResponse"
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/EasyCrmCaseApiResponse"
                        }
                     }
                  }
               }
            }
         },
         "delete":{
            "summary":"Destroy EasyCrmCase",
            "tags":[
               "Easy crm case"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of EasyCrmCase",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               }
            ],
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "204":{
                  "description":"ok"
               }
            }
         }
      },
      "/documents.{format}":{
         "get":{
            "summary":"Retrieve documents",
            "tags":[
               "Document"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               }
            ],
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "200":{
                  "description":"ok",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "documents":{
                                 "type":"array",
                                 "items":{
                                    "$ref":"#/components/schemas/DocumentApiResponse"
                                 }
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "documents":{
                                 "type":"array",
                                 "items":{
                                    "$ref":"#/components/schemas/DocumentApiResponse"
                                 }
                              }
                           }
                        }
                     }
                  }
               }
            }
         }
      },
      "/easy_entity_activities.{format}":{
         "post":{
            "summary":"Create EasyEntityActivity",
            "tags":[
               "Easy entity activity"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               }
            ],
            "requestBody":{
               "description":"Create EasyEntityActivity",
               "required":true,
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "easy_entity_activity":{
                              "$ref":"#/components/schemas/EasyEntityActivityApiRequest"
                           }
                        }
                     }
                  },
                  "application/xml":{
                     "schema":{
                        "$ref":"#/components/schemas/EasyEntityActivityApiRequest"
                     }
                  }
               }
            },
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "422":{
                  "description":"unprocessable entity",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "201":{
                  "description":"created",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "easy_entity_activity":{
                                 "$ref":"#/components/schemas/EasyEntityActivityApiResponse"
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/EasyEntityActivityApiResponse"
                        }
                     }
                  }
               }
            }
         }
      },
      "/easy_entity_activities/{id}.{format}":{
         "get":{
            "summary":"Get EasyEntityActivity",
            "tags":[
               "Easy entity activity"
            ],
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of EasyEntityActivity",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               },
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               }
            ],
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "200":{
                  "description":"detail of EasyEntityActivity",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "easy_entity_activity":{
                                 "$ref":"#/components/schemas/EasyEntityActivityApiResponse"
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/EasyEntityActivityApiResponse"
                        }
                     }
                  }
               }
            }
         },
         "put":{
            "summary":"Update EasyEntityActivity",
            "tags":[
               "Easy entity activity"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of EasyEntityActivity",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               }
            ],
            "requestBody":{
               "description":"Update given EasyEntityActivity",
               "required":true,
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "easy_entity_activity":{
                              "$ref":"#/components/schemas/EasyEntityActivityApiRequest"
                           }
                        }
                     }
                  },
                  "application/xml":{
                     "schema":{
                        "$ref":"#/components/schemas/EasyEntityActivityApiRequest"
                     }
                  }
               }
            },
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "422":{
                  "description":"unprocessable entity",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "200":{
                  "description":"updated",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "easy_entity_activity":{
                                 "$ref":"#/components/schemas/EasyEntityActivityApiResponse"
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/EasyEntityActivityApiResponse"
                        }
                     }
                  }
               }
            }
         },
         "delete":{
            "summary":"Destroy EasyEntityActivity",
            "tags":[
               "Easy entity activity"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of EasyEntityActivity",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               }
            ],
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "204":{
                  "description":"ok"
               }
            }
         }
      },
      "/easy_entity_imports/{id}/import.{format}":{
         "post":{
            "summary":"Import data",
            "tags":[
               "Easy entity import"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"id",
                  "in":"path",
                  "description":"Id of import entity",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               }
            ],
            "requestBody":{
               "required":false,
               "description":"Import data from source",
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/EasyEntityImportApiRequest"
                     }
                  },
                  "application/xml":{
                     "schema":{
                        "$ref":"#/components/schemas/EasyEntityImportApiRequest"
                     }
                  },
                  "multipart/form-data":{
                     "schema":{
                        "$ref":"#/components/schemas/EasyEntityImportApiRequest"
                     }
                  }
               }
            },
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "422":{
                  "description":"unprocessable entity",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "201":{
                  "description":"created",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/EasyEntityImportApiResponse"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/EasyEntityImportApiResponse"
                        }
                     }
                  }
               }
            }
         }
      },
      "/easy_helpdesk_projects/find_by_email.{format}":{
         "get":{
            "summary":"Get the first helpdesk project by email parameters",
            "tags":[
               "Easy helpdesk project"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"subject",
                  "in":"query",
                  "description":"Email subject",
                  "required":false,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"from",
                  "in":"query",
                  "description":"Email from",
                  "required":false,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"to",
                  "in":"query",
                  "description":"Email to",
                  "required":false,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"mailbox_username",
                  "in":"query",
                  "description":"Mailbox username",
                  "required":false,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "200":{
                  "description":"ok",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "easy_helpdesk_project":{
                                 "type":"object",
                                 "$ref":"#/components/schemas/EasyHelpdeskProjectApiResponse"
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "easy_helpdesk_project":{
                                 "type":"object",
                                 "$ref":"#/components/schemas/EasyHelpdeskProjectApiResponse"
                              }
                           }
                        }
                     }
                  }
               }
            }
         }
      },
      "/easy_knowledge_stories.{format}":{
         "get":{
            "summary":"List of EasyKnowledgeStories",
            "description":"For filtering send parameter `set_filter=1` and specify filters",
            "tags":[
               "Easy knowledge story"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"easy_query_q",
                  "description":"free-text filter of current entity",
                  "in":"query",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"set_filter",
                  "description":"enable filter through Easy Query",
                  "in":"query",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"limit",
                  "description":"the number of items to be present in the response (default is 25, maximum is 100)",
                  "in":"query",
                  "schema":{
                     "type":"integer"
                  }
               },
               {
                  "name":"offset",
                  "description":"the offset of the first object to retrieve",
                  "in":"query",
                  "schema":{
                     "type":"integer"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"ok",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "xml":{
                              "name":"easy_knowledge_stories",
                              "wrapped":true
                           },
                           "properties":{
                              "total_count":{
                                 "type":"number",
                                 "example":75,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "offset":{
                                 "type":"number",
                                 "example":0,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "limit":{
                                 "type":"number",
                                 "example":25,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "easy_knowledge_stories":{
                                 "type":"array",
                                 "items":{
                                    "$ref":"#/components/schemas/EasyKnowledgeStoryApiResponse"
                                 }
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "type":"object",
                           "xml":{
                              "name":"easy_knowledge_stories",
                              "wrapped":true
                           },
                           "properties":{
                              "total_count":{
                                 "type":"number",
                                 "example":75,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "offset":{
                                 "type":"number",
                                 "example":0,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "limit":{
                                 "type":"number",
                                 "example":25,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "easy_knowledge_stories":{
                                 "type":"array",
                                 "items":{
                                    "$ref":"#/components/schemas/EasyKnowledgeStoryApiResponse"
                                 }
                              }
                           }
                        }
                     }
                  }
               },
               "401":{
                  "description":"not authorized"
               }
            }
         },
         "post":{
            "summary":"Create EasyKnowledgeStory",
            "tags":[
               "Easy knowledge story"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"project_id",
                  "description":"The ID of associated project if you want to associate any",
                  "in":"query",
                  "schema":{
                     "type":"integer"
                  }
               },
               {
                  "name":"source_issue_id",
                  "description":"The ID of the source issue if there is any",
                  "in":"query",
                  "schema":{
                     "type":"integer"
                  }
               }
            ],
            "requestBody":{
               "description":"Create EasyKnowledgeStory",
               "required":true,
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "easy_knowledge_story":{
                              "$ref":"#/components/schemas/EasyKnowledgeStoryApiRequest"
                           }
                        }
                     }
                  },
                  "application/xml":{
                     "schema":{
                        "$ref":"#/components/schemas/EasyKnowledgeStoryApiRequest"
                     }
                  }
               }
            },
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "422":{
                  "description":"unprocessable entity",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "201":{
                  "description":"created",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "easy_knowledge_story":{
                                 "$ref":"#/components/schemas/EasyKnowledgeStoryApiResponse"
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/EasyKnowledgeStoryApiResponse"
                        }
                     }
                  }
               }
            }
         }
      },
      "/easy_knowledge_stories/{id}.{format}":{
         "get":{
            "summary":"Get EasyKnowledgeStory",
            "tags":[
               "Easy knowledge story"
            ],
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of EasyKnowledgeStory",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               },
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"include",
                  "description":"explicitly specify the associations you want to be included in the query result (separated by a comma)\n\n* **journals** ()\n* **attachments** ()",
                  "in":"query",
                  "schema":{
                     "type":"array",
                     "items":{
                        "type":"string",
                        "enum":[
                           "journals",
                           "attachments"
                        ]
                     }
                  }
               }
            ],
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "200":{
                  "description":"detail of EasyKnowledgeStory",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "easy_knowledge_story":{
                                 "$ref":"#/components/schemas/EasyKnowledgeStoryApiResponse"
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/EasyKnowledgeStoryApiResponse"
                        }
                     }
                  }
               }
            }
         },
         "put":{
            "summary":"Update EasyKnowledgeStory",
            "tags":[
               "Easy knowledge story"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of EasyKnowledgeStory",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               }
            ],
            "requestBody":{
               "description":"Update given EasyKnowledgeStory",
               "required":true,
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "easy_knowledge_story":{
                              "$ref":"#/components/schemas/EasyKnowledgeStoryApiRequest"
                           }
                        }
                     }
                  },
                  "application/xml":{
                     "schema":{
                        "$ref":"#/components/schemas/EasyKnowledgeStoryApiRequest"
                     }
                  }
               }
            },
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "422":{
                  "description":"unprocessable entity",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "204":{
                  "description":"ok"
               }
            }
         },
         "delete":{
            "summary":"Destroy EasyKnowledgeStory",
            "tags":[
               "Easy knowledge story"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of EasyKnowledgeStory",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               }
            ],
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "204":{
                  "description":"ok"
               }
            }
         }
      },
      "/easy_knowledge_stories/{id}/add_to_favorite.{format}":{
         "post":{
            "summary":"Add EasyKnowledgeStory to favorites",
            "tags":[
               "Easy knowledge story"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of EasyKnowledgeStory",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "422":{
                  "description":"unprocessable entity",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "204":{
                  "description":"ok"
               }
            }
         }
      },
      "/easy_knowledge_stories/{id}/remove_from_favorite.{format}":{
         "post":{
            "summary":"Remove EasyKnowledgeStory from favorites",
            "tags":[
               "Easy knowledge story"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of EasyKnowledgeStory",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "422":{
                  "description":"unprocessable entity",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "204":{
                  "description":"ok"
               }
            }
         }
      },
      "/easy_knowledge_stories/{id}/restore.{format}":{
         "get":{
            "summary":"Revert EasyKnowledgeStory to the specified version",
            "tags":[
               "Easy knowledge story"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of EasyKnowledgeStory",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"version_id",
                  "in":"query",
                  "description":"ID of the version (mutually exclusive with \"version\"; only one argument must be specified)",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"version",
                  "in":"query",
                  "description":"Number of the version (mutually exclusive with \"version_id\"; only one argument must be specified)",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "422":{
                  "description":"unprocessable entity",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "204":{
                  "description":"ok"
               }
            }
         }
      },
      "/easy_knowledge_stories/{id}/update_category.{format}":{
         "post":{
            "summary":"Add or remove categories from EasyKnowledgeStory",
            "tags":[
               "Easy knowledge story"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of EasyKnowledgeStory",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"category_id",
                  "in":"query",
                  "description":"ID of category to be added or removed",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"add",
                  "in":"query",
                  "description":"set to 1 to add category (mutually exclusive with \"remove\")",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"remove",
                  "in":"query",
                  "description":"set to 1 to remove category (mutually exclusive with \"add\")",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "422":{
                  "description":"unprocessable entity",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "204":{
                  "description":"ok"
               }
            }
         }
      },
      "/easy_leads.{format}":{
         "get":{
            "summary":"List of EasyLeads",
            "description":"For filtering send parameter `set_filter=1` and specify filters",
            "tags":[
               "Easy lead"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"easy_query_q",
                  "description":"free-text filter of current entity",
                  "in":"query",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"set_filter",
                  "description":"enable filter through Easy Query",
                  "in":"query",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"limit",
                  "description":"the number of items to be present in the response (default is 25, maximum is 100)",
                  "in":"query",
                  "schema":{
                     "type":"integer"
                  }
               },
               {
                  "name":"offset",
                  "description":"the offset of the first object to retrieve",
                  "in":"query",
                  "schema":{
                     "type":"integer"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"ok",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "xml":{
                              "name":"easy_leads",
                              "wrapped":true
                           },
                           "properties":{
                              "total_count":{
                                 "type":"number",
                                 "example":75,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "offset":{
                                 "type":"number",
                                 "example":0,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "limit":{
                                 "type":"number",
                                 "example":25,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "easy_leads":{
                                 "type":"array",
                                 "items":{
                                    "$ref":"#/components/schemas/EasyLeadApiResponse"
                                 }
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "type":"object",
                           "xml":{
                              "name":"easy_leads",
                              "wrapped":true
                           },
                           "properties":{
                              "total_count":{
                                 "type":"number",
                                 "example":75,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "offset":{
                                 "type":"number",
                                 "example":0,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "limit":{
                                 "type":"number",
                                 "example":25,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "easy_leads":{
                                 "type":"array",
                                 "items":{
                                    "$ref":"#/components/schemas/EasyLeadApiResponse"
                                 }
                              }
                           }
                        }
                     }
                  }
               },
               "401":{
                  "description":"not authorized"
               }
            }
         },
         "post":{
            "summary":"Create EasyLead",
            "tags":[
               "Easy lead"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               }
            ],
            "requestBody":{
               "description":"Create EasyLead",
               "required":true,
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "easy_lead":{
                              "$ref":"#/components/schemas/EasyLeadApiRequest"
                           }
                        }
                     }
                  },
                  "application/xml":{
                     "schema":{
                        "$ref":"#/components/schemas/EasyLeadApiRequest"
                     }
                  }
               }
            },
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "422":{
                  "description":"unprocessable entity",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "201":{
                  "description":"created",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "easy_lead":{
                                 "$ref":"#/components/schemas/EasyLeadApiResponse"
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/EasyLeadApiResponse"
                        }
                     }
                  }
               }
            }
         }
      },
      "/easy_leads/{id}.{format}":{
         "get":{
            "summary":"Get EasyLead",
            "tags":[
               "Easy lead"
            ],
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of EasyLead",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               },
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               }
            ],
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "200":{
                  "description":"detail of EasyLead",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "easy_lead":{
                                 "$ref":"#/components/schemas/EasyLeadApiResponse"
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/EasyLeadApiResponse"
                        }
                     }
                  }
               }
            }
         },
         "put":{
            "summary":"Update EasyLead",
            "tags":[
               "Easy lead"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of EasyLead",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               }
            ],
            "requestBody":{
               "description":"Update given EasyLead",
               "required":true,
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "easy_lead":{
                              "$ref":"#/components/schemas/EasyLeadApiRequest"
                           }
                        }
                     }
                  },
                  "application/xml":{
                     "schema":{
                        "$ref":"#/components/schemas/EasyLeadApiRequest"
                     }
                  }
               }
            },
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "422":{
                  "description":"unprocessable entity",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "200":{
                  "description":"updated",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "easy_lead":{
                                 "$ref":"#/components/schemas/EasyLeadApiResponse"
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/EasyLeadApiResponse"
                        }
                     }
                  }
               }
            }
         },
         "delete":{
            "summary":"Destroy EasyLead",
            "tags":[
               "Easy lead"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of EasyLead",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               }
            ],
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "204":{
                  "description":"ok"
               }
            }
         }
      },
      "/easy_meetings.{format}":{
         "post":{
            "summary":"Create EasyMeeting",
            "tags":[
               "EasyCalendarMeeting"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               }
            ],
            "requestBody":{
               "description":"Create EasyMeeting",
               "required":true,
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "easy_meeting":{
                              "$ref":"#/components/schemas/EasyMeetingApiRequest"
                           }
                        }
                     }
                  },
                  "application/xml":{
                     "schema":{
                        "$ref":"#/components/schemas/EasyMeetingApiRequest"
                     }
                  }
               }
            },
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "422":{
                  "description":"unprocessable entity",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "201":{
                  "description":"created",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "easy_meeting":{
                                 "$ref":"#/components/schemas/EasyMeetingApiResponse"
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/EasyMeetingApiResponse"
                        }
                     }
                  }
               }
            }
         }
      },
      "/easy_meetings/{id}.{format}":{
         "get":{
            "summary":"Get EasyMeeting",
            "tags":[
               "EasyCalendarMeeting"
            ],
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of EasyMeeting",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               },
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               }
            ],
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "200":{
                  "description":"detail of EasyMeeting",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "easy_meeting":{
                                 "$ref":"#/components/schemas/EasyMeetingApiResponse"
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/EasyMeetingApiResponse"
                        }
                     }
                  }
               }
            }
         },
         "put":{
            "summary":"Update EasyMeeting",
            "tags":[
               "EasyCalendarMeeting"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of EasyMeeting",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               }
            ],
            "requestBody":{
               "description":"Update given EasyMeeting",
               "required":true,
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "easy_meeting":{
                              "$ref":"#/components/schemas/EasyMeetingApiRequest"
                           }
                        }
                     }
                  },
                  "application/xml":{
                     "schema":{
                        "$ref":"#/components/schemas/EasyMeetingApiRequest"
                     }
                  }
               }
            },
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "422":{
                  "description":"unprocessable entity",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "200":{
                  "description":"updated",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "easy_meeting":{
                                 "$ref":"#/components/schemas/EasyMeetingApiResponse"
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/EasyMeetingApiResponse"
                        }
                     }
                  }
               }
            }
         },
         "delete":{
            "summary":"Destroy EasyMeeting",
            "tags":[
               "EasyCalendarMeeting"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of EasyMeeting",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               }
            ],
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "204":{
                  "description":"ok"
               }
            }
         }
      },
      "/easy_calendar/feed.json":{
         "get":{
            "summary":"List of Easy Meetings",
            "tags":[
               "EasyCalendarMeeting"
            ],
            "parameters":[
               {
                  "name":"start",
                  "required":true,
                  "description":"get meetings only starts in this time",
                  "in":"query",
                  "schema":{
                     "type":"string",
                     "description":"Can be string **today** or Time in %s format! Example for 2020-04-29 11:50:27 +02:00",
                     "example":"1588153643"
                  }
               },
               {
                  "name":"end",
                  "required":true,
                  "description":"get meetings only ends in this time",
                  "in":"query",
                  "schema":{
                     "type":"string",
                     "description":"Can be string **today** or Time in %s format! Example for 2020-04-29 11:50:27 +02:00",
                     "example":"1588153643"
                  }
               },
               {
                  "name":"enabled_calendars",
                  "description":"list of types - Meetings, Attendance, etc.... by default its `easy_meeting_calendar`",
                  "in":"query",
                  "schema":{
                     "type":"array",
                     "items":{
                        "type":"string",
                        "enum":[
                           "easy_holiday_calendar",
                           "easy_meeting_calendar",
                           "easy_meeting_author_calendar"
                        ],
                        "example":"easy_meeting_calendar"
                     }
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"ok",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/EasyCalendarMeeting"
                           }
                        }
                     }
                  }
               },
               "401":{
                  "description":"not authorized"
               }
            }
         }
      },
      "/projects/{project_id}/easy_mind_maps.{format}":{
         "get":{
            "summary":"List of EasyMindMaps",
            "description":"For filtering send parameter `set_filter=1` and specify filters",
            "tags":[
               "Easy mind map"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"easy_query_q",
                  "description":"free-text filter of current entity",
                  "in":"query",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"set_filter",
                  "description":"enable filter through Easy Query",
                  "in":"query",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"limit",
                  "description":"the number of items to be present in the response (default is 25, maximum is 100)",
                  "in":"query",
                  "schema":{
                     "type":"integer"
                  }
               },
               {
                  "name":"offset",
                  "description":"the offset of the first object to retrieve",
                  "in":"query",
                  "schema":{
                     "type":"integer"
                  }
               },
               {
                  "name":"project_id",
                  "description":"ID of Project",
                  "in":"path",
                  "schema":{
                     "type":"integer"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"ok",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "xml":{
                              "name":"easy_mind_maps",
                              "wrapped":true
                           },
                           "properties":{
                              "total_count":{
                                 "type":"number",
                                 "example":75,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "offset":{
                                 "type":"number",
                                 "example":0,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "limit":{
                                 "type":"number",
                                 "example":25,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "easy_mind_maps":{
                                 "type":"array",
                                 "items":{
                                    "$ref":"#/components/schemas/EasyMindMapApiResponse"
                                 }
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "type":"object",
                           "xml":{
                              "name":"easy_mind_maps",
                              "wrapped":true
                           },
                           "properties":{
                              "total_count":{
                                 "type":"number",
                                 "example":75,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "offset":{
                                 "type":"number",
                                 "example":0,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "limit":{
                                 "type":"number",
                                 "example":25,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "easy_mind_maps":{
                                 "type":"array",
                                 "items":{
                                    "$ref":"#/components/schemas/EasyMindMapApiResponse"
                                 }
                              }
                           }
                        }
                     }
                  }
               },
               "401":{
                  "description":"not authorized"
               }
            }
         },
         "post":{
            "summary":"Create EasyMindMap",
            "tags":[
               "Easy mind map"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"project_id",
                  "description":"ID of Project",
                  "in":"path",
                  "schema":{
                     "type":"integer"
                  }
               }
            ],
            "requestBody":{
               "description":"Create EasyMindMap",
               "required":true,
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "easy_mind_map":{
                              "$ref":"#/components/schemas/EasyMindMapApiRequest"
                           }
                        }
                     }
                  },
                  "application/xml":{
                     "schema":{
                        "$ref":"#/components/schemas/EasyMindMapApiRequest"
                     }
                  }
               }
            },
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "422":{
                  "description":"unprocessable entity",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "201":{
                  "description":"created",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "easy_mind_map":{
                                 "$ref":"#/components/schemas/EasyMindMapApiResponse"
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/EasyMindMapApiResponse"
                        }
                     }
                  }
               }
            }
         }
      },
      "/projects/{project_id}/easy_mind_maps/{id}.{format}":{
         "get":{
            "summary":"Get EasyMindMap",
            "tags":[
               "Easy mind map"
            ],
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of EasyMindMap",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               },
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"project_id",
                  "description":"ID of Project",
                  "in":"path",
                  "schema":{
                     "type":"integer"
                  }
               }
            ],
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "200":{
                  "description":"detail of EasyMindMap",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "easy_mind_map":{
                                 "$ref":"#/components/schemas/EasyMindMapApiResponse"
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/EasyMindMapApiResponse"
                        }
                     }
                  }
               }
            }
         },
         "put":{
            "summary":"Update EasyMindMap",
            "tags":[
               "Easy mind map"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of EasyMindMap",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               },
               {
                  "name":"project_id",
                  "description":"ID of Project",
                  "in":"path",
                  "schema":{
                     "type":"integer"
                  }
               }
            ],
            "requestBody":{
               "description":"Update given EasyMindMap",
               "required":true,
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "easy_mind_map":{
                              "$ref":"#/components/schemas/EasyMindMapApiRequest"
                           }
                        }
                     }
                  },
                  "application/xml":{
                     "schema":{
                        "$ref":"#/components/schemas/EasyMindMapApiRequest"
                     }
                  }
               }
            },
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "422":{
                  "description":"unprocessable entity",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "200":{
                  "description":"updated",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "easy_mind_map":{
                                 "$ref":"#/components/schemas/EasyMindMapApiResponse"
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/EasyMindMapApiResponse"
                        }
                     }
                  }
               }
            }
         },
         "delete":{
            "summary":"Destroy EasyMindMap",
            "tags":[
               "Easy mind map"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of EasyMindMap",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               },
               {
                  "name":"project_id",
                  "description":"ID of Project",
                  "in":"path",
                  "schema":{
                     "type":"integer"
                  }
               }
            ],
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "204":{
                  "description":"ok"
               }
            }
         }
      },
      "/easy_money_expected_expenses.{format}":{
         "get":{
            "summary":"List of EasyMoneyExpectedExpenses",
            "description":"For filtering send parameter `set_filter=1` and specify filters",
            "tags":[
               "Easy money expected expense"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"easy_query_q",
                  "description":"free-text filter of current entity",
                  "in":"query",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"set_filter",
                  "description":"enable filter through Easy Query",
                  "in":"query",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"limit",
                  "description":"the number of items to be present in the response (default is 25, maximum is 100)",
                  "in":"query",
                  "schema":{
                     "type":"integer"
                  }
               },
               {
                  "name":"offset",
                  "description":"the offset of the first object to retrieve",
                  "in":"query",
                  "schema":{
                     "type":"integer"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"ok",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "xml":{
                              "name":"easy_money_expected_expenses",
                              "wrapped":true
                           },
                           "properties":{
                              "total_count":{
                                 "type":"number",
                                 "example":75,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "offset":{
                                 "type":"number",
                                 "example":0,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "limit":{
                                 "type":"number",
                                 "example":25,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "easy_money_expected_expenses":{
                                 "type":"array",
                                 "items":{
                                    "$ref":"#/components/schemas/EasyMoneyExpectedExpenseApiResponse"
                                 }
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "type":"object",
                           "xml":{
                              "name":"easy_money_expected_expenses",
                              "wrapped":true
                           },
                           "properties":{
                              "total_count":{
                                 "type":"number",
                                 "example":75,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "offset":{
                                 "type":"number",
                                 "example":0,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "limit":{
                                 "type":"number",
                                 "example":25,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "easy_money_expected_expenses":{
                                 "type":"array",
                                 "items":{
                                    "$ref":"#/components/schemas/EasyMoneyExpectedExpenseApiResponse"
                                 }
                              }
                           }
                        }
                     }
                  }
               },
               "401":{
                  "description":"not authorized"
               }
            }
         },
         "post":{
            "summary":"Create EasyMoneyExpectedExpense",
            "tags":[
               "Easy money expected expense"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               }
            ],
            "requestBody":{
               "description":"Create EasyMoneyExpectedExpense",
               "required":true,
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "easy_money":{
                              "$ref":"#/components/schemas/EasyMoneyExpectedExpenseApiRequest"
                           }
                        }
                     }
                  },
                  "application/xml":{
                     "schema":{
                        "$ref":"#/components/schemas/EasyMoneyExpectedExpenseApiRequest"
                     }
                  }
               }
            },
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "422":{
                  "description":"unprocessable entity",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "201":{
                  "description":"created",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "easy_money_expected_expense":{
                                 "$ref":"#/components/schemas/EasyMoneyExpectedExpenseApiResponse"
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/EasyMoneyExpectedExpenseApiResponse"
                        }
                     }
                  }
               }
            }
         }
      },
      "/easy_money_expected_expenses/{id}.{format}":{
         "get":{
            "summary":"Get EasyMoneyExpectedExpense",
            "tags":[
               "Easy money expected expense"
            ],
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of EasyMoneyExpectedExpense",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               },
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               }
            ],
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "200":{
                  "description":"detail of EasyMoneyExpectedExpense",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "easy_money_expected_expense":{
                                 "$ref":"#/components/schemas/EasyMoneyExpectedExpenseApiResponse"
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/EasyMoneyExpectedExpenseApiResponse"
                        }
                     }
                  }
               }
            }
         },
         "put":{
            "summary":"Update EasyMoneyExpectedExpense",
            "tags":[
               "Easy money expected expense"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of EasyMoneyExpectedExpense",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               }
            ],
            "requestBody":{
               "description":"Update given EasyMoneyExpectedExpense",
               "required":true,
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "easy_money":{
                              "$ref":"#/components/schemas/EasyMoneyExpectedExpenseApiRequest"
                           }
                        }
                     }
                  },
                  "application/xml":{
                     "schema":{
                        "$ref":"#/components/schemas/EasyMoneyExpectedExpenseApiRequest"
                     }
                  }
               }
            },
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "422":{
                  "description":"unprocessable entity",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "204":{
                  "description":"ok"
               }
            }
         },
         "delete":{
            "summary":"Destroy EasyMoneyExpectedExpense",
            "tags":[
               "Easy money expected expense"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of EasyMoneyExpectedExpense",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               }
            ],
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "204":{
                  "description":"ok"
               }
            }
         }
      },
      "/easy_money_expected_revenues.{format}":{
         "get":{
            "summary":"List of EasyMoneyExpectedRevenues",
            "description":"For filtering send parameter `set_filter=1` and specify filters",
            "tags":[
               "Easy money expected revenue"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"easy_query_q",
                  "description":"free-text filter of current entity",
                  "in":"query",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"set_filter",
                  "description":"enable filter through Easy Query",
                  "in":"query",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"limit",
                  "description":"the number of items to be present in the response (default is 25, maximum is 100)",
                  "in":"query",
                  "schema":{
                     "type":"integer"
                  }
               },
               {
                  "name":"offset",
                  "description":"the offset of the first object to retrieve",
                  "in":"query",
                  "schema":{
                     "type":"integer"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"ok",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "xml":{
                              "name":"easy_money_expected_revenues",
                              "wrapped":true
                           },
                           "properties":{
                              "total_count":{
                                 "type":"number",
                                 "example":75,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "offset":{
                                 "type":"number",
                                 "example":0,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "limit":{
                                 "type":"number",
                                 "example":25,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "easy_money_expected_revenues":{
                                 "type":"array",
                                 "items":{
                                    "$ref":"#/components/schemas/EasyMoneyExpectedRevenueApiResponse"
                                 }
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "type":"object",
                           "xml":{
                              "name":"easy_money_expected_revenues",
                              "wrapped":true
                           },
                           "properties":{
                              "total_count":{
                                 "type":"number",
                                 "example":75,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "offset":{
                                 "type":"number",
                                 "example":0,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "limit":{
                                 "type":"number",
                                 "example":25,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "easy_money_expected_revenues":{
                                 "type":"array",
                                 "items":{
                                    "$ref":"#/components/schemas/EasyMoneyExpectedRevenueApiResponse"
                                 }
                              }
                           }
                        }
                     }
                  }
               },
               "401":{
                  "description":"not authorized"
               }
            }
         },
         "post":{
            "summary":"Create EasyMoneyExpectedRevenue",
            "tags":[
               "Easy money expected revenue"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               }
            ],
            "requestBody":{
               "description":"Create EasyMoneyExpectedRevenue",
               "required":true,
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "easy_money":{
                              "$ref":"#/components/schemas/EasyMoneyExpectedRevenueApiRequest"
                           }
                        }
                     }
                  },
                  "application/xml":{
                     "schema":{
                        "$ref":"#/components/schemas/EasyMoneyExpectedRevenueApiRequest"
                     }
                  }
               }
            },
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "422":{
                  "description":"unprocessable entity",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "201":{
                  "description":"created",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "easy_money_expected_revenue":{
                                 "$ref":"#/components/schemas/EasyMoneyExpectedRevenueApiResponse"
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/EasyMoneyExpectedRevenueApiResponse"
                        }
                     }
                  }
               }
            }
         }
      },
      "/easy_money_expected_revenues/{id}.{format}":{
         "get":{
            "summary":"Get EasyMoneyExpectedRevenue",
            "tags":[
               "Easy money expected revenue"
            ],
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of EasyMoneyExpectedRevenue",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               },
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               }
            ],
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "200":{
                  "description":"detail of EasyMoneyExpectedRevenue",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "easy_money_expected_revenue":{
                                 "$ref":"#/components/schemas/EasyMoneyExpectedRevenueApiResponse"
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/EasyMoneyExpectedRevenueApiResponse"
                        }
                     }
                  }
               }
            }
         },
         "put":{
            "summary":"Update EasyMoneyExpectedRevenue",
            "tags":[
               "Easy money expected revenue"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of EasyMoneyExpectedRevenue",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               }
            ],
            "requestBody":{
               "description":"Update given EasyMoneyExpectedRevenue",
               "required":true,
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "easy_money":{
                              "$ref":"#/components/schemas/EasyMoneyExpectedRevenueApiRequest"
                           }
                        }
                     }
                  },
                  "application/xml":{
                     "schema":{
                        "$ref":"#/components/schemas/EasyMoneyExpectedRevenueApiRequest"
                     }
                  }
               }
            },
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "422":{
                  "description":"unprocessable entity",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "204":{
                  "description":"ok"
               }
            }
         },
         "delete":{
            "summary":"Destroy EasyMoneyExpectedRevenue",
            "tags":[
               "Easy money expected revenue"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of EasyMoneyExpectedRevenue",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               }
            ],
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "204":{
                  "description":"ok"
               }
            }
         }
      },
      "/easy_money_other_expenses.{format}":{
         "get":{
            "summary":"List of EasyMoneyOtherExpenses",
            "description":"For filtering send parameter `set_filter=1` and specify filters",
            "tags":[
               "Easy money other expense"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"easy_query_q",
                  "description":"free-text filter of current entity",
                  "in":"query",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"set_filter",
                  "description":"enable filter through Easy Query",
                  "in":"query",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"limit",
                  "description":"the number of items to be present in the response (default is 25, maximum is 100)",
                  "in":"query",
                  "schema":{
                     "type":"integer"
                  }
               },
               {
                  "name":"offset",
                  "description":"the offset of the first object to retrieve",
                  "in":"query",
                  "schema":{
                     "type":"integer"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"ok",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "xml":{
                              "name":"easy_money_other_expenses",
                              "wrapped":true
                           },
                           "properties":{
                              "total_count":{
                                 "type":"number",
                                 "example":75,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "offset":{
                                 "type":"number",
                                 "example":0,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "limit":{
                                 "type":"number",
                                 "example":25,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "easy_money_other_expenses":{
                                 "type":"array",
                                 "items":{
                                    "$ref":"#/components/schemas/EasyMoneyOtherExpenseApiResponse"
                                 }
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "type":"object",
                           "xml":{
                              "name":"easy_money_other_expenses",
                              "wrapped":true
                           },
                           "properties":{
                              "total_count":{
                                 "type":"number",
                                 "example":75,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "offset":{
                                 "type":"number",
                                 "example":0,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "limit":{
                                 "type":"number",
                                 "example":25,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "easy_money_other_expenses":{
                                 "type":"array",
                                 "items":{
                                    "$ref":"#/components/schemas/EasyMoneyOtherExpenseApiResponse"
                                 }
                              }
                           }
                        }
                     }
                  }
               },
               "401":{
                  "description":"not authorized"
               }
            }
         },
         "post":{
            "summary":"Create EasyMoneyOtherExpense",
            "tags":[
               "Easy money other expense"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               }
            ],
            "requestBody":{
               "description":"Create EasyMoneyOtherExpense",
               "required":true,
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "easy_money":{
                              "$ref":"#/components/schemas/EasyMoneyOtherExpenseApiRequest"
                           }
                        }
                     }
                  },
                  "application/xml":{
                     "schema":{
                        "$ref":"#/components/schemas/EasyMoneyOtherExpenseApiRequest"
                     }
                  }
               }
            },
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "422":{
                  "description":"unprocessable entity",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "201":{
                  "description":"created",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "easy_money_other_expense":{
                                 "$ref":"#/components/schemas/EasyMoneyOtherExpenseApiResponse"
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/EasyMoneyOtherExpenseApiResponse"
                        }
                     }
                  }
               }
            }
         }
      },
      "/easy_money_other_expenses/{id}.{format}":{
         "get":{
            "summary":"Get EasyMoneyOtherExpense",
            "tags":[
               "Easy money other expense"
            ],
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of EasyMoneyOtherExpense",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               },
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               }
            ],
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "200":{
                  "description":"detail of EasyMoneyOtherExpense",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "easy_money_other_expense":{
                                 "$ref":"#/components/schemas/EasyMoneyOtherExpenseApiResponse"
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/EasyMoneyOtherExpenseApiResponse"
                        }
                     }
                  }
               }
            }
         },
         "put":{
            "summary":"Update EasyMoneyOtherExpense",
            "tags":[
               "Easy money other expense"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of EasyMoneyOtherExpense",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               }
            ],
            "requestBody":{
               "description":"Update given EasyMoneyOtherExpense",
               "required":true,
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "easy_money":{
                              "$ref":"#/components/schemas/EasyMoneyOtherExpenseApiRequest"
                           }
                        }
                     }
                  },
                  "application/xml":{
                     "schema":{
                        "$ref":"#/components/schemas/EasyMoneyOtherExpenseApiRequest"
                     }
                  }
               }
            },
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "422":{
                  "description":"unprocessable entity",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "204":{
                  "description":"ok"
               }
            }
         },
         "delete":{
            "summary":"Destroy EasyMoneyOtherExpense",
            "tags":[
               "Easy money other expense"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of EasyMoneyOtherExpense",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               }
            ],
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "204":{
                  "description":"ok"
               }
            }
         }
      },
      "/easy_money_other_revenues.{format}":{
         "get":{
            "summary":"List of EasyMoneyOtherRevenues",
            "description":"For filtering send parameter `set_filter=1` and specify filters",
            "tags":[
               "Easy money other revenue"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"easy_query_q",
                  "description":"free-text filter of current entity",
                  "in":"query",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"set_filter",
                  "description":"enable filter through Easy Query",
                  "in":"query",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"limit",
                  "description":"the number of items to be present in the response (default is 25, maximum is 100)",
                  "in":"query",
                  "schema":{
                     "type":"integer"
                  }
               },
               {
                  "name":"offset",
                  "description":"the offset of the first object to retrieve",
                  "in":"query",
                  "schema":{
                     "type":"integer"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"ok",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "xml":{
                              "name":"easy_money_other_revenues",
                              "wrapped":true
                           },
                           "properties":{
                              "total_count":{
                                 "type":"number",
                                 "example":75,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "offset":{
                                 "type":"number",
                                 "example":0,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "limit":{
                                 "type":"number",
                                 "example":25,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "easy_money_other_revenues":{
                                 "type":"array",
                                 "items":{
                                    "$ref":"#/components/schemas/EasyMoneyOtherRevenueApiResponse"
                                 }
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "type":"object",
                           "xml":{
                              "name":"easy_money_other_revenues",
                              "wrapped":true
                           },
                           "properties":{
                              "total_count":{
                                 "type":"number",
                                 "example":75,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "offset":{
                                 "type":"number",
                                 "example":0,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "limit":{
                                 "type":"number",
                                 "example":25,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "easy_money_other_revenues":{
                                 "type":"array",
                                 "items":{
                                    "$ref":"#/components/schemas/EasyMoneyOtherRevenueApiResponse"
                                 }
                              }
                           }
                        }
                     }
                  }
               },
               "401":{
                  "description":"not authorized"
               }
            }
         },
         "post":{
            "summary":"Create EasyMoneyOtherRevenue",
            "tags":[
               "Easy money other revenue"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               }
            ],
            "requestBody":{
               "description":"Create EasyMoneyOtherRevenue",
               "required":true,
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "easy_money":{
                              "$ref":"#/components/schemas/EasyMoneyOtherRevenueApiRequest"
                           }
                        }
                     }
                  },
                  "application/xml":{
                     "schema":{
                        "$ref":"#/components/schemas/EasyMoneyOtherRevenueApiRequest"
                     }
                  }
               }
            },
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "422":{
                  "description":"unprocessable entity",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "201":{
                  "description":"created",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "easy_money_other_revenue":{
                                 "$ref":"#/components/schemas/EasyMoneyOtherRevenueApiResponse"
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/EasyMoneyOtherRevenueApiResponse"
                        }
                     }
                  }
               }
            }
         }
      },
      "/easy_money_other_revenues/{id}.{format}":{
         "get":{
            "summary":"Get EasyMoneyOtherRevenue",
            "tags":[
               "Easy money other revenue"
            ],
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of EasyMoneyOtherRevenue",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               },
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               }
            ],
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "200":{
                  "description":"detail of EasyMoneyOtherRevenue",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "easy_money_other_revenue":{
                                 "$ref":"#/components/schemas/EasyMoneyOtherRevenueApiResponse"
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/EasyMoneyOtherRevenueApiResponse"
                        }
                     }
                  }
               }
            }
         },
         "put":{
            "summary":"Update EasyMoneyOtherRevenue",
            "tags":[
               "Easy money other revenue"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of EasyMoneyOtherRevenue",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               }
            ],
            "requestBody":{
               "description":"Update given EasyMoneyOtherRevenue",
               "required":true,
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "easy_money":{
                              "$ref":"#/components/schemas/EasyMoneyOtherRevenueApiRequest"
                           }
                        }
                     }
                  },
                  "application/xml":{
                     "schema":{
                        "$ref":"#/components/schemas/EasyMoneyOtherRevenueApiRequest"
                     }
                  }
               }
            },
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "422":{
                  "description":"unprocessable entity",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "204":{
                  "description":"ok"
               }
            }
         },
         "delete":{
            "summary":"Destroy EasyMoneyOtherRevenue",
            "tags":[
               "Easy money other revenue"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of EasyMoneyOtherRevenue",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               }
            ],
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "204":{
                  "description":"ok"
               }
            }
         }
      },
      "/easy_one_time_contracts.{format}":{
         "get":{
            "summary":"List of EasyOneTimeContracts",
            "description":"For filtering send parameter `set_filter=1` and specify filters",
            "tags":[
               "Easy one time contract"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"easy_query_q",
                  "description":"free-text filter of current entity",
                  "in":"query",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"set_filter",
                  "description":"enable filter through Easy Query",
                  "in":"query",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"limit",
                  "description":"the number of items to be present in the response (default is 25, maximum is 100)",
                  "in":"query",
                  "schema":{
                     "type":"integer"
                  }
               },
               {
                  "name":"offset",
                  "description":"the offset of the first object to retrieve",
                  "in":"query",
                  "schema":{
                     "type":"integer"
                  }
               },
               {
                  "name":"include",
                  "description":"explicitly specify the associations you want to be included in the query result (separated by a comma)\n\n* **journals** (Include all journals with details)\n* **prices** (Include price book prices)",
                  "in":"query",
                  "schema":{
                     "type":"array",
                     "items":{
                        "type":"string",
                        "enum":[
                           "journals",
                           "prices"
                        ]
                     }
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"ok",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "xml":{
                              "name":"easy_one_time_contracts",
                              "wrapped":true
                           },
                           "properties":{
                              "total_count":{
                                 "type":"number",
                                 "example":75,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "offset":{
                                 "type":"number",
                                 "example":0,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "limit":{
                                 "type":"number",
                                 "example":25,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "easy_one_time_contracts":{
                                 "type":"array",
                                 "items":{
                                    "$ref":"#/components/schemas/EasyOneTimeContractApiResponse"
                                 }
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "type":"object",
                           "xml":{
                              "name":"easy_one_time_contracts",
                              "wrapped":true
                           },
                           "properties":{
                              "total_count":{
                                 "type":"number",
                                 "example":75,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "offset":{
                                 "type":"number",
                                 "example":0,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "limit":{
                                 "type":"number",
                                 "example":25,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "easy_one_time_contracts":{
                                 "type":"array",
                                 "items":{
                                    "$ref":"#/components/schemas/EasyOneTimeContractApiResponse"
                                 }
                              }
                           }
                        }
                     }
                  }
               },
               "401":{
                  "description":"not authorized"
               }
            }
         }
      },
      "/easy_one_time_contracts/{id}.{format}":{
         "get":{
            "summary":"Get EasyOneTimeContract",
            "tags":[
               "Easy one time contract"
            ],
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of EasyOneTimeContract",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               },
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"include",
                  "description":"explicitly specify the associations you want to be included in the query result (separated by a comma)\n\n* **journals** (Include all journals with details)\n* **prices** (Include price book prices)",
                  "in":"query",
                  "schema":{
                     "type":"array",
                     "items":{
                        "type":"string",
                        "enum":[
                           "journals",
                           "prices"
                        ]
                     }
                  }
               }
            ],
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "200":{
                  "description":"detail of EasyOneTimeContract",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "easy_one_time_contract":{
                                 "$ref":"#/components/schemas/EasyOneTimeContractApiResponse"
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/EasyOneTimeContractApiResponse"
                        }
                     }
                  }
               }
            }
         }
      },
      "/easy_partners.{format}":{
         "get":{
            "summary":"List of EasyPartners",
            "description":"For filtering send parameter `set_filter=1` and specify filters",
            "tags":[
               "Easy partner"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"easy_query_q",
                  "description":"free-text filter of current entity",
                  "in":"query",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"set_filter",
                  "description":"enable filter through Easy Query",
                  "in":"query",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"limit",
                  "description":"the number of items to be present in the response (default is 25, maximum is 100)",
                  "in":"query",
                  "schema":{
                     "type":"integer"
                  }
               },
               {
                  "name":"offset",
                  "description":"the offset of the first object to retrieve",
                  "in":"query",
                  "schema":{
                     "type":"integer"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"ok",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "xml":{
                              "name":"easy_partners",
                              "wrapped":true
                           },
                           "properties":{
                              "total_count":{
                                 "type":"number",
                                 "example":75,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "offset":{
                                 "type":"number",
                                 "example":0,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "limit":{
                                 "type":"number",
                                 "example":25,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "easy_partners":{
                                 "type":"array",
                                 "items":{
                                    "$ref":"#/components/schemas/EasyPartnerApiResponse"
                                 }
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "type":"object",
                           "xml":{
                              "name":"easy_partners",
                              "wrapped":true
                           },
                           "properties":{
                              "total_count":{
                                 "type":"number",
                                 "example":75,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "offset":{
                                 "type":"number",
                                 "example":0,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "limit":{
                                 "type":"number",
                                 "example":25,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "easy_partners":{
                                 "type":"array",
                                 "items":{
                                    "$ref":"#/components/schemas/EasyPartnerApiResponse"
                                 }
                              }
                           }
                        }
                     }
                  }
               },
               "401":{
                  "description":"not authorized"
               }
            }
         },
         "post":{
            "summary":"Create EasyPartner",
            "tags":[
               "Easy partner"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               }
            ],
            "requestBody":{
               "description":"Create EasyPartner",
               "required":true,
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "easy_partner":{
                              "$ref":"#/components/schemas/EasyPartnerApiRequest"
                           }
                        }
                     }
                  },
                  "application/xml":{
                     "schema":{
                        "$ref":"#/components/schemas/EasyPartnerApiRequest"
                     }
                  }
               }
            },
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "422":{
                  "description":"unprocessable entity",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "201":{
                  "description":"created",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "easy_partner":{
                                 "$ref":"#/components/schemas/EasyPartnerApiResponse"
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/EasyPartnerApiResponse"
                        }
                     }
                  }
               }
            }
         }
      },
      "/easy_partners/{id}.{format}":{
         "get":{
            "summary":"Get EasyPartner",
            "tags":[
               "Easy partner"
            ],
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of EasyPartner",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               },
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               }
            ],
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "200":{
                  "description":"detail of EasyPartner",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "easy_partner":{
                                 "$ref":"#/components/schemas/EasyPartnerApiResponse"
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/EasyPartnerApiResponse"
                        }
                     }
                  }
               }
            }
         },
         "put":{
            "summary":"Update EasyPartner",
            "tags":[
               "Easy partner"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of EasyPartner",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               }
            ],
            "requestBody":{
               "description":"Update given EasyPartner",
               "required":true,
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "easy_partner":{
                              "$ref":"#/components/schemas/EasyPartnerApiRequest"
                           }
                        }
                     }
                  },
                  "application/xml":{
                     "schema":{
                        "$ref":"#/components/schemas/EasyPartnerApiRequest"
                     }
                  }
               }
            },
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "422":{
                  "description":"unprocessable entity",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "200":{
                  "description":"updated",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "easy_partner":{
                                 "$ref":"#/components/schemas/EasyPartnerApiResponse"
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/EasyPartnerApiResponse"
                        }
                     }
                  }
               }
            }
         },
         "delete":{
            "summary":"Destroy EasyPartner",
            "tags":[
               "Easy partner"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of EasyPartner",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               }
            ],
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "204":{
                  "description":"ok"
               }
            }
         }
      },
      "/easy_personal_contacts.{format}":{
         "get":{
            "summary":"List of EasyPersonalContacts",
            "description":"For filtering send parameter `set_filter=1` and specify filters",
            "tags":[
               "Easy personal contact"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"easy_query_q",
                  "description":"free-text filter of current entity",
                  "in":"query",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"set_filter",
                  "description":"enable filter through Easy Query",
                  "in":"query",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"limit",
                  "description":"the number of items to be present in the response (default is 25, maximum is 100)",
                  "in":"query",
                  "schema":{
                     "type":"integer"
                  }
               },
               {
                  "name":"offset",
                  "description":"the offset of the first object to retrieve",
                  "in":"query",
                  "schema":{
                     "type":"integer"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"ok",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "xml":{
                              "name":"easy_personal_contacts",
                              "wrapped":true
                           },
                           "properties":{
                              "total_count":{
                                 "type":"number",
                                 "example":75,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "offset":{
                                 "type":"number",
                                 "example":0,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "limit":{
                                 "type":"number",
                                 "example":25,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "easy_personal_contacts":{
                                 "type":"array",
                                 "items":{
                                    "$ref":"#/components/schemas/EasyPersonalContactApiResponse"
                                 }
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "type":"object",
                           "xml":{
                              "name":"easy_personal_contacts",
                              "wrapped":true
                           },
                           "properties":{
                              "total_count":{
                                 "type":"number",
                                 "example":75,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "offset":{
                                 "type":"number",
                                 "example":0,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "limit":{
                                 "type":"number",
                                 "example":25,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "easy_personal_contacts":{
                                 "type":"array",
                                 "items":{
                                    "$ref":"#/components/schemas/EasyPersonalContactApiResponse"
                                 }
                              }
                           }
                        }
                     }
                  }
               },
               "401":{
                  "description":"not authorized"
               }
            }
         },
         "post":{
            "summary":"Create EasyPersonalContact",
            "tags":[
               "Easy personal contact"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               }
            ],
            "requestBody":{
               "description":"Create EasyPersonalContact",
               "required":true,
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "easy_personal_contact":{
                              "$ref":"#/components/schemas/EasyPersonalContactApiRequest"
                           }
                        }
                     }
                  },
                  "application/xml":{
                     "schema":{
                        "$ref":"#/components/schemas/EasyPersonalContactApiRequest"
                     }
                  }
               }
            },
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "422":{
                  "description":"unprocessable entity",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "201":{
                  "description":"created",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "easy_personal_contact":{
                                 "$ref":"#/components/schemas/EasyPersonalContactApiResponse"
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/EasyPersonalContactApiResponse"
                        }
                     }
                  }
               }
            }
         }
      },
      "/easy_personal_contacts/{id}.{format}":{
         "get":{
            "summary":"Get EasyPersonalContact",
            "tags":[
               "Easy personal contact"
            ],
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of EasyPersonalContact",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               },
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               }
            ],
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "200":{
                  "description":"detail of EasyPersonalContact",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "easy_personal_contact":{
                                 "$ref":"#/components/schemas/EasyPersonalContactApiResponse"
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/EasyPersonalContactApiResponse"
                        }
                     }
                  }
               }
            }
         },
         "put":{
            "summary":"Update EasyPersonalContact",
            "tags":[
               "Easy personal contact"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of EasyPersonalContact",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               }
            ],
            "requestBody":{
               "description":"Update given EasyPersonalContact",
               "required":true,
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "easy_personal_contact":{
                              "$ref":"#/components/schemas/EasyPersonalContactApiRequest"
                           }
                        }
                     }
                  },
                  "application/xml":{
                     "schema":{
                        "$ref":"#/components/schemas/EasyPersonalContactApiRequest"
                     }
                  }
               }
            },
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "422":{
                  "description":"unprocessable entity",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "200":{
                  "description":"updated",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "easy_personal_contact":{
                                 "$ref":"#/components/schemas/EasyPersonalContactApiResponse"
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/EasyPersonalContactApiResponse"
                        }
                     }
                  }
               }
            }
         },
         "delete":{
            "summary":"Destroy EasyPersonalContact",
            "tags":[
               "Easy personal contact"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of EasyPersonalContact",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               }
            ],
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "204":{
                  "description":"ok"
               }
            }
         }
      },
      "/easy_price_book_quotes/{id}.{format}":{
         "get":{
            "summary":"Get EasyPriceBookQuote",
            "tags":[
               "Easy price book quote"
            ],
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of EasyPriceBookQuote",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               },
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               }
            ],
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "200":{
                  "description":"detail of EasyPriceBookQuote",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "easy_price_book_quote":{
                                 "$ref":"#/components/schemas/EasyPriceBookQuoteApiResponse"
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/EasyPriceBookQuoteApiResponse"
                        }
                     }
                  }
               }
            }
         }
      },
      "/admin/easy_settings.{format}":{
         "post":{
            "summary":"Create EasySetting",
            "tags":[
               "Easy setting"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               }
            ],
            "requestBody":{
               "description":"Create EasySetting",
               "required":true,
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "easy_setting":{
                              "$ref":"#/components/schemas/EasySetting"
                           }
                        }
                     }
                  },
                  "application/xml":{
                     "schema":{
                        "$ref":"#/components/schemas/EasySetting"
                     }
                  }
               }
            },
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "422":{
                  "description":"unprocessable entity",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "201":{
                  "description":"created",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "easy_setting":{
                                 "$ref":"#/components/schemas/EasySetting"
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/EasySetting"
                        }
                     }
                  }
               }
            }
         }
      },
      "/admin/easy_settings/{id}.{format}":{
         "get":{
            "summary":"Get EasySetting",
            "tags":[
               "Easy setting"
            ],
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of EasySetting",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               },
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               }
            ],
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "200":{
                  "description":"detail of EasySetting",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "easy_setting":{
                                 "$ref":"#/components/schemas/EasySetting"
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/EasySetting"
                        }
                     }
                  }
               }
            }
         },
         "put":{
            "summary":"Update EasySetting",
            "tags":[
               "Easy setting"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of EasySetting",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               }
            ],
            "requestBody":{
               "description":"Update given EasySetting",
               "required":true,
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "easy_setting":{
                              "$ref":"#/components/schemas/EasySetting"
                           }
                        }
                     }
                  },
                  "application/xml":{
                     "schema":{
                        "$ref":"#/components/schemas/EasySetting"
                     }
                  }
               }
            },
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "422":{
                  "description":"unprocessable entity",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "200":{
                  "description":"updated",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "easy_setting":{
                                 "$ref":"#/components/schemas/EasySetting"
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/EasySetting"
                        }
                     }
                  }
               }
            }
         },
         "delete":{
            "summary":"Destroy EasySetting",
            "tags":[
               "Easy setting"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of EasySetting",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               }
            ],
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "204":{
                  "description":"ok"
               }
            }
         }
      },
      "/easy_sla_events/{id}.{format}":{
         "delete":{
            "summary":"Destroy EasySlaEvent",
            "tags":[
               "Easy sla event"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of EasySlaEvent",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               }
            ],
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "204":{
                  "description":"ok"
               }
            }
         }
      },
      "/easy_stakeholders.{format}":{
         "get":{
            "summary":"List of EasyStakeholders",
            "description":"For filtering send parameter `set_filter=1` and specify filters",
            "tags":[
               "Easy stakeholder"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"easy_query_q",
                  "description":"free-text filter of current entity",
                  "in":"query",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"set_filter",
                  "description":"enable filter through Easy Query",
                  "in":"query",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"limit",
                  "description":"the number of items to be present in the response (default is 25, maximum is 100)",
                  "in":"query",
                  "schema":{
                     "type":"integer"
                  }
               },
               {
                  "name":"offset",
                  "description":"the offset of the first object to retrieve",
                  "in":"query",
                  "schema":{
                     "type":"integer"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"ok",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "xml":{
                              "name":"easy_stakeholders",
                              "wrapped":true
                           },
                           "properties":{
                              "total_count":{
                                 "type":"number",
                                 "example":75,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "offset":{
                                 "type":"number",
                                 "example":0,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "limit":{
                                 "type":"number",
                                 "example":25,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "easy_stakeholders":{
                                 "type":"array",
                                 "items":{
                                    "$ref":"#/components/schemas/EasyStakeholderApiResponse"
                                 }
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "type":"object",
                           "xml":{
                              "name":"easy_stakeholders",
                              "wrapped":true
                           },
                           "properties":{
                              "total_count":{
                                 "type":"number",
                                 "example":75,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "offset":{
                                 "type":"number",
                                 "example":0,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "limit":{
                                 "type":"number",
                                 "example":25,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "easy_stakeholders":{
                                 "type":"array",
                                 "items":{
                                    "$ref":"#/components/schemas/EasyStakeholderApiResponse"
                                 }
                              }
                           }
                        }
                     }
                  }
               },
               "401":{
                  "description":"not authorized"
               }
            }
         },
         "post":{
            "summary":"Create EasyStakeholder",
            "tags":[
               "Easy stakeholder"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               }
            ],
            "requestBody":{
               "description":"Create EasyStakeholder",
               "required":true,
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "easy_stakeholder":{
                              "$ref":"#/components/schemas/EasyStakeholderApiRequest"
                           }
                        }
                     }
                  },
                  "application/xml":{
                     "schema":{
                        "$ref":"#/components/schemas/EasyStakeholderApiRequest"
                     }
                  }
               }
            },
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "422":{
                  "description":"unprocessable entity",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "201":{
                  "description":"created",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "easy_stakeholder":{
                                 "$ref":"#/components/schemas/EasyStakeholderApiResponse"
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/EasyStakeholderApiResponse"
                        }
                     }
                  }
               }
            }
         }
      },
      "/easy_stakeholders/{id}.{format}":{
         "get":{
            "summary":"Get EasyStakeholder",
            "tags":[
               "Easy stakeholder"
            ],
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of EasyStakeholder",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               },
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               }
            ],
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "200":{
                  "description":"detail of EasyStakeholder",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "easy_stakeholder":{
                                 "$ref":"#/components/schemas/EasyStakeholderApiResponse"
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/EasyStakeholderApiResponse"
                        }
                     }
                  }
               }
            }
         },
         "put":{
            "summary":"Update EasyStakeholder",
            "tags":[
               "Easy stakeholder"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of EasyStakeholder",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               }
            ],
            "requestBody":{
               "description":"Update given EasyStakeholder",
               "required":true,
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "easy_stakeholder":{
                              "$ref":"#/components/schemas/EasyStakeholderApiRequest"
                           }
                        }
                     }
                  },
                  "application/xml":{
                     "schema":{
                        "$ref":"#/components/schemas/EasyStakeholderApiRequest"
                     }
                  }
               }
            },
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "422":{
                  "description":"unprocessable entity",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "200":{
                  "description":"updated",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "easy_stakeholder":{
                                 "$ref":"#/components/schemas/EasyStakeholderApiResponse"
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/EasyStakeholderApiResponse"
                        }
                     }
                  }
               }
            }
         },
         "delete":{
            "summary":"Destroy EasyStakeholder",
            "tags":[
               "Easy stakeholder"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of EasyStakeholder",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               }
            ],
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "204":{
                  "description":"ok"
               }
            }
         }
      },
      "/easy_time_based_contracts.{format}":{
         "get":{
            "summary":"List of EasyTimeBasedContracts",
            "description":"For filtering send parameter `set_filter=1` and specify filters",
            "tags":[
               "Easy time based contract"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"easy_query_q",
                  "description":"free-text filter of current entity",
                  "in":"query",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"set_filter",
                  "description":"enable filter through Easy Query",
                  "in":"query",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"limit",
                  "description":"the number of items to be present in the response (default is 25, maximum is 100)",
                  "in":"query",
                  "schema":{
                     "type":"integer"
                  }
               },
               {
                  "name":"offset",
                  "description":"the offset of the first object to retrieve",
                  "in":"query",
                  "schema":{
                     "type":"integer"
                  }
               },
               {
                  "name":"include",
                  "description":"explicitly specify the associations you want to be included in the query result (separated by a comma)\n\n* **journals** (Include all journals with details)\n* **prices** (Include price book prices)",
                  "in":"query",
                  "schema":{
                     "type":"array",
                     "items":{
                        "type":"string",
                        "enum":[
                           "journals",
                           "prices"
                        ]
                     }
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"ok",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "xml":{
                              "name":"easy_time_based_contracts",
                              "wrapped":true
                           },
                           "properties":{
                              "total_count":{
                                 "type":"number",
                                 "example":75,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "offset":{
                                 "type":"number",
                                 "example":0,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "limit":{
                                 "type":"number",
                                 "example":25,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "easy_time_based_contracts":{
                                 "type":"array",
                                 "items":{
                                    "$ref":"#/components/schemas/EasyTimeBasedContractApiResponse"
                                 }
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "type":"object",
                           "xml":{
                              "name":"easy_time_based_contracts",
                              "wrapped":true
                           },
                           "properties":{
                              "total_count":{
                                 "type":"number",
                                 "example":75,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "offset":{
                                 "type":"number",
                                 "example":0,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "limit":{
                                 "type":"number",
                                 "example":25,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "easy_time_based_contracts":{
                                 "type":"array",
                                 "items":{
                                    "$ref":"#/components/schemas/EasyTimeBasedContractApiResponse"
                                 }
                              }
                           }
                        }
                     }
                  }
               },
               "401":{
                  "description":"not authorized"
               }
            }
         }
      },
      "/easy_time_based_contracts/{id}.{format}":{
         "get":{
            "summary":"Get EasyTimeBasedContract",
            "tags":[
               "Easy time based contract"
            ],
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of EasyTimeBasedContract",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               },
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"include",
                  "description":"explicitly specify the associations you want to be included in the query result (separated by a comma)\n\n* **journals** (Include all journals with details)\n* **prices** (Include price book prices)",
                  "in":"query",
                  "schema":{
                     "type":"array",
                     "items":{
                        "type":"string",
                        "enum":[
                           "journals",
                           "prices"
                        ]
                     }
                  }
               }
            ],
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "200":{
                  "description":"detail of EasyTimeBasedContract",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "easy_time_based_contract":{
                                 "$ref":"#/components/schemas/EasyTimeBasedContractApiResponse"
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/EasyTimeBasedContractApiResponse"
                        }
                     }
                  }
               }
            }
         }
      },
      "/easy_web_hooks.{format}":{
         "get":{
            "summary":"List of EasyWebHooks",
            "description":"For filtering send parameter `set_filter=1` and specify filters",
            "tags":[
               "Easy web hook"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"easy_query_q",
                  "description":"free-text filter of current entity",
                  "in":"query",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"set_filter",
                  "description":"enable filter through Easy Query",
                  "in":"query",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"limit",
                  "description":"the number of items to be present in the response (default is 25, maximum is 100)",
                  "in":"query",
                  "schema":{
                     "type":"integer"
                  }
               },
               {
                  "name":"offset",
                  "description":"the offset of the first object to retrieve",
                  "in":"query",
                  "schema":{
                     "type":"integer"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"ok",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "xml":{
                              "name":"easy_web_hooks",
                              "wrapped":true
                           },
                           "properties":{
                              "total_count":{
                                 "type":"number",
                                 "example":75,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "offset":{
                                 "type":"number",
                                 "example":0,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "limit":{
                                 "type":"number",
                                 "example":25,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "easy_web_hooks":{
                                 "type":"array",
                                 "items":{
                                    "$ref":"#/components/schemas/EasyWebHookApiResponse"
                                 }
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "type":"object",
                           "xml":{
                              "name":"easy_web_hooks",
                              "wrapped":true
                           },
                           "properties":{
                              "total_count":{
                                 "type":"number",
                                 "example":75,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "offset":{
                                 "type":"number",
                                 "example":0,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "limit":{
                                 "type":"number",
                                 "example":25,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "easy_web_hooks":{
                                 "type":"array",
                                 "items":{
                                    "$ref":"#/components/schemas/EasyWebHookApiResponse"
                                 }
                              }
                           }
                        }
                     }
                  }
               },
               "401":{
                  "description":"not authorized"
               }
            }
         },
         "post":{
            "summary":"Create EasyWebHook",
            "tags":[
               "Easy web hook"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               }
            ],
            "requestBody":{
               "description":"Create EasyWebHook",
               "required":true,
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "easy_web_hook":{
                              "$ref":"#/components/schemas/EasyWebHookApiRequest"
                           }
                        }
                     }
                  },
                  "application/xml":{
                     "schema":{
                        "$ref":"#/components/schemas/EasyWebHookApiRequest"
                     }
                  }
               }
            },
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "422":{
                  "description":"unprocessable entity",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "201":{
                  "description":"created",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "easy_web_hook":{
                                 "$ref":"#/components/schemas/EasyWebHookApiResponse"
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/EasyWebHookApiResponse"
                        }
                     }
                  }
               }
            }
         }
      },
      "/easy_web_hooks/{id}.{format}":{
         "get":{
            "summary":"Get EasyWebHook",
            "tags":[
               "Easy web hook"
            ],
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of EasyWebHook",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               },
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               }
            ],
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "200":{
                  "description":"detail of EasyWebHook",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "easy_web_hook":{
                                 "$ref":"#/components/schemas/EasyWebHookApiResponse"
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/EasyWebHookApiResponse"
                        }
                     }
                  }
               }
            }
         },
         "put":{
            "summary":"Update EasyWebHook",
            "tags":[
               "Easy web hook"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of EasyWebHook",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               }
            ],
            "requestBody":{
               "description":"Update given EasyWebHook",
               "required":true,
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "easy_web_hook":{
                              "$ref":"#/components/schemas/EasyWebHookApiRequest"
                           }
                        }
                     }
                  },
                  "application/xml":{
                     "schema":{
                        "$ref":"#/components/schemas/EasyWebHookApiRequest"
                     }
                  }
               }
            },
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "422":{
                  "description":"unprocessable entity",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "200":{
                  "description":"updated",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "easy_web_hook":{
                                 "$ref":"#/components/schemas/EasyWebHookApiResponse"
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/EasyWebHookApiResponse"
                        }
                     }
                  }
               }
            }
         },
         "delete":{
            "summary":"Destroy EasyWebHook",
            "tags":[
               "Easy web hook"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of EasyWebHook",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               }
            ],
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "204":{
                  "description":"ok"
               }
            }
         }
      },
      "/groups.{format}":{
         "get":{
            "summary":"List of Groups",
            "description":"For filtering send parameter `set_filter=1` and specify filters",
            "tags":[
               "Group"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"easy_query_q",
                  "description":"free-text filter of current entity",
                  "in":"query",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"set_filter",
                  "description":"enable filter through Easy Query",
                  "in":"query",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"limit",
                  "description":"the number of items to be present in the response (default is 25, maximum is 100)",
                  "in":"query",
                  "schema":{
                     "type":"integer"
                  }
               },
               {
                  "name":"offset",
                  "description":"the offset of the first object to retrieve",
                  "in":"query",
                  "schema":{
                     "type":"integer"
                  }
               },
               {
                  "name":"include",
                  "description":"explicitly specify the associations you want to be included in the query result (separated by a comma)\n\n* **users** (users which are in group)\n* **memberships** (list of projects which is user in role)",
                  "in":"query",
                  "schema":{
                     "type":"array",
                     "items":{
                        "type":"string",
                        "enum":[
                           "users",
                           "memberships"
                        ]
                     }
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"ok",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "xml":{
                              "name":"groups",
                              "wrapped":true
                           },
                           "properties":{
                              "total_count":{
                                 "type":"number",
                                 "example":75,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "offset":{
                                 "type":"number",
                                 "example":0,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "limit":{
                                 "type":"number",
                                 "example":25,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "groups":{
                                 "type":"array",
                                 "items":{
                                    "$ref":"#/components/schemas/GroupApiResponse"
                                 }
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "type":"object",
                           "xml":{
                              "name":"groups",
                              "wrapped":true
                           },
                           "properties":{
                              "total_count":{
                                 "type":"number",
                                 "example":75,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "offset":{
                                 "type":"number",
                                 "example":0,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "limit":{
                                 "type":"number",
                                 "example":25,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "groups":{
                                 "type":"array",
                                 "items":{
                                    "$ref":"#/components/schemas/GroupApiResponse"
                                 }
                              }
                           }
                        }
                     }
                  }
               },
               "401":{
                  "description":"not authorized"
               }
            }
         },
         "post":{
            "summary":"Create Group",
            "tags":[
               "Group"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               }
            ],
            "requestBody":{
               "description":"Create Group",
               "required":true,
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "group":{
                              "$ref":"#/components/schemas/GroupApiRequest"
                           }
                        }
                     }
                  },
                  "application/xml":{
                     "schema":{
                        "$ref":"#/components/schemas/GroupApiRequest"
                     }
                  }
               }
            },
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "422":{
                  "description":"unprocessable entity",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "201":{
                  "description":"created",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "group":{
                                 "$ref":"#/components/schemas/GroupApiResponse"
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/GroupApiResponse"
                        }
                     }
                  }
               }
            }
         }
      },
      "/groups/{id}.{format}":{
         "get":{
            "summary":"Get Group",
            "tags":[
               "Group"
            ],
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of Group",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               },
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"include",
                  "description":"explicitly specify the associations you want to be included in the query result (separated by a comma)\n\n* **users** (users which are in group)\n* **memberships** (list of projects which is user in role)",
                  "in":"query",
                  "schema":{
                     "type":"array",
                     "items":{
                        "type":"string",
                        "enum":[
                           "users",
                           "memberships"
                        ]
                     }
                  }
               }
            ],
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "200":{
                  "description":"detail of Group",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "group":{
                                 "$ref":"#/components/schemas/GroupApiResponse"
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/GroupApiResponse"
                        }
                     }
                  }
               }
            }
         },
         "put":{
            "summary":"Update Group",
            "tags":[
               "Group"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of Group",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               }
            ],
            "requestBody":{
               "description":"Update given Group",
               "required":true,
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "group":{
                              "$ref":"#/components/schemas/GroupApiRequest"
                           }
                        }
                     }
                  },
                  "application/xml":{
                     "schema":{
                        "$ref":"#/components/schemas/GroupApiRequest"
                     }
                  }
               }
            },
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "422":{
                  "description":"unprocessable entity",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "200":{
                  "description":"updated",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "group":{
                                 "$ref":"#/components/schemas/GroupApiResponse"
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/GroupApiResponse"
                        }
                     }
                  }
               }
            }
         },
         "delete":{
            "summary":"Destroy Group",
            "tags":[
               "Group"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of Group",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               }
            ],
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "204":{
                  "description":"ok"
               }
            }
         }
      },
      "/groups/{id}/users.{format}":{
         "post":{
            "summary":"Add User to Group",
            "tags":[
               "Group"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of Group",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "requestBody":{
               "description":"Update given Group",
               "required":true,
               "content":{
                  "application/json":{
                     "schema":{
                        "properties":{
                           "user_ids":{
                              "type":"array",
                              "items":{
                                 "type":"integer"
                              }
                           }
                        }
                     }
                  },
                  "application/xml":{
                     "schema":{
                        "properties":{
                           "user_ids":{
                              "type":"array",
                              "items":{
                                 "type":"integer"
                              }
                           }
                        }
                     }
                  }
               }
            },
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "422":{
                  "description":"unprocessable entity",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "204":{
                  "description":"ok"
               }
            }
         }
      },
      "/groups/{id}/users/{user_id}.{format}":{
         "delete":{
            "summary":"Remove User from Group",
            "tags":[
               "Group"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of Group",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"user_id",
                  "in":"path",
                  "description":"ID of User",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "422":{
                  "description":"unprocessable entity",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "204":{
                  "description":"ok"
               }
            }
         }
      },
      "/issues.{format}":{
         "get":{
            "summary":"List of Issues",
            "description":"For filtering send parameter `set_filter=1` and specify filters",
            "tags":[
               "Issue"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"easy_query_q",
                  "description":"free-text filter of current entity",
                  "in":"query",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"set_filter",
                  "description":"enable filter through Easy Query",
                  "in":"query",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"limit",
                  "description":"the number of items to be present in the response (default is 25, maximum is 100)",
                  "in":"query",
                  "schema":{
                     "type":"integer"
                  }
               },
               {
                  "name":"offset",
                  "description":"the offset of the first object to retrieve",
                  "in":"query",
                  "schema":{
                     "type":"integer"
                  }
               },
               {
                  "name":"include",
                  "description":"explicitly specify the associations you want to be included in the query result (separated by a comma)\n\n* **attachments** ()\n* **relations** ()\n* **total_estimated_time** ()\n* **spent_time** ()",
                  "in":"query",
                  "schema":{
                     "type":"array",
                     "items":{
                        "type":"string",
                        "enum":[
                           "attachments",
                           "relations",
                           "total_estimated_time",
                           "spent_time"
                        ]
                     }
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"ok",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "xml":{
                              "name":"issues",
                              "wrapped":true
                           },
                           "properties":{
                              "total_count":{
                                 "type":"number",
                                 "example":75,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "offset":{
                                 "type":"number",
                                 "example":0,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "limit":{
                                 "type":"number",
                                 "example":25,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "issues":{
                                 "type":"array",
                                 "items":{
                                    "$ref":"#/components/schemas/IssueApiResponse"
                                 }
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "type":"object",
                           "xml":{
                              "name":"issues",
                              "wrapped":true
                           },
                           "properties":{
                              "total_count":{
                                 "type":"number",
                                 "example":75,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "offset":{
                                 "type":"number",
                                 "example":0,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "limit":{
                                 "type":"number",
                                 "example":25,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "issues":{
                                 "type":"array",
                                 "items":{
                                    "$ref":"#/components/schemas/IssueApiResponse"
                                 }
                              }
                           }
                        }
                     }
                  }
               },
               "401":{
                  "description":"not authorized"
               }
            }
         },
         "post":{
            "summary":"Create Issue",
            "tags":[
               "Issue"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               }
            ],
            "requestBody":{
               "description":"Create Issue",
               "required":true,
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "issue":{
                              "$ref":"#/components/schemas/IssueApiRequest"
                           }
                        }
                     }
                  },
                  "application/xml":{
                     "schema":{
                        "$ref":"#/components/schemas/IssueApiRequest"
                     }
                  }
               }
            },
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "422":{
                  "description":"unprocessable entity",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "201":{
                  "description":"created",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "issue":{
                                 "$ref":"#/components/schemas/IssueApiResponse"
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/IssueApiResponse"
                        }
                     }
                  }
               }
            }
         }
      },
      "/issues/{id}.{format}":{
         "get":{
            "summary":"Get Issue",
            "tags":[
               "Issue"
            ],
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of Issue",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               },
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"include",
                  "description":"explicitly specify the associations you want to be included in the query result (separated by a comma)\n\n* **children** (list of issue children)\n* **attachments** ()\n* **relations** ()\n* **changesets** ()\n* **journals** ()\n* **watchers** ()",
                  "in":"query",
                  "schema":{
                     "type":"array",
                     "items":{
                        "type":"string",
                        "enum":[
                           "children",
                           "attachments",
                           "relations",
                           "changesets",
                           "journals",
                           "watchers"
                        ]
                     }
                  }
               }
            ],
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "200":{
                  "description":"detail of Issue",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "issue":{
                                 "$ref":"#/components/schemas/IssueApiResponse"
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/IssueApiResponse"
                        }
                     }
                  }
               }
            }
         },
         "put":{
            "summary":"Update Issue",
            "tags":[
               "Issue"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of Issue",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               }
            ],
            "requestBody":{
               "description":"Update given Issue",
               "required":true,
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "issue":{
                              "$ref":"#/components/schemas/IssueApiRequest"
                           }
                        }
                     }
                  },
                  "application/xml":{
                     "schema":{
                        "$ref":"#/components/schemas/IssueApiRequest"
                     }
                  }
               }
            },
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "422":{
                  "description":"unprocessable entity",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "200":{
                  "description":"updated",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "issue":{
                                 "$ref":"#/components/schemas/IssueApiResponse"
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/IssueApiResponse"
                        }
                     }
                  }
               }
            }
         },
         "delete":{
            "summary":"Destroy Issue",
            "tags":[
               "Issue"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of Issue",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               }
            ],
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "204":{
                  "description":"ok"
               }
            }
         }
      },
      "/easy_issues/{id}/favorite.{format}":{
         "post":{
            "summary":"Add Issue to favorites",
            "tags":[
               "Issue"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of Issue",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "422":{
                  "description":"unprocessable entity",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "204":{
                  "description":"ok"
               }
            }
         }
      },
      "/easy_issues/{id}/unfavorite.{format}":{
         "post":{
            "summary":"Remove Issue from favorites",
            "tags":[
               "Issue"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of Issue",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "422":{
                  "description":"unprocessable entity",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "204":{
                  "description":"ok"
               }
            }
         }
      },
      "/memberships/{id}.{format}":{
         "get":{
            "summary":"Get Membership",
            "tags":[
               "Membership"
            ],
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of Membership",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               },
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               }
            ],
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "200":{
                  "description":"detail of Membership",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "membership":{
                                 "$ref":"#/components/schemas/MembershipApiResponse"
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/MembershipApiResponse"
                        }
                     }
                  }
               }
            }
         },
         "put":{
            "summary":"Update Membership",
            "tags":[
               "Membership"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of Membership",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               }
            ],
            "requestBody":{
               "description":"Update given Membership",
               "required":true,
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "membership":{
                              "$ref":"#/components/schemas/MembershipApiRequest"
                           }
                        }
                     }
                  },
                  "application/xml":{
                     "schema":{
                        "$ref":"#/components/schemas/MembershipApiRequest"
                     }
                  }
               }
            },
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "422":{
                  "description":"unprocessable entity",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "200":{
                  "description":"updated",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "membership":{
                                 "$ref":"#/components/schemas/MembershipApiResponse"
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/MembershipApiResponse"
                        }
                     }
                  }
               }
            }
         },
         "delete":{
            "summary":"Destroy Membership",
            "tags":[
               "Membership"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of Membership",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               }
            ],
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "204":{
                  "description":"ok"
               }
            }
         }
      },
      "/projects/{project_id}/memberships.{format}":{
         "get":{
            "summary":"Retrieve memberships of the Project with specified id",
            "tags":[
               "Project membership",
               "Membership"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"project_id",
                  "in":"path",
                  "description":"ID of Project",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               }
            ],
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "200":{
                  "description":"ok",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "total_count":{
                                 "type":"number",
                                 "example":75,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "offset":{
                                 "type":"number",
                                 "example":0,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "limit":{
                                 "type":"number",
                                 "example":25,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "memberships":{
                                 "type":"array",
                                 "items":{
                                    "$ref":"#/components/schemas/MembershipApiResponse"
                                 }
                              }
                           },
                           "xml":{
                              "name":"memberships",
                              "wrapped":true
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "total_count":{
                                 "type":"number",
                                 "example":75,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "offset":{
                                 "type":"number",
                                 "example":0,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "limit":{
                                 "type":"number",
                                 "example":25,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "memberships":{
                                 "type":"array",
                                 "items":{
                                    "$ref":"#/components/schemas/MembershipApiResponse"
                                 }
                              }
                           },
                           "xml":{
                              "name":"memberships",
                              "wrapped":true
                           }
                        }
                     }
                  }
               }
            }
         },
         "post":{
            "summary":"Create a membership in a Project with specified id",
            "tags":[
               "Project membership",
               "Membership"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"project_id",
                  "in":"path",
                  "description":"ID of Project",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               }
            ],
            "requestBody":{
               "description":"Create Project membership",
               "required":true,
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "title":"Membership",
                        "required":[
                           "role_ids",
                           "user_ids"
                        ],
                        "description":"Create membership on project for users in given roles",
                        "properties":{
                           "membership":{
                              "$ref":"#/components/schemas/MembershipApiRequest"
                           }
                        }
                     }
                  },
                  "application/xml":{
                     "schema":{
                        "title":"Membership",
                        "required":[
                           "role_ids",
                           "user_ids"
                        ],
                        "description":"Create membership on project for users in given roles",
                        "$ref":"#/components/schemas/MembershipApiRequest"
                     }
                  }
               }
            },
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "422":{
                  "description":"unprocessable entity",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "201":{
                  "description":"created",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/MembershipApiResponse"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/MembershipApiResponse"
                        }
                     }
                  }
               }
            }
         }
      },
      "/projects.{format}":{
         "get":{
            "summary":"List of Projects",
            "description":"For filtering send parameter `set_filter=1` and specify filters",
            "tags":[
               "Project"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"easy_query_q",
                  "description":"free-text filter of current entity",
                  "in":"query",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"set_filter",
                  "description":"enable filter through Easy Query",
                  "in":"query",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"limit",
                  "description":"the number of items to be present in the response (default is 25, maximum is 100)",
                  "in":"query",
                  "schema":{
                     "type":"integer"
                  }
               },
               {
                  "name":"offset",
                  "description":"the offset of the first object to retrieve",
                  "in":"query",
                  "schema":{
                     "type":"integer"
                  }
               },
               {
                  "name":"include",
                  "description":"explicitly specify the associations you want to be included in the query result (separated by a comma)\n\n* **trackers** (List of enabled trackers on project)\n* **issue_categories** (List of IssueCategories)\n* **enabled_modules** (List of enabled project modules)",
                  "in":"query",
                  "schema":{
                     "type":"array",
                     "items":{
                        "type":"string",
                        "enum":[
                           "trackers",
                           "issue_categories",
                           "enabled_modules"
                        ]
                     }
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"ok",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "xml":{
                              "name":"projects",
                              "wrapped":true
                           },
                           "properties":{
                              "total_count":{
                                 "type":"number",
                                 "example":75,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "offset":{
                                 "type":"number",
                                 "example":0,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "limit":{
                                 "type":"number",
                                 "example":25,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "projects":{
                                 "type":"array",
                                 "items":{
                                    "$ref":"#/components/schemas/ProjectApiResponse"
                                 }
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "type":"object",
                           "xml":{
                              "name":"projects",
                              "wrapped":true
                           },
                           "properties":{
                              "total_count":{
                                 "type":"number",
                                 "example":75,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "offset":{
                                 "type":"number",
                                 "example":0,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "limit":{
                                 "type":"number",
                                 "example":25,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "projects":{
                                 "type":"array",
                                 "items":{
                                    "$ref":"#/components/schemas/ProjectApiResponse"
                                 }
                              }
                           }
                        }
                     }
                  }
               },
               "401":{
                  "description":"not authorized"
               }
            }
         },
         "post":{
            "summary":"Create Project",
            "tags":[
               "Project"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               }
            ],
            "requestBody":{
               "description":"Create Project",
               "required":true,
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "project":{
                              "$ref":"#/components/schemas/ProjectApiRequest"
                           }
                        }
                     }
                  },
                  "application/xml":{
                     "schema":{
                        "$ref":"#/components/schemas/ProjectApiRequest"
                     }
                  }
               }
            },
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "422":{
                  "description":"unprocessable entity",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "201":{
                  "description":"created",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "project":{
                                 "$ref":"#/components/schemas/ProjectApiResponse"
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ProjectApiResponse"
                        }
                     }
                  }
               }
            }
         }
      },
      "/projects/{id}.{format}":{
         "get":{
            "summary":"Get Project",
            "tags":[
               "Project"
            ],
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of Project",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               },
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"include",
                  "description":"explicitly specify the associations you want to be included in the query result (separated by a comma)\n\n* **trackers** (List of enabled trackers on project)\n* **issue_categories** (List of IssueCategories)\n* **enabled_modules** (List of enabled project modules)",
                  "in":"query",
                  "schema":{
                     "type":"array",
                     "items":{
                        "type":"string",
                        "enum":[
                           "trackers",
                           "issue_categories",
                           "enabled_modules"
                        ]
                     }
                  }
               }
            ],
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "200":{
                  "description":"detail of Project",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "project":{
                                 "$ref":"#/components/schemas/ProjectApiResponse"
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ProjectApiResponse"
                        }
                     }
                  }
               }
            }
         },
         "put":{
            "summary":"Update Project",
            "tags":[
               "Project"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of Project",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               }
            ],
            "requestBody":{
               "description":"Update given Project",
               "required":true,
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "project":{
                              "$ref":"#/components/schemas/ProjectApiRequest"
                           }
                        }
                     }
                  },
                  "application/xml":{
                     "schema":{
                        "$ref":"#/components/schemas/ProjectApiRequest"
                     }
                  }
               }
            },
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "422":{
                  "description":"unprocessable entity",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "200":{
                  "description":"updated",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "project":{
                                 "$ref":"#/components/schemas/ProjectApiResponse"
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ProjectApiResponse"
                        }
                     }
                  }
               }
            }
         },
         "delete":{
            "summary":"Destroy Project",
            "tags":[
               "Project"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of Project",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               }
            ],
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "204":{
                  "description":"ok"
               }
            }
         }
      },
      "/projects/{id}/close.{format}":{
         "post":{
            "summary":"Close Project",
            "tags":[
               "Project"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of Project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "422":{
                  "description":"unprocessable entity",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "204":{
                  "description":"ok"
               }
            }
         }
      },
      "/projects/{id}/reopen.{format}":{
         "post":{
            "summary":"Reopen Project",
            "tags":[
               "Project"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of Project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "422":{
                  "description":"unprocessable entity",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "204":{
                  "description":"ok"
               }
            }
         }
      },
      "/projects/{id}/archive.{format}":{
         "post":{
            "summary":"Archive Project",
            "tags":[
               "Project"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of Project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "422":{
                  "description":"unprocessable entity",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "204":{
                  "description":"ok"
               }
            }
         }
      },
      "/projects/{id}/unarchive.{format}":{
         "post":{
            "summary":"Unarchive Project",
            "tags":[
               "Project"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of Project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "422":{
                  "description":"unprocessable entity",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "204":{
                  "description":"ok"
               }
            }
         }
      },
      "/projects/{id}/favorite.{format}":{
         "post":{
            "summary":"Add Project to favorites",
            "tags":[
               "Project"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of Project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "422":{
                  "description":"unprocessable entity",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "204":{
                  "description":"ok"
               }
            }
         }
      },
      "/projects/{id}/unfavorite.{format}":{
         "post":{
            "summary":"Remove Project from favorites",
            "tags":[
               "Project"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of Project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "422":{
                  "description":"unprocessable entity",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "204":{
                  "description":"ok"
               }
            }
         }
      },
      "/roles.{format}":{
         "get":{
            "summary":"List of Roles",
            "description":"For filtering send parameter `set_filter=1` and specify filters",
            "tags":[
               "Role"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"easy_query_q",
                  "description":"free-text filter of current entity",
                  "in":"query",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"set_filter",
                  "description":"enable filter through Easy Query",
                  "in":"query",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"limit",
                  "description":"the number of items to be present in the response (default is 25, maximum is 100)",
                  "in":"query",
                  "schema":{
                     "type":"integer"
                  }
               },
               {
                  "name":"offset",
                  "description":"the offset of the first object to retrieve",
                  "in":"query",
                  "schema":{
                     "type":"integer"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"ok",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "xml":{
                              "name":"roles",
                              "wrapped":true
                           },
                           "properties":{
                              "total_count":{
                                 "type":"number",
                                 "example":75,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "offset":{
                                 "type":"number",
                                 "example":0,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "limit":{
                                 "type":"number",
                                 "example":25,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "roles":{
                                 "type":"array",
                                 "items":{
                                    "$ref":"#/components/schemas/RoleApiResponse"
                                 }
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "type":"object",
                           "xml":{
                              "name":"roles",
                              "wrapped":true
                           },
                           "properties":{
                              "total_count":{
                                 "type":"number",
                                 "example":75,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "offset":{
                                 "type":"number",
                                 "example":0,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "limit":{
                                 "type":"number",
                                 "example":25,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "roles":{
                                 "type":"array",
                                 "items":{
                                    "$ref":"#/components/schemas/RoleApiResponse"
                                 }
                              }
                           }
                        }
                     }
                  }
               },
               "401":{
                  "description":"not authorized"
               }
            }
         }
      },
      "/roles/{id}.{format}":{
         "get":{
            "summary":"Get Role",
            "tags":[
               "Role"
            ],
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of Role",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               },
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               }
            ],
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "200":{
                  "description":"detail of Role",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "role":{
                                 "$ref":"#/components/schemas/RoleApiResponse"
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/RoleApiResponse"
                        }
                     }
                  }
               }
            }
         }
      },
      "/search/reindex_all.{format}":{
         "put":{
            "summary":"Reindexation",
            "tags":[
               "Search"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               }
            ],
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "422":{
                  "description":"unprocessable entity",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "200":{
                  "description":"ok",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "reindexation":{
                                 "type":"object",
                                 "properties":{
                                    "status":{
                                       "example":"working"
                                    },
                                    "progress":{
                                       "type":"object"
                                    }
                                 }
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "xml":{
                              "name":"reindexation"
                           },
                           "properties":{
                              "status":{
                                 "example":"working"
                              },
                              "progress":{
                                 "type":"object"
                              }
                           }
                        }
                     }
                  }
               }
            }
         }
      },
      "/search.{format}":{
         "get":{
            "summary":"Search",
            "tags":[
               "Search"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"q",
                  "in":"query",
                  "description":"Search query string",
                  "example":"man on the moon",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"open_issues",
                  "in":"query",
                  "description":"Search only open issues",
                  "required":false,
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"internal_users",
                  "in":"query",
                  "description":"Search only internal users",
                  "required":false,
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"scope",
                  "in":"query",
                  "description":"Project ID for search scope",
                  "required":false,
                  "schema":{
                     "type":"integer"
                  }
               }
            ],
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "422":{
                  "description":"unprocessable entity",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "200":{
                  "description":"ok",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "xml":{
                              "name":"results"
                           },
                           "properties":{
                              "results":{
                                 "type":"array",
                                 "items":{
                                    "xml":{
                                       "wrapped":true
                                    },
                                    "$ref":"#/components/schemas/SearchApiResponse"
                                 }
                              },
                              "total_count":{
                                 "type":"number",
                                 "example":75,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "offset":{
                                 "type":"number",
                                 "example":0,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "limit":{
                                 "type":"number",
                                 "example":25,
                                 "xml":{
                                    "attribute":true
                                 }
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "type":"object",
                           "xml":{
                              "name":"results"
                           },
                           "properties":{
                              "results":{
                                 "type":"array",
                                 "items":{
                                    "xml":{
                                       "wrapped":true
                                    },
                                    "$ref":"#/components/schemas/SearchApiResponse"
                                 }
                              },
                              "total_count":{
                                 "type":"number",
                                 "example":75,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "offset":{
                                 "type":"number",
                                 "example":0,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "limit":{
                                 "type":"number",
                                 "example":25,
                                 "xml":{
                                    "attribute":true
                                 }
                              }
                           }
                        }
                     }
                  }
               }
            }
         }
      },
      "/templates.{format}":{
         "get":{
            "summary":"Get all ProjectTemplate",
            "description":"For filtering send parameter `set_filter=1` and specify filters",
            "tags":[
               "Project template"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"easy_query_q",
                  "description":"free-text filter of current entity",
                  "in":"query",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"set_filter",
                  "description":"enable filter through Easy Query",
                  "in":"query",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"limit",
                  "description":"the number of items to be present in the response (default is 25, maximum is 100)",
                  "in":"query",
                  "schema":{
                     "type":"integer"
                  }
               },
               {
                  "name":"offset",
                  "description":"the offset of the first object to retrieve",
                  "in":"query",
                  "schema":{
                     "type":"integer"
                  }
               }
            ],
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "200":{
                  "description":"ok",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "xml":{
                              "name":"projects"
                           },
                           "properties":{
                              "projects":{
                                 "type":"array",
                                 "items":{
                                    "$ref":"#/components/schemas/ProjectApiResponse"
                                 }
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "type":"object",
                           "xml":{
                              "name":"projects"
                           },
                           "properties":{
                              "projects":{
                                 "type":"array",
                                 "items":{
                                    "$ref":"#/components/schemas/ProjectApiResponse"
                                 }
                              }
                           }
                        }
                     }
                  }
               }
            }
         }
      },
      "/templates/{id}/add.{format}":{
         "get":{
            "summary":"Add ProjectTemplate",
            "tags":[
               "Project template"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"id",
                  "in":"path",
                  "description":"Id of the project",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "422":{
                  "description":"unprocessable entity",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "204":{
                  "description":"ok"
               }
            }
         }
      },
      "/templates/{id}/restore.{format}":{
         "get":{
            "summary":"Restore ProjectTemplate",
            "tags":[
               "Project template"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"id",
                  "in":"path",
                  "description":"Id of the template",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "422":{
                  "description":"unprocessable entity",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "204":{
                  "description":"ok"
               }
            }
         }
      },
      "/templates/{id}/create.{format}":{
         "post":{
            "summary":"Create project from template",
            "tags":[
               "Project template"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"id",
                  "in":"path",
                  "description":"Id of the source template",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "requestBody":{
               "required":false,
               "description":"Create from template parameters",
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/CreateProjectTemplateApiRequest"
                     }
                  },
                  "application/xml":{
                     "schema":{
                        "$ref":"#/components/schemas/CreateProjectTemplateApiRequest"
                     }
                  }
               }
            },
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "422":{
                  "description":"unprocessable entity",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "201":{
                  "description":"created",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "project":{
                                 "$ref":"#/components/schemas/ProjectApiResponse"
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "xml":{
                              "name":"project"
                           },
                           "$ref":"#/components/schemas/ProjectApiResponse"
                        }
                     }
                  }
               }
            }
         }
      },
      "/templates/{id}/copy.{format}":{
         "post":{
            "summary":"Copy template into existing project",
            "tags":[
               "Project template"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"id",
                  "in":"path",
                  "description":"Id of the source template",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "requestBody":{
               "required":true,
               "description":"Copy template parameters",
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/CopyProjectTemplateApiRequest"
                     }
                  },
                  "application/xml":{
                     "schema":{
                        "$ref":"#/components/schemas/CopyProjectTemplateApiRequest"
                     }
                  }
               }
            },
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "422":{
                  "description":"unprocessable entity",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "201":{
                  "description":"created",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "project":{
                                 "$ref":"#/components/schemas/ProjectApiResponse"
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "xml":{
                              "name":"project"
                           },
                           "$ref":"#/components/schemas/ProjectApiResponse"
                        }
                     }
                  }
               }
            }
         }
      },
      "/templates/{id}/destroy.{format}":{
         "delete":{
            "summary":"Destroy ProjectTemplate",
            "tags":[
               "Project template"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"id",
                  "in":"path",
                  "description":"Id of the template to be deleted",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "204":{
                  "description":"ok"
               }
            }
         }
      },
      "/test_case_issue_execution_results.{format}":{
         "get":{
            "summary":"List of TestCaseIssueExecutionResults",
            "description":"For filtering send parameter `set_filter=1` and specify filters",
            "tags":[
               "Test case issue execution result"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"easy_query_q",
                  "description":"free-text filter of current entity",
                  "in":"query",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"set_filter",
                  "description":"enable filter through Easy Query",
                  "in":"query",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"limit",
                  "description":"the number of items to be present in the response (default is 25, maximum is 100)",
                  "in":"query",
                  "schema":{
                     "type":"integer"
                  }
               },
               {
                  "name":"offset",
                  "description":"the offset of the first object to retrieve",
                  "in":"query",
                  "schema":{
                     "type":"integer"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"ok",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "xml":{
                              "name":"test_case_issue_execution_results",
                              "wrapped":true
                           },
                           "properties":{
                              "total_count":{
                                 "type":"number",
                                 "example":75,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "offset":{
                                 "type":"number",
                                 "example":0,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "limit":{
                                 "type":"number",
                                 "example":25,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "test_case_issue_execution_results":{
                                 "type":"array",
                                 "items":{
                                    "$ref":"#/components/schemas/TestCaseIssueExecutionResultApiResponse"
                                 }
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "type":"object",
                           "xml":{
                              "name":"test_case_issue_execution_results",
                              "wrapped":true
                           },
                           "properties":{
                              "total_count":{
                                 "type":"number",
                                 "example":75,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "offset":{
                                 "type":"number",
                                 "example":0,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "limit":{
                                 "type":"number",
                                 "example":25,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "test_case_issue_execution_results":{
                                 "type":"array",
                                 "items":{
                                    "$ref":"#/components/schemas/TestCaseIssueExecutionResultApiResponse"
                                 }
                              }
                           }
                        }
                     }
                  }
               },
               "401":{
                  "description":"not authorized"
               }
            }
         }
      },
      "/test_case_issue_executions.{format}":{
         "get":{
            "summary":"List of TestCaseIssueExecutions",
            "description":"For filtering send parameter `set_filter=1` and specify filters",
            "tags":[
               "Test case issue execution"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"easy_query_q",
                  "description":"free-text filter of current entity",
                  "in":"query",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"set_filter",
                  "description":"enable filter through Easy Query",
                  "in":"query",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"limit",
                  "description":"the number of items to be present in the response (default is 25, maximum is 100)",
                  "in":"query",
                  "schema":{
                     "type":"integer"
                  }
               },
               {
                  "name":"offset",
                  "description":"the offset of the first object to retrieve",
                  "in":"query",
                  "schema":{
                     "type":"integer"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"ok",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "xml":{
                              "name":"test_case_issue_executions",
                              "wrapped":true
                           },
                           "properties":{
                              "total_count":{
                                 "type":"number",
                                 "example":75,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "offset":{
                                 "type":"number",
                                 "example":0,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "limit":{
                                 "type":"number",
                                 "example":25,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "test_case_issue_executions":{
                                 "type":"array",
                                 "items":{
                                    "$ref":"#/components/schemas/TestCaseIssueExecutionApiResponse"
                                 }
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "type":"object",
                           "xml":{
                              "name":"test_case_issue_executions",
                              "wrapped":true
                           },
                           "properties":{
                              "total_count":{
                                 "type":"number",
                                 "example":75,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "offset":{
                                 "type":"number",
                                 "example":0,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "limit":{
                                 "type":"number",
                                 "example":25,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "test_case_issue_executions":{
                                 "type":"array",
                                 "items":{
                                    "$ref":"#/components/schemas/TestCaseIssueExecutionApiResponse"
                                 }
                              }
                           }
                        }
                     }
                  }
               },
               "401":{
                  "description":"not authorized"
               }
            }
         },
         "post":{
            "summary":"Create TestCaseIssueExecutio",
            "tags":[
               "Test case issue execution"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"test_case_id",
                  "required":true,
                  "description":"Test case ID",
                  "in":"query",
                  "schema":{
                     "type":"string",
                     "description":"Test case ID",
                     "example":"1"
                  }
               }
            ],
            "requestBody":{
               "description":"Create TestCaseIssueExecution",
               "required":true,
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "test_case_issue_execution":{
                              "type":"object",
                              "$ref":"#/components/schemas/TestCaseIssueExecutionApiRequest"
                           }
                        }
                     }
                  },
                  "application/xml":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "test_case_issue_execution":{
                              "type":"object",
                              "$ref":"#/components/schemas/TestCaseIssueExecutionApiRequest"
                           }
                        }
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"ok",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "test_case_issue_execution":{
                                 "type":"object",
                                 "$ref":"#/components/schemas/TestCaseIssueExecutionApiResponse"
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "test_case_issue_execution":{
                                 "type":"object",
                                 "$ref":"#/components/schemas/TestCaseIssueExecutionApiResponse"
                              }
                           }
                        }
                     }
                  }
               },
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "422":{
                  "description":"unprocessable entity",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               }
            }
         }
      },
      "/test_case_issue_executions/{id}.{format}":{
         "get":{
            "summary":"Get TestCaseIssueExecution",
            "tags":[
               "Test case issue execution"
            ],
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of TestCaseIssueExecution",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               },
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               }
            ],
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "200":{
                  "description":"detail of TestCaseIssueExecution",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "test_case_issue_execution":{
                                 "$ref":"#/components/schemas/TestCaseIssueExecutionApiResponse"
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/TestCaseIssueExecutionApiResponse"
                        }
                     }
                  }
               }
            }
         },
         "put":{
            "summary":"Update TestCaseIssueExecution",
            "tags":[
               "Test case issue execution"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of TestCaseIssueExecution",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               }
            ],
            "requestBody":{
               "description":"Update given TestCaseIssueExecution",
               "required":true,
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "test_case_issue_execution":{
                              "$ref":"#/components/schemas/TestCaseIssueExecutionApiRequest"
                           }
                        }
                     }
                  },
                  "application/xml":{
                     "schema":{
                        "$ref":"#/components/schemas/TestCaseIssueExecutionApiRequest"
                     }
                  }
               }
            },
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "422":{
                  "description":"unprocessable entity",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "200":{
                  "description":"updated",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "test_case_issue_execution":{
                                 "$ref":"#/components/schemas/TestCaseIssueExecutionApiResponse"
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/TestCaseIssueExecutionApiResponse"
                        }
                     }
                  }
               }
            }
         },
         "delete":{
            "summary":"Destroy TestCaseIssueExecution",
            "tags":[
               "Test case issue execution"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of TestCaseIssueExecution",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               }
            ],
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "204":{
                  "description":"ok"
               }
            }
         }
      },
      "/test_cases.{format}":{
         "get":{
            "summary":"List of TestCases",
            "description":"For filtering send parameter `set_filter=1` and specify filters",
            "tags":[
               "Test case"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"easy_query_q",
                  "description":"free-text filter of current entity",
                  "in":"query",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"set_filter",
                  "description":"enable filter through Easy Query",
                  "in":"query",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"limit",
                  "description":"the number of items to be present in the response (default is 25, maximum is 100)",
                  "in":"query",
                  "schema":{
                     "type":"integer"
                  }
               },
               {
                  "name":"offset",
                  "description":"the offset of the first object to retrieve",
                  "in":"query",
                  "schema":{
                     "type":"integer"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"ok",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "xml":{
                              "name":"test_cases",
                              "wrapped":true
                           },
                           "properties":{
                              "total_count":{
                                 "type":"number",
                                 "example":75,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "offset":{
                                 "type":"number",
                                 "example":0,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "limit":{
                                 "type":"number",
                                 "example":25,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "test_cases":{
                                 "type":"array",
                                 "items":{
                                    "$ref":"#/components/schemas/TestCaseApiResponse"
                                 }
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "type":"object",
                           "xml":{
                              "name":"test_cases",
                              "wrapped":true
                           },
                           "properties":{
                              "total_count":{
                                 "type":"number",
                                 "example":75,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "offset":{
                                 "type":"number",
                                 "example":0,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "limit":{
                                 "type":"number",
                                 "example":25,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "test_cases":{
                                 "type":"array",
                                 "items":{
                                    "$ref":"#/components/schemas/TestCaseApiResponse"
                                 }
                              }
                           }
                        }
                     }
                  }
               },
               "401":{
                  "description":"not authorized"
               }
            }
         },
         "post":{
            "summary":"Create TestCase",
            "tags":[
               "Test case"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               }
            ],
            "requestBody":{
               "description":"Create TestCase",
               "required":true,
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "test_case":{
                              "$ref":"#/components/schemas/TestCaseApiRequest"
                           }
                        }
                     }
                  },
                  "application/xml":{
                     "schema":{
                        "$ref":"#/components/schemas/TestCaseApiRequest"
                     }
                  }
               }
            },
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "422":{
                  "description":"unprocessable entity",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "201":{
                  "description":"created",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "test_case":{
                                 "$ref":"#/components/schemas/TestCaseApiResponse"
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/TestCaseApiResponse"
                        }
                     }
                  }
               }
            }
         }
      },
      "/test_cases/{id}.{format}":{
         "get":{
            "summary":"Get TestCase",
            "tags":[
               "Test case"
            ],
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of TestCase",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               },
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               }
            ],
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "200":{
                  "description":"detail of TestCase",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "test_case":{
                                 "$ref":"#/components/schemas/TestCaseApiResponse"
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/TestCaseApiResponse"
                        }
                     }
                  }
               }
            }
         },
         "put":{
            "summary":"Update TestCase",
            "tags":[
               "Test case"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of TestCase",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               }
            ],
            "requestBody":{
               "description":"Update given TestCase",
               "required":true,
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "test_case":{
                              "$ref":"#/components/schemas/TestCaseApiRequest"
                           }
                        }
                     }
                  },
                  "application/xml":{
                     "schema":{
                        "$ref":"#/components/schemas/TestCaseApiRequest"
                     }
                  }
               }
            },
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "422":{
                  "description":"unprocessable entity",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "200":{
                  "description":"updated",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "test_case":{
                                 "$ref":"#/components/schemas/TestCaseApiResponse"
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/TestCaseApiResponse"
                        }
                     }
                  }
               }
            }
         },
         "delete":{
            "summary":"Destroy TestCase",
            "tags":[
               "Test case"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of TestCase",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               }
            ],
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "204":{
                  "description":"ok"
               }
            }
         }
      },
      "/test_plans.{format}":{
         "get":{
            "summary":"List of TestPlans",
            "description":"For filtering send parameter `set_filter=1` and specify filters",
            "tags":[
               "Test plan"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"easy_query_q",
                  "description":"free-text filter of current entity",
                  "in":"query",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"set_filter",
                  "description":"enable filter through Easy Query",
                  "in":"query",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"limit",
                  "description":"the number of items to be present in the response (default is 25, maximum is 100)",
                  "in":"query",
                  "schema":{
                     "type":"integer"
                  }
               },
               {
                  "name":"offset",
                  "description":"the offset of the first object to retrieve",
                  "in":"query",
                  "schema":{
                     "type":"integer"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"ok",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "xml":{
                              "name":"test_plans",
                              "wrapped":true
                           },
                           "properties":{
                              "total_count":{
                                 "type":"number",
                                 "example":75,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "offset":{
                                 "type":"number",
                                 "example":0,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "limit":{
                                 "type":"number",
                                 "example":25,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "test_plans":{
                                 "type":"array",
                                 "items":{
                                    "$ref":"#/components/schemas/TestPlanApiResponse"
                                 }
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "type":"object",
                           "xml":{
                              "name":"test_plans",
                              "wrapped":true
                           },
                           "properties":{
                              "total_count":{
                                 "type":"number",
                                 "example":75,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "offset":{
                                 "type":"number",
                                 "example":0,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "limit":{
                                 "type":"number",
                                 "example":25,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "test_plans":{
                                 "type":"array",
                                 "items":{
                                    "$ref":"#/components/schemas/TestPlanApiResponse"
                                 }
                              }
                           }
                        }
                     }
                  }
               },
               "401":{
                  "description":"not authorized"
               }
            }
         },
         "post":{
            "summary":"Create TestPlan",
            "tags":[
               "Test plan"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               }
            ],
            "requestBody":{
               "description":"Create TestPlan",
               "required":true,
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "test_plan":{
                              "$ref":"#/components/schemas/TestPlanApiRequest"
                           }
                        }
                     }
                  },
                  "application/xml":{
                     "schema":{
                        "$ref":"#/components/schemas/TestPlanApiRequest"
                     }
                  }
               }
            },
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "422":{
                  "description":"unprocessable entity",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "201":{
                  "description":"created",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "test_plan":{
                                 "$ref":"#/components/schemas/TestPlanApiResponse"
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/TestPlanApiResponse"
                        }
                     }
                  }
               }
            }
         }
      },
      "/test_plans/{id}.{format}":{
         "get":{
            "summary":"Get TestPlan",
            "tags":[
               "Test plan"
            ],
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of TestPlan",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               },
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               }
            ],
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "200":{
                  "description":"detail of TestPlan",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "test_plan":{
                                 "$ref":"#/components/schemas/TestPlanApiResponse"
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/TestPlanApiResponse"
                        }
                     }
                  }
               }
            }
         },
         "put":{
            "summary":"Update TestPlan",
            "tags":[
               "Test plan"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of TestPlan",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               }
            ],
            "requestBody":{
               "description":"Update given TestPlan",
               "required":true,
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "test_plan":{
                              "$ref":"#/components/schemas/TestPlanApiRequest"
                           }
                        }
                     }
                  },
                  "application/xml":{
                     "schema":{
                        "$ref":"#/components/schemas/TestPlanApiRequest"
                     }
                  }
               }
            },
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "422":{
                  "description":"unprocessable entity",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "200":{
                  "description":"updated",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "test_plan":{
                                 "$ref":"#/components/schemas/TestPlanApiResponse"
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/TestPlanApiResponse"
                        }
                     }
                  }
               }
            }
         },
         "delete":{
            "summary":"Destroy TestPlan",
            "tags":[
               "Test plan"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of TestPlan",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               }
            ],
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "204":{
                  "description":"ok"
               }
            }
         }
      },
      "/time_entries.{format}":{
         "get":{
            "summary":"List of TimeEntries",
            "description":"For filtering send parameter `set_filter=1` and specify filters",
            "tags":[
               "Time entry"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"easy_query_q",
                  "description":"free-text filter of current entity",
                  "in":"query",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"set_filter",
                  "description":"enable filter through Easy Query",
                  "in":"query",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"limit",
                  "description":"the number of items to be present in the response (default is 25, maximum is 100)",
                  "in":"query",
                  "schema":{
                     "type":"integer"
                  }
               },
               {
                  "name":"offset",
                  "description":"the offset of the first object to retrieve",
                  "in":"query",
                  "schema":{
                     "type":"integer"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"ok",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "xml":{
                              "name":"time_entries",
                              "wrapped":true
                           },
                           "properties":{
                              "total_count":{
                                 "type":"number",
                                 "example":75,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "offset":{
                                 "type":"number",
                                 "example":0,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "limit":{
                                 "type":"number",
                                 "example":25,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "time_entries":{
                                 "type":"array",
                                 "items":{
                                    "$ref":"#/components/schemas/TimeEntryApiResponse"
                                 }
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "type":"object",
                           "xml":{
                              "name":"time_entries",
                              "wrapped":true
                           },
                           "properties":{
                              "total_count":{
                                 "type":"number",
                                 "example":75,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "offset":{
                                 "type":"number",
                                 "example":0,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "limit":{
                                 "type":"number",
                                 "example":25,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "time_entries":{
                                 "type":"array",
                                 "items":{
                                    "$ref":"#/components/schemas/TimeEntryApiResponse"
                                 }
                              }
                           }
                        }
                     }
                  }
               },
               "401":{
                  "description":"not authorized"
               }
            }
         },
         "post":{
            "summary":"Create TimeEntry",
            "tags":[
               "Time entry"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               }
            ],
            "requestBody":{
               "description":"Create TimeEntry",
               "required":true,
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "time_entry":{
                              "$ref":"#/components/schemas/TimeEntryApiRequest"
                           }
                        }
                     }
                  },
                  "application/xml":{
                     "schema":{
                        "$ref":"#/components/schemas/TimeEntryApiRequest"
                     }
                  }
               }
            },
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "422":{
                  "description":"unprocessable entity",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "201":{
                  "description":"created",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "time_entry":{
                                 "$ref":"#/components/schemas/TimeEntryApiResponse"
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/TimeEntryApiResponse"
                        }
                     }
                  }
               }
            }
         }
      },
      "/time_entries/{id}.{format}":{
         "get":{
            "summary":"Get TimeEntry",
            "tags":[
               "Time entry"
            ],
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of TimeEntry",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               },
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               }
            ],
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "200":{
                  "description":"detail of TimeEntry",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "time_entry":{
                                 "$ref":"#/components/schemas/TimeEntryApiResponse"
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/TimeEntryApiResponse"
                        }
                     }
                  }
               }
            }
         },
         "put":{
            "summary":"Update TimeEntry",
            "tags":[
               "Time entry"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of TimeEntry",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               }
            ],
            "requestBody":{
               "description":"Update given TimeEntry",
               "required":true,
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "time_entry":{
                              "$ref":"#/components/schemas/TimeEntryApiRequest"
                           }
                        }
                     }
                  },
                  "application/xml":{
                     "schema":{
                        "$ref":"#/components/schemas/TimeEntryApiRequest"
                     }
                  }
               }
            },
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "422":{
                  "description":"unprocessable entity",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "200":{
                  "description":"updated",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "time_entry":{
                                 "$ref":"#/components/schemas/TimeEntryApiResponse"
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/TimeEntryApiResponse"
                        }
                     }
                  }
               }
            }
         },
         "delete":{
            "summary":"Destroy TimeEntry",
            "tags":[
               "Time entry"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of TimeEntry",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               }
            ],
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "204":{
                  "description":"ok"
               }
            }
         }
      },
      "/users.{format}":{
         "get":{
            "summary":"List of Users",
            "description":"For filtering send parameter `set_filter=1` and specify filters",
            "tags":[
               "User"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"easy_query_q",
                  "description":"free-text filter of current entity",
                  "in":"query",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"set_filter",
                  "description":"enable filter through Easy Query",
                  "in":"query",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"limit",
                  "description":"the number of items to be present in the response (default is 25, maximum is 100)",
                  "in":"query",
                  "schema":{
                     "type":"integer"
                  }
               },
               {
                  "name":"offset",
                  "description":"the offset of the first object to retrieve",
                  "in":"query",
                  "schema":{
                     "type":"integer"
                  }
               },
               {
                  "name":"include",
                  "description":"explicitly specify the associations you want to be included in the query result (separated by a comma)\n\n* **groups** (groups which user is in)\n* **memberships** (list of projects which is user in role)",
                  "in":"query",
                  "schema":{
                     "type":"array",
                     "items":{
                        "type":"string",
                        "enum":[
                           "groups",
                           "memberships"
                        ]
                     }
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"ok",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "xml":{
                              "name":"users",
                              "wrapped":true
                           },
                           "properties":{
                              "total_count":{
                                 "type":"number",
                                 "example":75,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "offset":{
                                 "type":"number",
                                 "example":0,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "limit":{
                                 "type":"number",
                                 "example":25,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "users":{
                                 "type":"array",
                                 "items":{
                                    "$ref":"#/components/schemas/UserApiResponse"
                                 }
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "type":"object",
                           "xml":{
                              "name":"users",
                              "wrapped":true
                           },
                           "properties":{
                              "total_count":{
                                 "type":"number",
                                 "example":75,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "offset":{
                                 "type":"number",
                                 "example":0,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "limit":{
                                 "type":"number",
                                 "example":25,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "users":{
                                 "type":"array",
                                 "items":{
                                    "$ref":"#/components/schemas/UserApiResponse"
                                 }
                              }
                           }
                        }
                     }
                  }
               },
               "401":{
                  "description":"not authorized"
               }
            }
         },
         "post":{
            "summary":"Create User",
            "tags":[
               "User"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               }
            ],
            "requestBody":{
               "description":"Create User",
               "required":true,
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "user":{
                              "$ref":"#/components/schemas/UserApiRequest"
                           }
                        }
                     }
                  },
                  "application/xml":{
                     "schema":{
                        "$ref":"#/components/schemas/UserApiRequest"
                     }
                  }
               }
            },
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "422":{
                  "description":"unprocessable entity",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "201":{
                  "description":"created",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "user":{
                                 "$ref":"#/components/schemas/UserApiResponse"
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/UserApiResponse"
                        }
                     }
                  }
               }
            }
         }
      },
      "/users/{id}.{format}":{
         "get":{
            "summary":"Get User",
            "tags":[
               "User"
            ],
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of User",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               },
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"include",
                  "description":"explicitly specify the associations you want to be included in the query result (separated by a comma)\n\n* **groups** (groups which user is in)\n* **memberships** (list of projects which is user in role)",
                  "in":"query",
                  "schema":{
                     "type":"array",
                     "items":{
                        "type":"string",
                        "enum":[
                           "groups",
                           "memberships"
                        ]
                     }
                  }
               }
            ],
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "200":{
                  "description":"detail of User",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "user":{
                                 "$ref":"#/components/schemas/UserApiResponse"
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/UserApiResponse"
                        }
                     }
                  }
               }
            }
         },
         "put":{
            "summary":"Update User",
            "tags":[
               "User"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of User",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               }
            ],
            "requestBody":{
               "description":"Update given User",
               "required":true,
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "user":{
                              "$ref":"#/components/schemas/UserApiRequest"
                           }
                        }
                     }
                  },
                  "application/xml":{
                     "schema":{
                        "$ref":"#/components/schemas/UserApiRequest"
                     }
                  }
               }
            },
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "422":{
                  "description":"unprocessable entity",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "200":{
                  "description":"updated",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "user":{
                                 "$ref":"#/components/schemas/UserApiResponse"
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/UserApiResponse"
                        }
                     }
                  }
               }
            }
         },
         "delete":{
            "summary":"Destroy User",
            "tags":[
               "User"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of User",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               }
            ],
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "204":{
                  "description":"ok"
               }
            }
         }
      },
      "/versions.{format}":{
         "get":{
            "summary":"List of Versions",
            "description":"For filtering send parameter `set_filter=1` and specify filters",
            "tags":[
               "Version"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"easy_query_q",
                  "description":"free-text filter of current entity",
                  "in":"query",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"set_filter",
                  "description":"enable filter through Easy Query",
                  "in":"query",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "name":"limit",
                  "description":"the number of items to be present in the response (default is 25, maximum is 100)",
                  "in":"query",
                  "schema":{
                     "type":"integer"
                  }
               },
               {
                  "name":"offset",
                  "description":"the offset of the first object to retrieve",
                  "in":"query",
                  "schema":{
                     "type":"integer"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"ok",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "xml":{
                              "name":"versions",
                              "wrapped":true
                           },
                           "properties":{
                              "total_count":{
                                 "type":"number",
                                 "example":75,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "offset":{
                                 "type":"number",
                                 "example":0,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "limit":{
                                 "type":"number",
                                 "example":25,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "versions":{
                                 "type":"array",
                                 "items":{
                                    "$ref":"#/components/schemas/VersionApiResponse"
                                 }
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "type":"object",
                           "xml":{
                              "name":"versions",
                              "wrapped":true
                           },
                           "properties":{
                              "total_count":{
                                 "type":"number",
                                 "example":75,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "offset":{
                                 "type":"number",
                                 "example":0,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "limit":{
                                 "type":"number",
                                 "example":25,
                                 "xml":{
                                    "attribute":true
                                 }
                              },
                              "versions":{
                                 "type":"array",
                                 "items":{
                                    "$ref":"#/components/schemas/VersionApiResponse"
                                 }
                              }
                           }
                        }
                     }
                  }
               },
               "401":{
                  "description":"not authorized"
               }
            }
         }
      },
      "/versions/{id}.{format}":{
         "get":{
            "summary":"Get Version",
            "tags":[
               "Version"
            ],
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of Version",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               },
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               }
            ],
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "200":{
                  "description":"detail of Version",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "version":{
                                 "$ref":"#/components/schemas/VersionApiResponse"
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/VersionApiResponse"
                        }
                     }
                  }
               }
            }
         },
         "put":{
            "summary":"Update Version",
            "tags":[
               "Version"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of Version",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               }
            ],
            "requestBody":{
               "description":"Update given Version",
               "required":true,
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "version":{
                              "$ref":"#/components/schemas/VersionApiRequest"
                           }
                        }
                     }
                  },
                  "application/xml":{
                     "schema":{
                        "$ref":"#/components/schemas/VersionApiRequest"
                     }
                  }
               }
            },
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "422":{
                  "description":"unprocessable entity",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "200":{
                  "description":"updated",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "version":{
                                 "$ref":"#/components/schemas/VersionApiResponse"
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/VersionApiResponse"
                        }
                     }
                  }
               }
            }
         },
         "delete":{
            "summary":"Destroy Version",
            "tags":[
               "Version"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"id",
                  "in":"path",
                  "description":"ID of Version",
                  "required":true,
                  "schema":{
                     "type":"integer"
                  }
               }
            ],
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "204":{
                  "description":"ok"
               }
            }
         }
      },
      "/projects/{project_id}/versions.{format}":{
         "post":{
            "summary":"Create Version",
            "tags":[
               "Version"
            ],
            "parameters":[
               {
                  "name":"format",
                  "description":"specify format of response",
                  "in":"path",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "xml"
                     ]
                  }
               },
               {
                  "name":"project_id",
                  "in":"path",
                  "description":"ID of the project for the new milestone",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "requestBody":{
               "description":"Create Version",
               "required":true,
               "content":{
                  "application/json":{
                     "schema":{
                        "type":"object",
                        "properties":{
                           "version":{
                              "$ref":"#/components/schemas/VersionApiRequest"
                           }
                        }
                     }
                  },
                  "application/xml":{
                     "schema":{
                        "$ref":"#/components/schemas/VersionApiRequest"
                     }
                  }
               }
            },
            "responses":{
               "401":{
                  "description":"not authorized"
               },
               "403":{
                  "description":"not authorized to access this resource"
               },
               "404":{
                  "description":"not found"
               },
               "406":{
                  "description":"not allowed"
               },
               "429":{
                  "description":"rate limiting exceeded",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "422":{
                  "description":"unprocessable entity",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorModel"
                        }
                     }
                  }
               },
               "201":{
                  "description":"created",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "version":{
                                 "$ref":"#/components/schemas/VersionApiResponse"
                              }
                           }
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/VersionApiResponse"
                        }
                     }
                  }
               }
            }
         }
      }
   },
   "components":{
      "schemas":{
         "Attachment":{
            "properties":{
               "id":{
                  "type":"integer",
                  "readOnly":true,
                  "example":1
               },
               "filename":{
                  "example":"service-agreement.odt",
                  "type":"string"
               },
               "filesize":{
                  "type":"integer",
                  "example":"451564"
               },
               "content_type":{
                  "example":"application/vnd.oasis.opendocument.text",
                  "type":"string"
               },
               "content_url":{
                  "format":"uri",
                  "type":"string"
               },
               "description":{
                  "type":"string"
               },
               "href_url":{
                  "format":"uri",
                  "type":"string"
               },
               "thumbnail_url":{
                  "description":"if attachment is a thumbnailable? (its image?)",
                  "format":"uri",
                  "type":"string"
               },
               "author":{
                  "title":"User",
                  "type":"object",
                  "properties":{
                     "id":{
                        "type":"integer"
                     },
                     "name":{
                        
                     }
                  }
               },
               "created_on":{
                  "format":"date-time",
                  "type":"string"
               }
            },
            "xml":{
               "name":"attachment"
            }
         },
         "AttachmentApiResponse":{
            "properties":{
               "id":{
                  "type":"integer",
                  "readOnly":true,
                  "example":1
               }
            },
            "$ref":"#/components/schemas/Attachment",
            "xml":{
               "name":"attachment"
            }
         },
         "UploadResponse":{
            "properties":{
               "id":{
                  "type":"integer"
               },
               "token":{
                  "type":"string"
               }
            },
            "xml":{
               "name":"upload"
            }
         },
         "AttachRequest":{
            "required":[
               "entity_type",
               "entity_id"
            ],
            "properties":{
               "entity_type":{
                  "type":"string",
                  "example":"Issue"
               },
               "entity_id":{
                  "type":"integer"
               },
               "attachments":{
                  "type":"array",
                  "description":"Array of attachment tokens",
                  "xml":{
                     "wrapped":true
                  },
                  "items":{
                     "title":"attachment",
                     "type":"object",
                     "xml":{
                        "name":"attachment"
                     },
                     "properties":{
                        "token":{
                           "type":"string"
                        }
                     }
                  }
               }
            },
            "xml":{
               "name":"attach"
            }
         },
         "CustomFieldApiRequest":{
            "properties":{
               "name":{
                  "type":"string",
                  "example":"auta",
                  "description":"Name of custom field"
               },
               "field_format":{
                  "type":"string",
                  "example":"list",
                  "description":"Format",
                  "enum":[
                     "string",
                     "text",
                     "link",
                     "int",
                     "float",
                     "date",
                     "list",
                     "bool",
                     "enumeration",
                     "user",
                     "version",
                     "attachment",
                     "dependent_list",
                     "easy_computed_from_query",
                     "amount",
                     "autoincrement",
                     "country_select",
                     "datetime",
                     "easy_google_map_address",
                     "easy_lookup",
                     "easy_percent",
                     "easy_rating",
                     "email",
                     "value_tree",
                     "easy_computed_token",
                     "flag"
                  ]
               },
               "regexp":{
                  "type":"string",
                  "description":"Regular expression"
               },
               "min_length":{
                  "type":"integer",
                  "description":"Minimum length"
               },
               "max_length":{
                  "type":"integer",
                  "description":"Maximum length"
               },
               "is_required":{
                  "type":"boolean",
                  "description":"Required"
               },
               "is_for_all":{
                  "type":"boolean",
                  "description":"For all projects"
               },
               "is_filter":{
                  "type":"boolean",
                  "description":"Used as a filter"
               },
               "position":{
                  "type":"integer",
                  "example":2,
                  "description":"Position of custom field in list"
               },
               "searchable":{
                  "type":"boolean",
                  "description":"is searchable ?"
               },
               "default_value":{
                  "type":"string",
                  "description":"Default value"
               },
               "editable":{
                  "type":"boolean",
                  "description":"Editable"
               },
               "visible":{
                  "type":"boolean",
                  "description":"Visible"
               },
               "multiple":{
                  "type":"boolean",
                  "description":"Multiple values"
               },
               "description":{
                  "type":"string",
                  "description":"Description"
               },
               "is_primary":{
                  "type":"boolean",
                  "description":"Primary"
               },
               "show_empty":{
                  "type":"boolean",
                  "description":"Show with empty fields"
               },
               "show_on_list":{
                  "type":"boolean",
                  "description":"Show in list"
               },
               "settings":{
                  "type":"string",
                  "description":"Its Hash object"
               },
               "internal_name":{
                  "type":"string",
                  "description":""
               },
               "show_on_more_form":{
                  "type":"boolean",
                  "example":"true",
                  "description":"Show as additional attribute"
               },
               "easy_external_id":{
                  "type":"string",
                  "description":""
               },
               "easy_min_value":{
                  "type":"number",
                  "format":"float",
                  "description":""
               },
               "easy_max_value":{
                  "type":"number",
                  "format":"float",
                  "description":""
               },
               "mail_notification":{
                  "type":"boolean",
                  "example":"true",
                  "description":"Email notifications"
               },
               "easy_group_id":{
                  "type":"integer",
                  "description":""
               },
               "clear_when_anonymize":{
                  "type":"boolean",
                  "description":"Clear when anonymize"
               },
               "possible_values":{
                  "type":"array",
                  "xml":{
                     "wrapped":true
                  },
                  "items":{
                     "type":"string",
                     "xml":{
                        "name":"possible_value"
                     },
                     "example":"value"
                  }
               }
            },
            "required":[
               "name"
            ],
            "xml":{
               "name":"custom_field"
            }
         },
         "CustomFieldApiResponse":{
            "properties":{
               "id":{
                  "type":"integer",
                  "readOnly":true,
                  "example":1
               },
               "name":{
                  "type":"string",
                  "example":"auta",
                  "description":"Name of custom field"
               },
               "field_format":{
                  "type":"string",
                  "example":"list",
                  "description":"Format",
                  "enum":[
                     "string",
                     "text",
                     "link",
                     "int",
                     "float",
                     "date",
                     "list",
                     "bool",
                     "enumeration",
                     "user",
                     "version",
                     "attachment",
                     "dependent_list",
                     "easy_computed_from_query",
                     "amount",
                     "autoincrement",
                     "country_select",
                     "datetime",
                     "easy_google_map_address",
                     "easy_lookup",
                     "easy_percent",
                     "easy_rating",
                     "email",
                     "value_tree",
                     "easy_computed_token",
                     "flag"
                  ]
               },
               "regexp":{
                  "type":"string",
                  "description":"Regular expression"
               },
               "min_length":{
                  "type":"integer",
                  "description":"Minimum length"
               },
               "max_length":{
                  "type":"integer",
                  "description":"Maximum length"
               },
               "is_required":{
                  "type":"boolean",
                  "description":"Required"
               },
               "is_for_all":{
                  "type":"boolean",
                  "description":"For all projects"
               },
               "is_filter":{
                  "type":"boolean",
                  "description":"Used as a filter"
               },
               "position":{
                  "type":"integer",
                  "example":2,
                  "description":"Position of custom field in list"
               },
               "searchable":{
                  "type":"boolean",
                  "description":"is searchable ?"
               },
               "default_value":{
                  "type":"string",
                  "description":"Default value"
               },
               "editable":{
                  "type":"boolean",
                  "description":"Editable"
               },
               "visible":{
                  "type":"boolean",
                  "description":"Visible"
               },
               "multiple":{
                  "type":"boolean",
                  "description":"Multiple values"
               },
               "description":{
                  "type":"string",
                  "description":"Description"
               },
               "is_primary":{
                  "type":"boolean",
                  "description":"Primary"
               },
               "show_empty":{
                  "type":"boolean",
                  "description":"Show with empty fields"
               },
               "show_on_list":{
                  "type":"boolean",
                  "description":"Show in list"
               },
               "settings":{
                  "type":"string",
                  "description":"Its Hash object"
               },
               "internal_name":{
                  "type":"string",
                  "description":""
               },
               "show_on_more_form":{
                  "type":"boolean",
                  "example":"true",
                  "description":"Show as additional attribute"
               },
               "easy_external_id":{
                  "type":"string",
                  "description":""
               },
               "easy_min_value":{
                  "type":"number",
                  "format":"float",
                  "description":""
               },
               "easy_max_value":{
                  "type":"number",
                  "format":"float",
                  "description":""
               },
               "mail_notification":{
                  "type":"boolean",
                  "example":"true",
                  "description":"Email notifications"
               },
               "easy_group_id":{
                  "type":"integer",
                  "description":""
               },
               "clear_when_anonymize":{
                  "type":"boolean",
                  "description":"Clear when anonymize"
               },
               "type":{
                  "type":"string",
                  "example":"IssueCustomField",
                  "description":"Type",
                  "readOnly":true
               },
               "possible_values":{
                  "type":"array",
                  "xml":{
                     "wrapped":true
                  },
                  "items":{
                     "properties":{
                        "value":{
                           "type":"string"
                        },
                        "label":{
                           "type":"string"
                        }
                     }
                  }
               },
               "format_store":{
                  "type":"string",
                  "example":"{\"url_pattern\"=\u003e\"\", \"edit_tag_style\"=\u003e\"\"}",
                  "description":"",
                  "readOnly":true
               },
               "easy_computed_token":{
                  "type":"string",
                  "example":"",
                  "description":"",
                  "readOnly":true
               },
               "non_deletable":{
                  "type":"boolean",
                  "example":"false",
                  "description":"",
                  "readOnly":true
               },
               "non_editable":{
                  "type":"boolean",
                  "example":"false",
                  "description":"",
                  "readOnly":true
               },
               "disabled":{
                  "type":"boolean",
                  "example":"false",
                  "description":"",
                  "readOnly":true
               },
               "created_at":{
                  "type":"string",
                  "format":"date-time",
                  "readOnly":true
               },
               "updated_at":{
                  "type":"string",
                  "format":"date-time",
                  "readOnly":true
               }
            },
            "xml":{
               "name":"custom_field"
            }
         },
         "CustomFieldValueApiRequest":{
            "required":[
               "id",
               "value"
            ],
            "properties":{
               "id":{
                  "type":"integer",
                  "example":1
               },
               "value":{
                  "example":"Iron Man",
                  "description":"value is based on field_format - can be Array, Boolean, Date",
                  "type":"string"
               }
            },
            "xml":{
               "name":"custom_field_value"
            }
         },
         "CustomFieldValueApiResponse":{
            "properties":{
               "id":{
                  "type":"integer",
                  "readOnly":true,
                  "example":1
               },
               "name":{
                  "example":"Hero list",
                  "readOnly":true,
                  "type":"string"
               },
               "internal_name":{
                  "example":"easy_hero_list",
                  "readOnly":true,
                  "type":"string"
               },
               "field_format":{
                  "readOnly":true,
                  "enum":[
                     "string",
                     "text",
                     "link",
                     "int",
                     "float",
                     "date",
                     "list",
                     "bool",
                     "enumeration",
                     "user",
                     "version",
                     "attachment",
                     "dependent_list",
                     "easy_computed_from_query",
                     "amount",
                     "autoincrement",
                     "country_select",
                     "datetime",
                     "easy_google_map_address",
                     "easy_lookup",
                     "easy_percent",
                     "easy_rating",
                     "email",
                     "value_tree",
                     "easy_computed_token",
                     "flag"
                  ],
                  "type":"string"
               },
               "value":{
                  "description":"value is based on field_format - can be Array, Boolean, Date",
                  "type":"string"
               }
            },
            "xml":{
               "name":"custom_field_value"
            }
         },
         "DocumentApiRequest":{
            "properties":{
               "title":{
                  "example":"",
                  "type":"string"
               },
               "description":{
                  "example":"",
                  "type":"string"
               },
               "project_id":{
                  "type":"integer"
               },
               "category_id":{
                  "type":"integer"
               },
               "custom_fields":{
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/CustomFieldValueApiRequest"
                  }
               }
            },
            "required":[
               "title",
               "project_id",
               "category_id"
            ],
            "xml":{
               "name":"document"
            }
         },
         "DocumentApiResponse":{
            "properties":{
               "id":{
                  "type":"integer",
                  "readOnly":true,
                  "example":1
               },
               "title":{
                  "example":"",
                  "type":"string"
               },
               "description":{
                  "example":"",
                  "type":"string"
               },
               "project":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "category":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "custom_fields":{
                  "type":"array",
                  "xml":{
                     "wrapped":true
                  },
                  "items":{
                     "$ref":"#/components/schemas/CustomFieldValueApiResponse"
                  }
               },
               "attachments":{
                  "type":"array",
                  "description":"if you specify `include=attachments`",
                  "xml":{
                     "wrapped":true
                  },
                  "items":{
                     "$ref":"#/components/schemas/Attachment"
                  }
               },
               "created_on":{
                  "type":"string",
                  "format":"date-time",
                  "readOnly":true
               }
            },
            "xml":{
               "name":"document"
            }
         },
         "DocumentsGroupApiResponse":{
            "properties":{
               "id":{
                  "type":"integer",
                  "readOnly":true,
                  "example":1
               },
               "name":{
                  "type":"string"
               },
               "documents":{
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/DocumentApiResponse"
                  }
               }
            },
            "title":"DocumentsGroup",
            "xml":{
               "name":"documents_group"
            }
         },
         "EasyAsyncExportApiResponse":{
            "properties":{
               "id":{
                  "type":"integer",
                  "readOnly":true,
                  "example":1
               },
               "format":{
                  "type":"string",
                  "example":"csv",
                  "description":"Export format"
               },
               "title":{
                  "type":"string",
                  "example":"Csv export",
                  "description":"Export title"
               },
               "filename":{
                  "type":"string",
                  "example":"tasks.csv",
                  "description":"Export filename"
               },
               "status":{
                  "type":"string",
                  "example":"done",
                  "description":"Export process status",
                  "enum":[
                     "enqueued",
                     "process",
                     "done",
                     "failed"
                  ]
               },
               "attachments":{
                  "type":"array",
                  "description":"if you specify `include=attachments`",
                  "xml":{
                     "wrapped":true
                  },
                  "items":{
                     "$ref":"#/components/schemas/Attachment"
                  }
               },
               "author":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "created_at":{
                  "type":"string",
                  "format":"date-time",
                  "readOnly":true
               },
               "updated_at":{
                  "type":"string",
                  "format":"date-time",
                  "readOnly":true
               }
            },
            "xml":{
               "name":"easy_async_export"
            }
         },
         "EasyAttendanceApiRequest":{
            "properties":{
               "user_id":{
                  "type":"integer"
               },
               "arrival":{
                  "type":"string",
                  "example":"2020-12-03T00:00:00Z",
                  "description":"",
                  "format":"datetime"
               },
               "departure":{
                  "type":"string",
                  "example":"2020-12-03T23:30:00Z",
                  "description":"",
                  "format":"datetime"
               },
               "edited_by_id":{
                  "type":"integer"
               },
               "edited_when":{
                  "type":"string",
                  "description":"",
                  "format":"datetime"
               },
               "locked":{
                  "type":"boolean"
               },
               "created_at":{
                  "type":"string",
                  "format":"date-time",
                  "readOnly":true
               },
               "updated_at":{
                  "type":"string",
                  "format":"date-time",
                  "readOnly":true
               },
               "arrival_user_ip":{
                  "type":"string",
                  "example":"79.98.112.115",
                  "format":"ipv4",
                  "readOnly":true
               },
               "time_entry_id":{
                  "type":"integer"
               },
               "departure_user_ip":{
                  "type":"string",
                  "example":"79.98.112.115",
                  "format":"ipv4",
                  "readOnly":true
               },
               "range":{
                  "enum":[
                     3,
                     1,
                     2
                  ],
                  "type":"string"
               },
               "description":{
                  "type":"string"
               },
               "approval_status":{
                  "enum":[
                     1,
                     2,
                     3,
                     4,
                     5,
                     6
                  ],
                  "readOnly":true,
                  "type":"string"
               },
               "approved_by_id":{
                  "type":"integer"
               },
               "approved_at":{
                  "type":"string",
                  "description":"",
                  "format":"datetime",
                  "readOnly":true
               },
               "previous_approval_status":{
                  "type":"boolean"
               },
               "arrival_latitude":{
                  "type":"number",
                  "example":"50.04",
                  "format":"float",
                  "readOnly":true
               },
               "arrival_longitude":{
                  "type":"number",
                  "example":"14.98",
                  "format":"float",
                  "readOnly":true
               },
               "departure_latitude":{
                  "type":"number",
                  "example":"50.04",
                  "format":"float",
                  "readOnly":true
               },
               "departure_longitude":{
                  "type":"number",
                  "example":"14.98",
                  "format":"float",
                  "readOnly":true
               },
               "time_zone":{
                  "type":"string"
               },
               "easy_external_id":{
                  "type":"string",
                  "example":"1919385b-5040-46e7-93e5-addbab6b39fa",
                  "format":"uuid"
               },
               "need_approve":{
                  "type":"boolean",
                  "readOnly":true
               },
               "limit_exceeded":{
                  "type":"boolean",
                  "readOnly":true
               },
               "hours":{
                  "type":"number",
                  "example":"23.5",
                  "format":"float",
                  "readOnly":true
               },
               "easy_attendance_activity_id":{
                  "type":"integer"
               }
            },
            "required":[
               "user_id",
               "arrival",
               "easy_entity_activity_id"
            ],
            "xml":{
               "name":"easy_attendance"
            }
         },
         "EasyAttendanceApiResponse":{
            "properties":{
               "id":{
                  "type":"integer",
                  "readOnly":true,
                  "example":1
               },
               "user":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "arrival":{
                  "type":"string",
                  "example":"2020-12-03T00:00:00Z",
                  "description":"",
                  "format":"datetime"
               },
               "departure":{
                  "type":"string",
                  "example":"2020-12-03T23:30:00Z",
                  "description":"",
                  "format":"datetime"
               },
               "edited_by":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "edited_when":{
                  "type":"string",
                  "description":"",
                  "format":"datetime"
               },
               "locked":{
                  "type":"boolean"
               },
               "created_at":{
                  "type":"string",
                  "format":"date-time",
                  "readOnly":true
               },
               "updated_at":{
                  "type":"string",
                  "format":"date-time",
                  "readOnly":true
               },
               "arrival_user_ip":{
                  "type":"string",
                  "example":"79.98.112.115",
                  "format":"ipv4",
                  "readOnly":true
               },
               "time_entry":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "departure_user_ip":{
                  "type":"string",
                  "example":"79.98.112.115",
                  "format":"ipv4",
                  "readOnly":true
               },
               "range":{
                  "enum":[
                     3,
                     1,
                     2
                  ],
                  "type":"string"
               },
               "description":{
                  "type":"string"
               },
               "approval_status":{
                  "enum":[
                     1,
                     2,
                     3,
                     4,
                     5,
                     6
                  ],
                  "readOnly":true,
                  "type":"string"
               },
               "approved_by":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "approved_at":{
                  "type":"string",
                  "description":"",
                  "format":"datetime",
                  "readOnly":true
               },
               "previous_approval_status":{
                  "type":"boolean"
               },
               "arrival_latitude":{
                  "type":"number",
                  "example":"50.04",
                  "format":"float",
                  "readOnly":true
               },
               "arrival_longitude":{
                  "type":"number",
                  "example":"14.98",
                  "format":"float",
                  "readOnly":true
               },
               "departure_latitude":{
                  "type":"number",
                  "example":"50.04",
                  "format":"float",
                  "readOnly":true
               },
               "departure_longitude":{
                  "type":"number",
                  "example":"14.98",
                  "format":"float",
                  "readOnly":true
               },
               "time_zone":{
                  "type":"string"
               },
               "easy_external_id":{
                  "type":"string",
                  "example":"1919385b-5040-46e7-93e5-addbab6b39fa",
                  "format":"uuid"
               },
               "need_approve":{
                  "type":"boolean",
                  "readOnly":true
               },
               "limit_exceeded":{
                  "type":"boolean",
                  "readOnly":true
               },
               "hours":{
                  "type":"number",
                  "example":"23.5",
                  "format":"float",
                  "readOnly":true
               },
               "easy_attendance_activity":{
                  "type":"object",
                  "$ref":"#/components/schemas/EasyAttendanceActivityApiResponse"
               }
            },
            "xml":{
               "name":"easy_attendance"
            }
         },
         "EasyAttendanceActivityApiResponse":{
            "properties":{
               "id":{
                  "type":"integer",
                  "readOnly":true,
                  "example":1
               },
               "name":{
                  "type":"string"
               },
               "position":{
                  "type":"integer"
               },
               "at_work":{
                  "type":"boolean"
               },
               "is_default":{
                  "type":"boolean"
               },
               "internal_name":{
                  "type":"string"
               },
               "non_deletable":{
                  "type":"boolean"
               },
               "created_at":{
                  "type":"string",
                  "format":"date-time",
                  "readOnly":true
               },
               "updated_at":{
                  "type":"string",
                  "format":"date-time",
                  "readOnly":true
               },
               "project_mapping":{
                  "type":"boolean"
               },
               "mapped_project":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "mapped_time_entry_activity":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "mail":{
                  "type":"string",
                  "description":"",
                  "format":"datetime"
               },
               "color_schema":{
                  "enum":[
                     "scheme-0",
                     "scheme-1",
                     "scheme-2",
                     "scheme-3",
                     "scheme-4",
                     "scheme-5",
                     "scheme-6",
                     "scheme-7",
                     "scheme-8",
                     "scheme-9",
                     "scheme-10",
                     "scheme-11"
                  ],
                  "type":"string"
               },
               "approval_required":{
                  "type":"boolean"
               },
               "use_specify_time":{
                  "type":"boolean"
               },
               "system_activity":{
                  "type":"boolean"
               }
            },
            "xml":{
               "name":"easy_attendance_activity"
            }
         },
         "EasyBillingInfoApiRequest":{
            "properties":{
               "organization":{
                  "example":"Easy Software s.r.o.",
                  "type":"string"
               },
               "street":{
                  "example":"Prague",
                  "description":"Street",
                  "type":"string"
               },
               "city":{
                  "example":"Prague",
                  "description":"Country",
                  "type":"string"
               },
               "country_code":{
                  "example":"CZ",
                  "description":"Country",
                  "type":"string"
               },
               "subdivision_code":{
                  "example":"CN",
                  "description":"Subdivision",
                  "type":"string"
               },
               "postal_code":{
                  "example":"16000",
                  "description":"Postal code",
                  "type":"string"
               },
               "registration_no":{
                  "readOnly":true,
                  "type":"string"
               },
               "vat_no":{
                  "example":"CZ26426269",
                  "type":"string"
               },
               "vat_rate":{
                  "type":"number",
                  "example":"22",
                  "description":"% vat"
               },
               "email":{
                  "example":"supdaniel@seznam.cz",
                  "format":"email",
                  "type":"string"
               },
               "telephone":{
                  "example":"+420344344344",
                  "description":"Phone number",
                  "type":"string"
               },
               "bank_account":{
                  "example":"164578953494/2700",
                  "description":"Bank account",
                  "type":"string"
               },
               "iban":{
                  "example":"CZ420800000000045466101292",
                  "description":"International Bank Account Number",
                  "type":"string"
               },
               "variable_symbol":{
                  "example":"601924858",
                  "description":"Variable symbol",
                  "type":"string"
               },
               "swift":{
                  "example":"ING8NL2A",
                  "description":"Society for Worldwide Interbank Financial Telecommunication",
                  "type":"string"
               },
               "bic":{
                  "example":"CFZCZPPAXXX",
                  "description":"Business Identification Code",
                  "type":"string"
               }
            },
            "xml":{
               "name":"easy_billing_info"
            }
         },
         "EasyBillingInfoApiResponse":{
            "properties":{
               "id":{
                  "type":"integer",
                  "readOnly":true,
                  "example":1
               },
               "organization":{
                  "example":"Easy Software s.r.o.",
                  "type":"string"
               },
               "street":{
                  "example":"Prague",
                  "description":"Street",
                  "type":"string"
               },
               "city":{
                  "example":"Prague",
                  "description":"Country",
                  "type":"string"
               },
               "country_code":{
                  "example":"CZ",
                  "description":"Country",
                  "type":"string"
               },
               "subdivision_code":{
                  "example":"CN",
                  "description":"Subdivision",
                  "type":"string"
               },
               "postal_code":{
                  "example":"16000",
                  "description":"Postal code",
                  "type":"string"
               },
               "registration_no":{
                  "readOnly":true,
                  "type":"string"
               },
               "vat_no":{
                  "example":"CZ26426269",
                  "type":"string"
               },
               "vat_rate":{
                  "type":"number",
                  "example":"22",
                  "description":"% vat"
               },
               "email":{
                  "example":"supdaniel@seznam.cz",
                  "format":"email",
                  "type":"string"
               },
               "telephone":{
                  "example":"+420344344344",
                  "description":"Phone number",
                  "type":"string"
               },
               "bank_account":{
                  "example":"164578953494/2700",
                  "description":"Bank account",
                  "type":"string"
               },
               "iban":{
                  "example":"CZ420800000000045466101292",
                  "description":"International Bank Account Number",
                  "type":"string"
               },
               "variable_symbol":{
                  "example":"601924858",
                  "description":"Variable symbol",
                  "type":"string"
               },
               "swift":{
                  "example":"ING8NL2A",
                  "description":"Society for Worldwide Interbank Financial Telecommunication",
                  "type":"string"
               },
               "bic":{
                  "example":"CFZCZPPAXXX",
                  "description":"Business Identification Code",
                  "type":"string"
               }
            },
            "xml":{
               "name":"easy_billing_info"
            }
         },
         "EasyChecklistApiRequest":{
            "properties":{
               "name":{
                  "example":"To do list",
                  "type":"string"
               },
               "is_default_for_new_projects":{
                  "type":"boolean",
                  "example":false
               },
               "entity_id":{
                  "type":"integer",
                  "example":123
               },
               "entity_type":{
                  "example":"Issue",
                  "type":"string"
               },
               "easy_checklist_items_attributes":{
                  "type":"array",
                  "xml":{
                     "wrapped":true
                  },
                  "items":{
                     "$ref":"#/components/schemas/EasyChecklistItemApiRequestFromChecklists"
                  }
               }
            },
            "xml":{
               "name":"easy_checklist"
            }
         },
         "EasyChecklistApiResponse":{
            "properties":{
               "id":{
                  "type":"integer",
                  "readOnly":true,
                  "example":1
               },
               "name":{
                  "example":"To do list",
                  "type":"string"
               },
               "is_default_for_new_projects":{
                  "type":"boolean",
                  "example":false
               },
               "author":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "entity":{
                  "type":"object",
                  "xml":{
                     "wrapped":true
                  },
                  "properties":{
                     "entity_id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        },
                        "example":123
                     },
                     "entity_type":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        },
                        "example":"Issue"
                     }
                  }
               },
               "easy_checklist_items":{
                  "type":"array",
                  "xml":{
                     "wrapped":true
                  },
                  "items":{
                     "$ref":"#/components/schemas/EasyChecklistItemApiResponse"
                  }
               },
               "created_at":{
                  "type":"string",
                  "format":"date-time",
                  "readOnly":true
               },
               "updated_at":{
                  "type":"string",
                  "format":"date-time",
                  "readOnly":true
               }
            },
            "xml":{
               "name":"easy_checklist"
            }
         },
         "EasyChecklistItemApiRequest":{
            "properties":{
               "subject":{
                  "example":"Need to do",
                  "type":"string"
               },
               "done":{
                  "type":"boolean",
                  "description":"Is this done item?",
                  "example":false
               },
               "easy_checklist_id":{
                  "type":"integer"
               },
               "new_position":{
                  "type":"integer",
                  "example":1
               }
            },
            "xml":{
               "name":"easy_checklist_item"
            }
         },
         "EasyChecklistItemApiRequestFromChecklists":{
            "properties":{
               "subject":{
                  "example":"Need to do",
                  "type":"string"
               },
               "done":{
                  "type":"boolean",
                  "description":"Is this done item?",
                  "example":false
               },
               "id":{
                  "type":"integer",
                  "description":"Optional. Specify only to update an item in checklist.",
                  "example":"1 (Optional. Specify only to update an item with 'id' in checklist. Skip this attribute for create new element in checklist.)"
               },
               "new_position":{
                  "type":"integer",
                  "example":1
               }
            },
            "xml":{
               "name":"easy_checklist_item"
            }
         },
         "EasyChecklistItemApiResponse":{
            "properties":{
               "id":{
                  "type":"integer",
                  "readOnly":true,
                  "example":1
               },
               "subject":{
                  "example":"Need to do",
                  "type":"string"
               },
               "done":{
                  "type":"boolean",
                  "description":"Is this done item?",
                  "example":false
               },
               "author":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "changed_by":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "easy_checklist":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "position":{
                  "type":"integer",
                  "example":1
               },
               "created_at":{
                  "type":"string",
                  "format":"date-time",
                  "readOnly":true
               },
               "updated_at":{
                  "type":"string",
                  "format":"date-time",
                  "readOnly":true
               }
            },
            "xml":{
               "name":"easy_checklist_item"
            }
         },
         "EasyChecklistTemplateApiResponse":{
            "properties":{
               "id":{
                  "type":"integer",
                  "readOnly":true,
                  "example":1
               },
               "name":{
                  "example":"To do list",
                  "type":"string"
               },
               "is_default_for_new_projects":{
                  "type":"boolean",
                  "example":false
               },
               "author":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "easy_checklist_items":{
                  "type":"array",
                  "xml":{
                     "wrapped":true
                  },
                  "items":{
                     "$ref":"#/components/schemas/EasyChecklistItemApiResponse"
                  }
               },
               "is_template":{
                  "type":"boolean",
                  "example":true
               },
               "journals":{
                  "type":"array",
                  "description":"if you specify `include=journals`",
                  "xml":{
                     "wrapped":true
                  },
                  "items":{
                     "$ref":"#/components/schemas/JournalApiResponse"
                  }
               },
               "created_at":{
                  "type":"string",
                  "format":"date-time",
                  "readOnly":true
               },
               "updated_at":{
                  "type":"string",
                  "format":"date-time",
                  "readOnly":true
               }
            },
            "xml":{
               "name":"easy_checklist"
            }
         },
         "EasyContactApiRequest":{
            "properties":{
               "author_note":{
                  "type":"string",
                  "description":"Comments"
               },
               "firstname":{
                  "type":"string",
                  "example":"John",
                  "description":"First name"
               },
               "lastname":{
                  "type":"string",
                  "example":"Smith",
                  "description":"Last name"
               },
               "account_opened":{
                  "type":"string",
                  "example":"2020-05-15",
                  "format":"date",
                  "description":"Date when account became a client"
               },
               "account_closed":{
                  "type":"string",
                  "example":"2020-05-15",
                  "format":"date",
                  "description":"Date when client left us"
               },
               "easy_contact_status_id":{
                  "type":"integer"
               },
               "easy_contact_level_id":{
                  "type":"integer"
               },
               "easy_contact_customer_left_reason_id":{
                  "type":"integer"
               },
               "easy_contact_industry_id":{
                  "type":"integer"
               },
               "easy_external_id":{
                  "type":"string"
               },
               "easy_avatar_url":{
                  "type":"string"
               },
               "website":{
                  "type":"string"
               },
               "is_global":{
                  "type":"boolean"
               },
               "referencable":{
                  "type":"boolean"
               },
               "parent_id":{
                  "type":"integer"
               },
               "assigned_to_id":{
                  "type":"integer"
               },
               "external_assigned_to_id":{
                  "type":"integer"
               },
               "easy_contact_type_id":{
                  "type":"integer"
               },
               "easy_supplier_company_id":{
                  "type":"integer",
                  "description":"ID of supplier company (EasySupplierCompany)",
                  "example":"42"
               },
               "custom_fields":{
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/CustomFieldValueApiRequest"
                  }
               },
               "primary_easy_billing_info_attributes":{
                  "type":"object",
                  "$ref":"#/components/schemas/EasyBillingInfoApiRequest"
               },
               "contact_easy_billing_info_attributes":{
                  "type":"object",
                  "$ref":"#/components/schemas/EasyBillingInfoApiRequest"
               },
               "tag_list":{
                  "type":"array",
                  "description":"List of tags associated with entity",
                  "example":[
                     "deployment",
                     "gantt",
                     "ldap"
                  ],
                  "items":{
                     "type":"string"
                  }
               },
               "guid":{
                  "format":"uuid",
                  "example":"7d7225cf-e786-445c-b504-f2d96d11e8ac",
                  "type":"string"
               },
               "type_id":{
                  "type":"integer",
                  "description":"ID of easy contact type(EasyContactType), 'easy_contact_type' in response"
               }
            },
            "required":[
               "firstname",
               "lastname",
               "type_id"
            ],
            "xml":{
               "name":"easy_contact"
            }
         },
         "EasyContactApiResponse":{
            "properties":{
               "id":{
                  "type":"integer",
                  "readOnly":true,
                  "example":1
               },
               "author_note":{
                  "type":"string",
                  "description":"Comments"
               },
               "firstname":{
                  "type":"string",
                  "example":"John",
                  "description":"First name"
               },
               "lastname":{
                  "type":"string",
                  "example":"Smith",
                  "description":"Last name"
               },
               "account_opened":{
                  "type":"string",
                  "example":"2020-05-15",
                  "format":"date",
                  "description":"Date when account became a client"
               },
               "account_closed":{
                  "type":"string",
                  "example":"2020-05-15",
                  "format":"date",
                  "description":"Date when client left us"
               },
               "easy_contact_status":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "easy_contact_level":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "easy_contact_customer_left_reason":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "easy_contact_industry":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "easy_external_id":{
                  "type":"string"
               },
               "easy_avatar_url":{
                  "type":"string"
               },
               "website":{
                  "type":"string"
               },
               "is_global":{
                  "type":"boolean"
               },
               "referencable":{
                  "type":"boolean"
               },
               "parent":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "assigned_to":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "external_assigned_to":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "easy_contact_type":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer"
                     },
                     "name":{
                        "type":"string"
                     }
                  }
               },
               "easy_supplier_company":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "custom_fields":{
                  "type":"array",
                  "xml":{
                     "wrapped":true
                  },
                  "items":{
                     "$ref":"#/components/schemas/CustomFieldValueApiResponse"
                  }
               },
               "organization":{
                  "example":"Easy Software s.r.o.",
                  "type":"string"
               },
               "street":{
                  "example":"Prague",
                  "description":"Street",
                  "type":"string"
               },
               "city":{
                  "example":"Prague",
                  "description":"Country",
                  "type":"string"
               },
               "country_code":{
                  "type":"string",
                  "readOnly":true
               },
               "subdivision_code":{
                  "example":"CN",
                  "description":"Subdivision",
                  "type":"string"
               },
               "postal_code":{
                  "example":"16000",
                  "description":"Postal code",
                  "type":"string"
               },
               "registration_no":{
                  "readOnly":true,
                  "type":"string"
               },
               "vat_no":{
                  "example":"CZ26426269",
                  "type":"string"
               },
               "vat_rate":{
                  "type":"number",
                  "example":"22",
                  "description":"% vat"
               },
               "email":{
                  "example":"supdaniel@seznam.cz",
                  "format":"email",
                  "type":"string"
               },
               "telephone":{
                  "example":"+420344344344",
                  "description":"Phone number",
                  "type":"string"
               },
               "bank_account":{
                  "example":"164578953494/2700",
                  "description":"Bank account",
                  "type":"string"
               },
               "iban":{
                  "example":"CZ420800000000045466101292",
                  "description":"International Bank Account Number",
                  "type":"string"
               },
               "variable_symbol":{
                  "example":"601924858",
                  "description":"Variable symbol",
                  "type":"string"
               },
               "swift":{
                  "example":"ING8NL2A",
                  "description":"Society for Worldwide Interbank Financial Telecommunication",
                  "type":"string"
               },
               "bic":{
                  "example":"CFZCZPPAXXX",
                  "description":"Business Identification Code",
                  "type":"string"
               },
               "billing_info":{
                  "type":"object",
                  "$ref":"#/components/schemas/EasyBillingInfoApiResponse"
               },
               "tag_list":{
                  "type":"array",
                  "description":"List of tags associated with entity",
                  "example":[
                     "deployment",
                     "gantt",
                     "ldap"
                  ],
                  "items":{
                     "type":"string"
                  }
               },
               "eu_member":{
                  "type":"boolean",
                  "readOnly":true
               },
               "author":{
                  "type":"object",
                  "readOnly":true,
                  "description":"If you pass `include=author` in request parameters",
                  "properties":{
                     "id":{
                        "type":"integer"
                     },
                     "name":{
                        "type":"string"
                     }
                  }
               },
               "guid":{
                  "type":"string",
                  "example":"3169464e-3115-4884-a01f-c61fbd6cf145",
                  "readOnly":true
               },
               "latitude":{
                  "type":"number",
                  "example":"41.681",
                  "format":"float",
                  "readOnly":true
               },
               "longitude":{
                  "type":"number",
                  "example":"44.0287",
                  "format":"float",
                  "readOnly":true
               },
               "time_zone":{
                  "type":"string",
                  "example":"Asia/Tbilisi",
                  "description":"Time zone",
                  "readOnly":true
               },
               "score":{
                  "type":"integer",
                  "example":"",
                  "readOnly":true
               },
               "fullname":{
                  "type":"string",
                  "example":"John Smith",
                  "readOnly":true
               },
               "account_duration":{
                  "type":"number",
                  "readOnly":true
               },
               "expected_revenues_this_year":{
                  "type":"number",
                  "readOnly":true
               },
               "last_year_revenues":{
                  "type":"number",
                  "readOnly":true
               },
               "lifetime_revenues":{
                  "type":"number",
                  "readOnly":true
               },
               "created_on":{
                  "type":"string",
                  "format":"date-time",
                  "readOnly":true
               },
               "updated_on":{
                  "type":"string",
                  "format":"date-time",
                  "readOnly":true
               }
            },
            "xml":{
               "name":"easy_contact"
            }
         },
         "EasyContactCustomerLeftReasonApiResponse":{
            "properties":{
               "id":{
                  "type":"integer",
                  "readOnly":true,
                  "example":1
               },
               "name":{
                  "type":"string",
                  "example":"Name X",
                  "description":"Name"
               },
               "internal_name":{
                  "type":"string",
                  "example":"Super cool name",
                  "description":"Internal name"
               },
               "position":{
                  "type":"integer",
                  "example":"4",
                  "description":"Position"
               },
               "is_default":{
                  "type":"boolean",
                  "description":"Default?"
               },
               "active":{
                  "type":"boolean",
                  "description":"Active?"
               }
            },
            "xml":{
               "name":"easy_contact_customer_left_reason"
            }
         },
         "EasyContactIndustryApiResponse":{
            "properties":{
               "id":{
                  "type":"integer",
                  "readOnly":true,
                  "example":1
               },
               "name":{
                  "type":"string",
                  "example":"Name X",
                  "description":"Name"
               },
               "internal_name":{
                  "type":"string",
                  "example":"Super cool name",
                  "description":"Internal name"
               },
               "position":{
                  "type":"integer",
                  "example":"4",
                  "description":"Position"
               },
               "is_default":{
                  "type":"boolean",
                  "description":"Default?"
               },
               "active":{
                  "type":"boolean",
                  "description":"Active?"
               }
            },
            "xml":{
               "name":"easy_contact_industry"
            }
         },
         "EasyContactLevelApiResponse":{
            "properties":{
               "id":{
                  "type":"integer",
                  "readOnly":true,
                  "example":1
               },
               "name":{
                  "type":"string",
                  "example":"Name X",
                  "description":"Name"
               },
               "internal_name":{
                  "type":"string",
                  "example":"Super cool name",
                  "description":"Internal name"
               },
               "position":{
                  "type":"integer",
                  "example":"4",
                  "description":"Position"
               },
               "is_default":{
                  "type":"boolean",
                  "description":"Default?"
               },
               "active":{
                  "type":"boolean",
                  "description":"Active?"
               }
            },
            "xml":{
               "name":"easy_contact_level"
            }
         },
         "EasyContactStatusApiResponse":{
            "properties":{
               "id":{
                  "type":"integer",
                  "readOnly":true,
                  "example":1
               },
               "name":{
                  "type":"string",
                  "example":"Name X",
                  "description":"Name"
               },
               "internal_name":{
                  "type":"string",
                  "example":"Super cool name",
                  "description":"Internal name"
               },
               "position":{
                  "type":"integer",
                  "example":"4",
                  "description":"Position"
               },
               "is_default":{
                  "type":"boolean",
                  "description":"Default?"
               },
               "active":{
                  "type":"boolean",
                  "description":"Active?"
               }
            },
            "xml":{
               "name":"easy_contact_status"
            }
         },
         "EasyCrmCaseApiRequest":{
            "properties":{
               "name":{
                  "type":"string",
                  "example":"test 2",
                  "description":"Name"
               },
               "easy_crm_case_status_id":{
                  "type":"integer"
               },
               "assigned_to_id":{
                  "type":"integer"
               },
               "author_id":{
                  "type":"integer"
               },
               "project_id":{
                  "type":"integer"
               },
               "external_assigned_to_id":{
                  "type":"integer"
               },
               "easy_crm_case_payment_method_id":{
                  "type":"integer"
               },
               "easy_price_book_quote_brand_id":{
                  "type":"integer"
               },
               "description":{
                  "type":"string",
                  "example":"\u003cp\u003exxxx\u003c/p\u003e",
                  "description":"Description"
               },
               "contract_date":{
                  "type":"string",
                  "example":"2020-05-15",
                  "format":"date",
                  "description":"Date of WIN opportunity"
               },
               "paid_on":{
                  "type":"string",
                  "example":"2020-05-15",
                  "format":"date",
                  "description":"Date of payment"
               },
               "email":{
                  "type":"string",
                  "example":"lukas@easy.cz",
                  "format":"email",
                  "description":""
               },
               "telephone":{
                  "type":"string",
                  "description":""
               },
               "price":{
                  "type":"number",
                  "example":"130.0",
                  "description":"Price"
               },
               "is_repeated":{
                  "type":"boolean",
                  "example":false
               },
               "currency":{
                  "type":"string",
                  "example":"EUR",
                  "description":"Currency"
               },
               "need_reaction":{
                  "type":"boolean",
                  "description":""
               },
               "next_action":{
                  "type":"string",
                  "format":"date-time",
                  "description":""
               },
               "is_canceled":{
                  "type":"boolean",
                  "description":""
               },
               "is_finished":{
                  "type":"boolean",
                  "description":""
               },
               "lead_value":{
                  "type":"integer",
                  "description":""
               },
               "probability":{
                  "type":"integer",
                  "description":""
               },
               "email_cc":{
                  "type":"string",
                  "description":"Email cc",
                  "format":"email"
               },
               "easy_external_id":{
                  "type":"string",
                  "description":""
               },
               "custom_fields":{
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/CustomFieldValueApiRequest"
                  }
               },
               "tag_list":{
                  "type":"array",
                  "description":"List of tags associated with entity",
                  "example":[
                     "deployment",
                     "gantt",
                     "ldap"
                  ],
                  "items":{
                     "type":"string"
                  }
               },
               "account_id":{
                  "type":"integer"
               }
            },
            "xml":{
               "name":"easy_crm_case"
            }
         },
         "EasyCrmCaseApiResponse":{
            "properties":{
               "id":{
                  "type":"integer",
                  "readOnly":true,
                  "example":1
               },
               "name":{
                  "type":"string",
                  "example":"test 2",
                  "description":"Name"
               },
               "easy_crm_case_status":{
                  "type":"object",
                  "$ref":"#/components/schemas/EasyCrmCaseStatusApiResponse"
               },
               "assigned_to":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "author":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "project":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "external_assigned_to":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "easy_crm_case_payment_method":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "easy_price_book_quote_brand":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "description":{
                  "type":"string",
                  "example":"\u003cp\u003exxxx\u003c/p\u003e",
                  "description":"Description"
               },
               "contract_date":{
                  "type":"string",
                  "example":"2020-05-15",
                  "format":"date",
                  "description":"Date of WIN opportunity"
               },
               "paid_on":{
                  "type":"string",
                  "example":"2020-05-15",
                  "format":"date",
                  "description":"Date of payment"
               },
               "email":{
                  "type":"string",
                  "example":"lukas@easy.cz",
                  "format":"email",
                  "description":""
               },
               "telephone":{
                  "type":"string",
                  "description":""
               },
               "price":{
                  "type":"number",
                  "example":"130.0",
                  "description":"Price"
               },
               "is_repeated":{
                  "type":"boolean",
                  "example":false
               },
               "currency":{
                  "type":"string",
                  "example":"EUR",
                  "description":"Currency"
               },
               "need_reaction":{
                  "type":"boolean",
                  "description":""
               },
               "next_action":{
                  "type":"string",
                  "format":"date-time",
                  "description":""
               },
               "is_canceled":{
                  "type":"boolean",
                  "description":""
               },
               "is_finished":{
                  "type":"boolean",
                  "description":""
               },
               "lead_value":{
                  "type":"integer",
                  "description":""
               },
               "probability":{
                  "type":"integer",
                  "description":""
               },
               "email_cc":{
                  "type":"string",
                  "description":"Email cc",
                  "format":"email"
               },
               "easy_external_id":{
                  "type":"string",
                  "description":""
               },
               "custom_fields":{
                  "type":"array",
                  "xml":{
                     "wrapped":true
                  },
                  "items":{
                     "$ref":"#/components/schemas/CustomFieldValueApiResponse"
                  }
               },
               "tag_list":{
                  "type":"array",
                  "description":"List of tags associated with entity",
                  "example":[
                     "deployment",
                     "gantt",
                     "ldap"
                  ],
                  "items":{
                     "type":"string"
                  }
               },
               "guid":{
                  "format":"uuid",
                  "readOnly":true,
                  "example":"4da1a894-7ad4-4f07-b261-d454036bd09f",
                  "type":"string"
               },
               "easy_closed_by":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "easy_last_updated_by":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "account":{
                  "type":"object",
                  "$ref":"#/components/schemas/EasyContactApiResponse"
               },
               "accounted_by":{
                  "type":"object",
                  "$ref":"#/components/schemas/EasyPartnerApiResponse"
               },
               "closed_on":{
                  "type":"string",
                  "example":"2020-05-15 14:16:07 UTC",
                  "format":"date-time",
                  "description":"Closed",
                  "readOnly":true
               },
               "affiliate_uuid":{
                  "type":"string",
                  "example":"bc8995e169d97555",
                  "format":"uuid",
                  "readOnly":true
               },
               "created_at":{
                  "type":"string",
                  "format":"date-time",
                  "readOnly":true
               },
               "updated_at":{
                  "type":"string",
                  "format":"date-time",
                  "readOnly":true
               },
               "active_quote":{
                  "type":"object",
                  "$ref":"#/components/schemas/EasyPriceBookQuoteApiResponse"
               }
            },
            "xml":{
               "name":"easy_crm_case"
            }
         },
         "EasyCrmCaseItemApiRequest":{
            "properties":{
               "easy_external_id":{
                  "type":"string"
               },
               "name":{
                  "type":"string",
                  "example":"test 2",
                  "description":"Name"
               },
               "description":{
                  "type":"string",
                  "example":"\u003cp\u003exxxx\u003c/p\u003e",
                  "description":"Description"
               },
               "total_price":{
                  "type":"number",
                  "example":150
               },
               "unit":{
                  "type":"string",
                  "example":"ks",
                  "description":"Unit"
               },
               "amount":{
                  "type":"number",
                  "example":2
               },
               "price_per_unit":{
                  "type":"number",
                  "example":80
               },
               "discount":{
                  "type":"number",
                  "example":10
               },
               "easy_crm_case_id":{
                  "type":"integer"
               },
               "easy_price_book_price_id":{
                  "type":"integer"
               },
               "reorder_to_position":{
                  "type":"number",
                  "description":"Change position in list"
               }
            },
            "xml":{
               "name":"easy_crm_case_item"
            }
         },
         "EasyCrmCaseItemApiResponse":{
            "properties":{
               "id":{
                  "type":"integer",
                  "readOnly":true,
                  "example":1
               },
               "easy_external_id":{
                  "type":"string"
               },
               "name":{
                  "type":"string",
                  "example":"test 2",
                  "description":"Name"
               },
               "description":{
                  "type":"string",
                  "example":"\u003cp\u003exxxx\u003c/p\u003e",
                  "description":"Description"
               },
               "total_price":{
                  "type":"number",
                  "example":150
               },
               "unit":{
                  "type":"string",
                  "example":"ks",
                  "description":"Unit"
               },
               "amount":{
                  "type":"number",
                  "example":2
               },
               "price_per_unit":{
                  "type":"number",
                  "example":80
               },
               "discount":{
                  "type":"number",
                  "example":10
               },
               "easy_crm_case_id":{
                  "type":"integer"
               },
               "easy_price_book_price_id":{
                  "type":"integer"
               },
               "position":{
                  "type":"number",
                  "description":"Position in list"
               }
            },
            "xml":{
               "name":"easy_crm_case_item"
            }
         },
         "EasyCrmCaseStatusApiRequest":{
            "xml":{
               "name":"easy_crm_case_status"
            }
         },
         "EasyCrmCaseStatusApiResponse":{
            "properties":{
               "id":{
                  "type":"integer",
                  "readOnly":true,
                  "example":1
               },
               "name":{
                  "type":"string",
                  "example":"Status X",
                  "description":"Name"
               },
               "internal_name":{
                  "type":"string",
                  "example":"Super cool name",
                  "description":"Internal name"
               },
               "position":{
                  "type":"integer",
                  "example":"4",
                  "description":"Position"
               },
               "is_default":{
                  "type":"boolean",
                  "description":"Default?"
               },
               "is_easy_contact_required":{
                  "type":"boolean",
                  "description":"Account required?"
               },
               "is_closed":{
                  "type":"boolean",
                  "description":"Closed?"
               },
               "is_won":{
                  "type":"boolean",
                  "description":"Won?"
               },
               "is_paid":{
                  "type":"boolean",
                  "description":"Paid?"
               },
               "is_provisioned":{
                  "type":"boolean",
                  "description":"Provisioned?"
               },
               "created_at":{
                  "type":"string",
                  "format":"date-time",
                  "readOnly":true
               },
               "updated_at":{
                  "type":"string",
                  "format":"date-time",
                  "readOnly":true
               }
            },
            "xml":{
               "name":"easy_crm_case_status"
            }
         },
         "EasyEntityActivityApiRequest":{
            "properties":{
               "category_id":{
                  "type":"integer"
               },
               "author_id":{
                  "type":"integer"
               },
               "is_finished":{
                  "type":"boolean"
               },
               "all_day":{
                  "type":"boolean"
               },
               "start_time":{
                  "type":"string",
                  "readOnly":true,
                  "format":"datetime"
               },
               "end_time":{
                  "type":"string",
                  "readOnly":true,
                  "format":"datetime"
               },
               "created_at":{
                  "type":"string",
                  "format":"date-time",
                  "readOnly":true
               },
               "updated_at":{
                  "type":"string",
                  "format":"date-time",
                  "readOnly":true
               },
               "description":{
                  "type":"string"
               },
               "editable":{
                  "type":"boolean",
                  "readOnly":true
               },
               "entity_id":{
                  "type":"integer"
               },
               "entity_type":{
                  "type":"string"
               }
            },
            "required":[
               "entity_id,",
               "entity_type",
               "category_id"
            ],
            "xml":{
               "name":"easy_entity_activity"
            }
         },
         "EasyEntityActivityApiResponse":{
            "properties":{
               "id":{
                  "type":"integer",
                  "readOnly":true,
                  "example":1
               },
               "category":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "author":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "is_finished":{
                  "type":"boolean"
               },
               "all_day":{
                  "type":"boolean"
               },
               "start_time":{
                  "type":"string",
                  "readOnly":true,
                  "format":"datetime"
               },
               "end_time":{
                  "type":"string",
                  "readOnly":true,
                  "format":"datetime"
               },
               "created_at":{
                  "type":"string",
                  "format":"date-time",
                  "readOnly":true
               },
               "updated_at":{
                  "type":"string",
                  "format":"date-time",
                  "readOnly":true
               },
               "description":{
                  "type":"string"
               },
               "editable":{
                  "type":"boolean",
                  "readOnly":true
               },
               "entity":{
                  "type":"object",
                  "properties":{
                     "id":{
                        "type":"integer"
                     },
                     "type":{
                        "type":"string"
                     },
                     "name":{
                        "type":"string",
                        "readOnly":true
                     }
                  }
               },
               "contact_attendees":{
                  "type":"array",
                  "items":{
                     "type":"object",
                     "properties":{
                        "id":{
                           "type":"integer"
                        },
                        "name":{
                           "type":"string"
                        }
                     }
                  }
               },
               "users_attendees":{
                  "type":"array",
                  "items":{
                     "type":"object",
                     "properties":{
                        "id":{
                           "type":"integer"
                        },
                        "name":{
                           "type":"string"
                        }
                     }
                  }
               }
            },
            "xml":{
               "name":"easy_entity_activity"
            }
         },
         "EasyEntityImportApiRequest":{
            "properties":{
               "attachment_id":{
                  "type":"integer"
               },
               "file":{
                  "type":"string",
                  "format":"binary"
               },
               "background_import":{
                  "type":"boolean"
               }
            },
            "xml":{
               "name":"easy_entity_import"
            }
         },
         "EasyEntityImportApiResponse":{
            "properties":{
               "id":{
                  "type":"integer",
                  "readOnly":true,
                  "example":1
               },
               "imported_count":{
                  "type":"integer"
               },
               "errors":{
                  "type":"array",
                  "items":{
                     "type":"string"
                  }
               }
            },
            "xml":{
               "name":"easy_entity_import"
            }
         },
         "EasyGanttResourcesAdvanceHoursLimit":{
            "properties":{
               "id":{
                  "type":"integer",
                  "readOnly":true,
                  "example":1
               }
            },
            "title":"EasyGanttResourcesAdvanceHoursLimit",
            "type":"number",
            "format":"float",
            "xml":{
               "name":"easy_gantt_resources_advance_hours_limit"
            }
         },
         "EasyHelpdeskProjectApiResponse":{
            "properties":{
               "id":{
                  "type":"integer",
                  "readOnly":true,
                  "example":1
               },
               "project_id":{
                  "type":"integer",
                  "example":172,
                  "description":"Related project"
               },
               "tracker_id":{
                  "type":"integer",
                  "example":15,
                  "description":"Related time tracker"
               },
               "assigned_to_id":{
                  "type":"integer",
                  "example":382,
                  "description":"User whom project is assigned to"
               },
               "monthly_hours":{
                  "type":"number",
                  "example":6.2,
                  "description":"Monthly hours",
                  "format":"float"
               },
               "monitor_due_date":{
                  "type":"boolean",
                  "description":"Flag to enable due date monitoring"
               },
               "monitor_spent_time":{
                  "type":"boolean",
                  "description":"Flag to enable spent time monitoring"
               },
               "default_for_mailbox_id":{
                  "type":"integer",
                  "example":2,
                  "description":"Related mailbox"
               },
               "watchers_ids":{
                  "type":"array",
                  "example":[
                     "5",
                     "12",
                     "37"
                  ],
                  "description":"Ids of users who are members of the project",
                  "items":{
                     "type":"string"
                  }
               },
               "email_header":{
                  "type":"string",
                  "example":"Dear Mr./Mrs.",
                  "description":"Email header"
               },
               "email_footer":{
                  "type":"string",
                  "example":"Kind Regards",
                  "description":"Email footer"
               },
               "created_at":{
                  "type":"string",
                  "format":"date-time",
                  "readOnly":true
               },
               "updated_at":{
                  "type":"string",
                  "format":"date-time",
                  "readOnly":true
               },
               "aggregated_hours":{
                  "type":"boolean",
                  "description":"Flag to enable aggregated hours"
               },
               "aggregated_hours_remaining":{
                  "type":"number",
                  "example":1.2,
                  "description":"Remaining aggregated hours calculation",
                  "format":"float"
               },
               "aggregated_hours_period":{
                  "type":"string",
                  "example":"quarterly",
                  "description":"Aggregated hours period"
               },
               "aggregated_hours_start_date":{
                  "type":"string",
                  "example":"2014-01-01",
                  "format":"date",
                  "description":"Date aggregated hours to be calculated from"
               },
               "aggregated_hours_last_reset":{
                  "type":"string",
                  "example":"2014-07-01",
                  "format":"date",
                  "description":"Date aggregated hours were last reset at"
               },
               "aggregated_hours_last_update":{
                  "type":"string",
                  "example":"2014-07-06",
                  "format":"date",
                  "description":"Date aggregated hours were last updated at"
               },
               "keyword":{
                  "type":"string",
                  "example":"urgent",
                  "description":"Keyword in project"
               },
               "watcher_groups_ids":{
                  "type":"array",
                  "example":[
                     "35",
                     "41"
                  ],
                  "description":"Ids of user groups who are members of the project",
                  "items":{
                     "type":"string"
                  }
               },
               "automatically_issue_closer_enable":{
                  "type":"boolean",
                  "description":"Flag to enable automatic issue close rules"
               },
               "issue_closers":{
                  "type":"array",
                  "example":[
                     1,
                     6,
                     "7.3",
                     5,
                     6,
                     "2.0"
                  ],
                  "description":"List of automatic issue close rules for the project"
               }
            },
            "xml":{
               "name":"easy_helpdesk_project"
            }
         },
         "EasyKnowledgeStoryApiRequest":{
            "properties":{
               "name":{
                  "example":"Please read me",
                  "type":"string"
               },
               "entity_type":{
                  "type":"string",
                  "example":"Issue"
               },
               "entity_id":{
                  "type":"integer"
               },
               "description":{
                  "example":"",
                  "type":"string"
               },
               "custom_fields":{
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/CustomFieldValueApiRequest"
                  }
               },
               "tag_list":{
                  "type":"array",
                  "description":"List of tags associated with entity",
                  "example":[
                     "deployment",
                     "gantt",
                     "ldap"
                  ],
                  "items":{
                     "type":"string"
                  }
               },
               "author_id":{
                  "type":"integer"
               },
               "easy_knowledge_category_ids":{
                  "type":"array",
                  "description":"IDs of categories",
                  "items":{
                     "type":"integer"
                  }
               },
               "references_by_ids":{
                  "type":"array",
                  "description":"IDs of categories",
                  "items":{
                     "type":"integer"
                  }
               }
            },
            "xml":{
               "name":"easy_knowledge_story"
            }
         },
         "EasyKnowledgeStoryApiResponse":{
            "properties":{
               "id":{
                  "type":"integer",
                  "readOnly":true,
                  "example":1
               },
               "name":{
                  "example":"Please read me",
                  "type":"string"
               },
               "entity_type":{
                  "type":"string",
                  "example":"Issue"
               },
               "entity_id":{
                  "type":"integer"
               },
               "description":{
                  "example":"",
                  "type":"string"
               },
               "custom_fields":{
                  "type":"array",
                  "xml":{
                     "wrapped":true
                  },
                  "items":{
                     "$ref":"#/components/schemas/CustomFieldValueApiResponse"
                  }
               },
               "tag_list":{
                  "type":"array",
                  "description":"List of tags associated with entity",
                  "example":[
                     "deployment",
                     "gantt",
                     "ldap"
                  ],
                  "items":{
                     "type":"string"
                  }
               },
               "author":{
                  "title":"User",
                  "type":"object",
                  "properties":{
                     "id":{
                        "type":"integer"
                     },
                     "name":{
                        
                     }
                  }
               },
               "references":{
                  "type":"array",
                  "readOnly":true,
                  "items":{
                     "title":"EasyKnowledgeStory",
                     "type":"object",
                     "readOnly":true,
                     "properties":{
                        "id":{
                           "type":"integer"
                        },
                        "name":{
                           "type":"string"
                        },
                        "entity_id":{
                           "type":"integer"
                        },
                        "entity_type":{
                           "type":"string"
                        },
                        "storyviews":{
                           "type":"integer"
                        },
                        "author":{
                           "title":"User",
                           "type":"object",
                           "properties":{
                              "id":{
                                 "type":"integer"
                              },
                              "name":{
                                 
                              }
                           }
                        },
                        "description":{
                           "type":"string"
                        }
                     }
                  }
               },
               "storyviews":{
                  "type":"integer",
                  "example":1
               },
               "attachments":{
                  "type":"array",
                  "description":"if you specify `include=attachments`",
                  "xml":{
                     "wrapped":true
                  },
                  "items":{
                     "$ref":"#/components/schemas/Attachment"
                  }
               },
               "journals":{
                  "type":"array",
                  "description":"if you specify `include=journals`",
                  "xml":{
                     "wrapped":true
                  },
                  "items":{
                     "$ref":"#/components/schemas/JournalApiResponse"
                  }
               },
               "created_on":{
                  "type":"string",
                  "format":"date-time",
                  "readOnly":true
               },
               "updated_on":{
                  "type":"string",
                  "format":"date-time",
                  "readOnly":true
               }
            },
            "xml":{
               "name":"easy_knowledge_story"
            }
         },
         "EasyLeadApiRequest":{
            "properties":{
               "company_name":{
                  "type":"string",
                  "example":"iSensoring",
                  "description":""
               },
               "first_name":{
                  "type":"string",
                  "example":"Antoni",
                  "description":""
               },
               "last_name":{
                  "type":"string",
                  "example":"Brey",
                  "description":""
               },
               "value":{
                  "type":"string",
                  "description":"Value"
               },
               "email":{
                  "type":"string",
                  "format":"email",
                  "example":"antoni.brey@isensoring.com",
                  "description":"Email"
               },
               "score":{
                  "description":"",
                  "type":"string"
               },
               "source":{
                  "example":"",
                  "type":"string"
               },
               "description":{
                  "type":"string",
                  "example":"",
                  "description":"Description"
               },
               "telephone":{
                  "type":"string",
                  "example":"+34 935 220 022",
                  "description":"Telephone"
               },
               "mobile_phone":{
                  "type":"string",
                  "example":"+34 629 749 954",
                  "description":""
               },
               "job_title":{
                  "type":"string",
                  "description":""
               },
               "country_code":{
                  "type":"string",
                  "example":"ES",
                  "description":"Country code"
               },
               "website":{
                  "type":"string",
                  "example":"http://www.isensoring.com/",
                  "description":""
               },
               "disqualification_reason":{
                  "type":"string",
                  "description":""
               },
               "archived":{
                  "type":"boolean",
                  "description":""
               },
               "custom_fields":{
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/CustomFieldValueApiRequest"
                  }
               },
               "author_id":{
                  "type":"integer"
               },
               "easy_crm_case_id":{
                  "type":"integer"
               },
               "easy_contact_id":{
                  "type":"integer"
               },
               "easy_partner_id":{
                  "type":"integer"
               },
               "assigned_to_id":{
                  "type":"integer"
               },
               "external_assigned_to_id":{
                  "type":"integer"
               },
               "easy_personal_contact_id":{
                  "type":"integer"
               },
               "easy_campaign_id":{
                  "type":"integer"
               },
               "easy_lead_status_id":{
                  "type":"integer"
               },
               "easy_lead_priority_id":{
                  "type":"integer"
               },
               "easy_product_solution_id":{
                  "type":"integer"
               },
               "easy_lead_source_id":{
                  "type":"integer"
               }
            },
            "xml":{
               "name":"easy_lead"
            }
         },
         "EasyLeadApiResponse":{
            "properties":{
               "id":{
                  "type":"integer",
                  "readOnly":true,
                  "example":1
               },
               "company_name":{
                  "type":"string",
                  "example":"iSensoring",
                  "description":""
               },
               "first_name":{
                  "type":"string",
                  "example":"Antoni",
                  "description":""
               },
               "last_name":{
                  "type":"string",
                  "example":"Brey",
                  "description":""
               },
               "value":{
                  "type":"string",
                  "description":"Value"
               },
               "email":{
                  "type":"string",
                  "format":"email",
                  "example":"antoni.brey@isensoring.com",
                  "description":"Email"
               },
               "score":{
                  "description":"",
                  "type":"string"
               },
               "source":{
                  "example":"",
                  "type":"string"
               },
               "description":{
                  "type":"string",
                  "example":"",
                  "description":"Description"
               },
               "telephone":{
                  "type":"string",
                  "example":"+34 935 220 022",
                  "description":"Telephone"
               },
               "mobile_phone":{
                  "type":"string",
                  "example":"+34 629 749 954",
                  "description":""
               },
               "job_title":{
                  "type":"string",
                  "description":""
               },
               "country_code":{
                  "type":"string",
                  "example":"ES",
                  "description":"Country code"
               },
               "website":{
                  "type":"string",
                  "example":"http://www.isensoring.com/",
                  "description":""
               },
               "disqualification_reason":{
                  "type":"string",
                  "description":""
               },
               "archived":{
                  "type":"boolean",
                  "description":""
               },
               "custom_fields":{
                  "type":"array",
                  "xml":{
                     "wrapped":true
                  },
                  "items":{
                     "$ref":"#/components/schemas/CustomFieldValueApiResponse"
                  }
               },
               "author":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "easy_crm_case":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "easy_contact":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "easy_partner":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "assigned_to":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "external_assigned_to":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "easy_personal_contact":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "easy_campaign":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "easy_lead_status":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "easy_lead_priority":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "easy_product_solution":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "easy_lead_source":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "original_assigned_to":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "easy_price_book_quote_brand":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "is_processed":{
                  "type":"boolean",
                  "example":"",
                  "readOnly":true
               },
               "mautic_id":{
                  "type":"string",
                  "example":"",
                  "readOnly":true
               },
               "utm_source":{
                  "type":"string",
                  "example":"",
                  "readOnly":true
               },
               "utm_medium":{
                  "type":"string",
                  "example":"",
                  "readOnly":true
               },
               "utm_campaign":{
                  "type":"string",
                  "example":"",
                  "readOnly":true
               },
               "utm_content":{
                  "type":"string",
                  "example":"",
                  "readOnly":true
               },
               "utm_referrer":{
                  "type":"string",
                  "example":"",
                  "readOnly":true
               },
               "utm_url":{
                  "type":"string",
                  "example":"",
                  "readOnly":true
               },
               "name":{
                  "type":"string",
                  "example":"Antoni Brey",
                  "description":"Name",
                  "readOnly":true
               },
               "referer":{
                  "type":"string",
                  "example":"",
                  "readOnly":true
               },
               "affiliate":{
                  "type":"string",
                  "example":"",
                  "readOnly":true
               },
               "submission_form_identifier":{
                  "type":"string",
                  "example":"",
                  "readOnly":true
               },
               "source_form":{
                  "type":"string",
                  "example":"",
                  "readOnly":true
               },
               "lobby_identifier":{
                  "type":"string",
                  "example":"",
                  "readOnly":true
               },
               "journals":{
                  "type":"array",
                  "description":"if you specify `include=journals`",
                  "xml":{
                     "wrapped":true
                  },
                  "items":{
                     "$ref":"#/components/schemas/JournalApiResponse"
                  }
               },
               "created_at":{
                  "type":"string",
                  "format":"date-time",
                  "readOnly":true
               },
               "updated_at":{
                  "type":"string",
                  "format":"date-time",
                  "readOnly":true
               }
            },
            "xml":{
               "name":"easy_lead"
            }
         },
         "EasyMeetingApiRequest":{
            "properties":{
               "name":{
                  "type":"string",
                  "example":"weekly status update",
                  "description":"Name"
               },
               "description":{
                  "type":"string"
               },
               "all_day":{
                  "type":"boolean",
                  "description":"All day"
               },
               "start_time":{
                  "type":"string",
                  "example":"2020-10-27 09:00:00 UTC",
                  "format":"date-time",
                  "description":"Start"
               },
               "end_time":{
                  "type":"string",
                  "example":"2020-10-27 11:00:00 UTC",
                  "format":"date-time",
                  "description":"End"
               },
               "mails":{
                  "type":"array",
                  "items":{
                     "format":"email"
                  },
                  "description":"E-mail addresses"
               },
               "project_id":{
                  "type":"integer"
               },
               "easy_room_id":{
                  "type":"integer"
               },
               "easy_is_repeating":{
                  "type":"boolean",
                  "description":"Repeating"
               },
               "easy_next_start":{
                  "type":"string",
                  "format":"date",
                  "description":"Next repetition"
               },
               "place_name":{
                  "type":"string",
                  "description":"Place"
               },
               "uid":{
                  "type":"string",
                  "example":"1919385b-5040-46e7-93e5-addbab6b39fa",
                  "format":"uuid"
               },
               "priority":{
                  "type":"integer",
                  "example":"normal",
                  "enum":[
                     "high",
                     "normal",
                     "low"
                  ],
                  "description":"Priority"
               },
               "privacy":{
                  "type":"integer",
                  "example":"xpublic",
                  "enum":[
                     "xpublic",
                     "xprivate",
                     "confidential"
                  ],
                  "description":"Privacy"
               },
               "big_recurring":{
                  "type":"boolean",
                  "description":"Big recurring"
               },
               "easy_resource_dont_allocate":{
                  "type":"boolean",
                  "description":""
               },
               "email_notifications":{
                  "type":"integer",
                  "example":"right_now",
                  "description":""
               },
               "easy_repeat_settings":{
                  "type":"object",
                  "description":"Repeating options",
                  "properties":{
                     "simple_period":{
                        
                     },
                     "end_date":{
                        "format":"date"
                     },
                     "endtype_count_x":{
                        "type":"integer"
                     },
                     "start_timepoint":{
                        "format":"date"
                     },
                     "repeated":{
                        "type":"integer",
                        "description":"How many times it was repeated"
                     },
                     "week_days":{
                        "type":"array",
                        "items":{
                           "type":"string"
                        }
                     },
                     "period":{
                        "enum":[
                           "daily",
                           "weekly",
                           "monthly",
                           "yearly"
                        ]
                     },
                     "create_now":{
                        "description":"Is `none` or number"
                     },
                     "endtype":{
                        "enum":[
                           "date",
                           "count",
                           "endless",
                           "project_end"
                        ]
                     },
                     "daily_option":{
                        "enum":[
                           "each",
                           "work"
                        ]
                     },
                     "daily_each_x":{
                        "type":"integer"
                     },
                     "monthly_option":{
                        "enum":[
                           "xth"
                        ]
                     },
                     "monthly_day":{
                        "type":"integer"
                     },
                     "monthly_custom_order":{
                        "type":"integer"
                     },
                     "monthly_custom_day":{
                        "type":"integer"
                     },
                     "monthly_period":{
                        "type":"integer"
                     },
                     "yearly_option":{
                        "enum":[
                           "date"
                        ]
                     },
                     "yearly_month":{
                        "type":"integer"
                     },
                     "yearly_day":{
                        "type":"integer"
                     },
                     "yearly_custom_order":{
                        "type":"integer"
                     },
                     "yearly_custom_day":{
                        "type":"integer"
                     },
                     "yearly_custom_month":{
                        "type":"integer"
                     },
                     "yearly_period":{
                        "type":"integer"
                     },
                     "repeat_hour":{
                        "description":"Should be in format %H:%M",
                        "example":"04:00"
                     },
                     "create_now_count":{
                        "type":"integer"
                     }
                  }
               }
            },
            "xml":{
               "name":"easy_meeting"
            }
         },
         "EasyMeetingApiResponse":{
            "properties":{
               "id":{
                  "type":"integer",
                  "readOnly":true,
                  "example":1
               },
               "name":{
                  "type":"string",
                  "example":"weekly status update",
                  "description":"Name"
               },
               "description":{
                  "type":"string"
               },
               "all_day":{
                  "type":"boolean",
                  "description":"All day"
               },
               "start_time":{
                  "type":"string",
                  "example":"2020-10-27 09:00:00 UTC",
                  "format":"date-time",
                  "description":"Start"
               },
               "end_time":{
                  "type":"string",
                  "example":"2020-10-27 11:00:00 UTC",
                  "format":"date-time",
                  "description":"End"
               },
               "mails":{
                  "type":"array",
                  "items":{
                     "format":"email"
                  },
                  "description":"E-mail addresses"
               },
               "project":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "easy_room":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "easy_is_repeating":{
                  "type":"boolean",
                  "description":"Repeating"
               },
               "easy_next_start":{
                  "type":"string",
                  "format":"date",
                  "description":"Next repetition"
               },
               "place_name":{
                  "type":"string",
                  "description":"Place"
               },
               "uid":{
                  "type":"string",
                  "example":"1919385b-5040-46e7-93e5-addbab6b39fa",
                  "format":"uuid"
               },
               "priority":{
                  "type":"integer",
                  "example":"normal",
                  "enum":[
                     "high",
                     "normal",
                     "low"
                  ],
                  "description":"Priority"
               },
               "privacy":{
                  "type":"integer",
                  "example":"xpublic",
                  "enum":[
                     "xpublic",
                     "xprivate",
                     "confidential"
                  ],
                  "description":"Privacy"
               },
               "big_recurring":{
                  "type":"boolean",
                  "description":"Big recurring"
               },
               "easy_resource_dont_allocate":{
                  "type":"boolean",
                  "description":""
               },
               "email_notifications":{
                  "type":"integer",
                  "example":"right_now",
                  "description":""
               },
               "author":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "user_ids":{
                  "type":"array",
                  "items":{
                     "type":"integer"
                  }
               },
               "created_at":{
                  "type":"string",
                  "format":"date-time",
                  "readOnly":true
               },
               "updated_at":{
                  "type":"string",
                  "format":"date-time",
                  "readOnly":true
               }
            },
            "xml":{
               "name":"easy_meeting"
            }
         },
         "EasyCalendarMeeting":{
            "description":"Response only for feed, which is something like list of meetings of User.current",
            "properties":{
               "id":{
                  "type":"string",
                  "example":"easy_meeting-296864",
                  "description":"id prefix include __model_name__"
               },
               "eventType":{
                  "type":"string",
                  "example":"meeting_invitation"
               },
               "url":{
                  "type":"string",
                  "example":"/easy_meetings/296864",
                  "description":"**RELATIVE** path to this meeting"
               },
               "parentUrl":{
                  "type":"string",
                  "example":"/easy_meetings/296719",
                  "description":"**RELATIVE** path to parent meeting (if this is repeated)"
               },
               "location":{
                  "type":"string",
                  "example":"Jednačka 2.p",
                  "description":"room name or just location of meeting"
               },
               "title":{
                  "type":"string",
                  "example":"DevOps",
                  "description":"name of meeting"
               },
               "start":{
                  "type":"string",
                  "example":"2020-04-29T09:00:00+02:00",
                  "format":"date-time"
               },
               "end":{
                  "type":"string",
                  "example":"2020-04-29T11:00:00+02:00",
                  "format":"date-time"
               },
               "allDay":{
                  "type":"boolean",
                  "description":"is this `all day` meeting ?"
               },
               "color":{
                  "type":"string",
                  "example":"#daddf6",
                  "description":"internal use - color of meeting in `easy_calendar`"
               },
               "borderColor":{
                  "type":"string",
                  "example":"#c3d0e5",
                  "description":"???"
               },
               "editable":{
                  "type":"boolean",
                  "description":"is meeting editable?"
               },
               "accepted":{
                  "type":"boolean",
                  "description":"is meeting accepted?"
               },
               "declined":{
                  "type":"boolean",
                  "description":"is meeting declined?"
               },
               "bigRecurringChildren":{
                  "type":"boolean",
                  "description":"Meeting is recurrent - this is repeated meeting of `parent`"
               }
            }
         },
         "EasyMindMapApiRequest":{
            "properties":{
               "project_id":{
                  "readOnly":true,
                  "type":"string"
               },
               "author_id":{
                  "type":"integer"
               },
               "updated_by_id":{
                  "type":"integer"
               },
               "name":{
                  "type":"string",
                  "example":"My awesome minds"
               },
               "editable":{
                  "type":"boolean",
                  "example":false
               },
               "custom_fields":{
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/CustomFieldValueApiRequest"
                  }
               },
               "journals":{
                  "type":"array",
                  "description":"if you specify `include=journals`",
                  "xml":{
                     "wrapped":true
                  },
                  "items":{
                     "$ref":"#/components/schemas/JournalApiResponse"
                  }
               },
               "created_at":{
                  "type":"string",
                  "format":"date-time",
                  "readOnly":true
               },
               "updated_at":{
                  "type":"string",
                  "format":"date-time",
                  "readOnly":true
               },
               "data":{
                  "example":{
                     "nodeData":{
                        "id":"jf8484kg95",
                        "topic":"Root node",
                        "root":"true",
                        "children":[
                           
                        ]
                     }
                  },
                  "description":"node data structure",
                  "type":"string"
               }
            },
            "required":[
               "name"
            ],
            "xml":{
               "name":"easy_mind_map"
            }
         },
         "EasyMindMapApiResponse":{
            "properties":{
               "id":{
                  "type":"integer",
                  "readOnly":true,
                  "example":1
               },
               "project":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "author":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "updated_by":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "name":{
                  "type":"string",
                  "example":"My awesome minds"
               },
               "editable":{
                  "type":"boolean",
                  "example":false
               },
               "custom_fields":{
                  "type":"array",
                  "xml":{
                     "wrapped":true
                  },
                  "items":{
                     "$ref":"#/components/schemas/CustomFieldValueApiResponse"
                  }
               },
               "journals":{
                  "type":"array",
                  "description":"if you specify `include=journals`",
                  "xml":{
                     "wrapped":true
                  },
                  "items":{
                     "$ref":"#/components/schemas/JournalApiResponse"
                  }
               },
               "created_at":{
                  "type":"string",
                  "format":"date-time",
                  "readOnly":true
               },
               "updated_at":{
                  "type":"string",
                  "format":"date-time",
                  "readOnly":true
               },
               "data":{
                  "type":"string"
               }
            },
            "xml":{
               "name":"easy_mind_map"
            }
         },
         "EasyMoneyExpectedExpenseApiRequest":{
            "properties":{
               "name":{
                  "type":"string"
               },
               "entity_type":{
                  "example":"Issue",
                  "type":"string"
               },
               "entity_id":{
                  "type":"integer",
                  "example":123
               },
               "description":{
                  "type":"string"
               },
               "price1":{
                  "type":"number",
                  "format":"double",
                  "example":"17000.0",
                  "description":"Price with vat"
               },
               "price2":{
                  "type":"number",
                  "format":"double",
                  "example":"14166.67",
                  "description":"Price without vat"
               },
               "easy_currency_code":{
                  "example":"CZK",
                  "type":"string"
               },
               "vat":{
                  "type":"number",
                  "format":"double",
                  "example":"20.0",
                  "description":"Vat percentage"
               },
               "spent_on":{
                  "type":"string",
                  "format":"date"
               },
               "easy_external_id":{
                  "type":"string",
                  "example":"external-system-1"
               },
               "project_id":{
                  "type":"integer"
               },
               "version_id":{
                  "type":"integer"
               },
               "custom_fields":{
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/CustomFieldValueApiRequest"
                  }
               },
               "tag_list":{
                  "type":"array",
                  "description":"List of tags associated with entity",
                  "example":[
                     "deployment",
                     "gantt",
                     "ldap"
                  ],
                  "items":{
                     "type":"string"
                  }
               },
               "use_vat":{
                  "type":"boolean",
                  "description":"A flag that indicates that we should use the 'vat' attribute"
               }
            },
            "xml":{
               "name":"easy_money"
            }
         },
         "EasyMoneyExpectedExpenseApiResponse":{
            "properties":{
               "id":{
                  "type":"integer",
                  "readOnly":true,
                  "example":1
               },
               "name":{
                  "type":"string"
               },
               "entity_type":{
                  "example":"Issue",
                  "type":"string"
               },
               "entity_id":{
                  "type":"integer",
                  "example":123
               },
               "description":{
                  "type":"string"
               },
               "price1":{
                  "type":"number",
                  "format":"double",
                  "example":"17000.0",
                  "description":"Price with vat"
               },
               "price2":{
                  "type":"number",
                  "format":"double",
                  "example":"14166.67",
                  "description":"Price without vat"
               },
               "easy_currency_code":{
                  "example":"CZK",
                  "type":"string"
               },
               "vat":{
                  "type":"number",
                  "format":"double",
                  "example":"20.0",
                  "description":"Vat percentage"
               },
               "spent_on":{
                  "type":"string",
                  "format":"date"
               },
               "easy_external_id":{
                  "type":"string",
                  "example":"external-system-1"
               },
               "project":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "version":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "custom_fields":{
                  "type":"array",
                  "xml":{
                     "wrapped":true
                  },
                  "items":{
                     "$ref":"#/components/schemas/CustomFieldValueApiResponse"
                  }
               },
               "tag_list":{
                  "type":"array",
                  "description":"List of tags associated with entity",
                  "example":[
                     "deployment",
                     "gantt",
                     "ldap"
                  ],
                  "items":{
                     "type":"string"
                  }
               },
               "attachments":{
                  "type":"array",
                  "description":"if you specify `include=attachments`",
                  "xml":{
                     "wrapped":true
                  },
                  "items":{
                     "$ref":"#/components/schemas/Attachment"
                  }
               },
               "created_at":{
                  "type":"string",
                  "format":"date-time",
                  "readOnly":true
               },
               "updated_at":{
                  "type":"string",
                  "format":"date-time",
                  "readOnly":true
               }
            },
            "xml":{
               "name":"easy_money_expected_expense"
            }
         },
         "EasyMoneyExpectedRevenueApiRequest":{
            "properties":{
               "name":{
                  "type":"string"
               },
               "entity_type":{
                  "example":"Issue",
                  "type":"string"
               },
               "entity_id":{
                  "type":"integer",
                  "example":123
               },
               "description":{
                  "type":"string"
               },
               "price1":{
                  "type":"number",
                  "format":"double",
                  "example":"17000.0",
                  "description":"Price with vat"
               },
               "price2":{
                  "type":"number",
                  "format":"double",
                  "example":"14166.67",
                  "description":"Price without vat"
               },
               "easy_currency_code":{
                  "example":"CZK",
                  "type":"string"
               },
               "vat":{
                  "type":"number",
                  "format":"double",
                  "example":"20.0",
                  "description":"Vat percentage"
               },
               "spent_on":{
                  "type":"string",
                  "format":"date"
               },
               "easy_external_id":{
                  "type":"string",
                  "example":"external-system-1"
               },
               "project_id":{
                  "type":"integer"
               },
               "version_id":{
                  "type":"integer"
               },
               "custom_fields":{
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/CustomFieldValueApiRequest"
                  }
               },
               "tag_list":{
                  "type":"array",
                  "description":"List of tags associated with entity",
                  "example":[
                     "deployment",
                     "gantt",
                     "ldap"
                  ],
                  "items":{
                     "type":"string"
                  }
               },
               "use_vat":{
                  "type":"boolean",
                  "description":"A flag that indicates that we should use the 'vat' attribute"
               }
            },
            "xml":{
               "name":"easy_money"
            }
         },
         "EasyMoneyExpectedRevenueApiResponse":{
            "properties":{
               "id":{
                  "type":"integer",
                  "readOnly":true,
                  "example":1
               },
               "name":{
                  "type":"string"
               },
               "entity_type":{
                  "example":"Issue",
                  "type":"string"
               },
               "entity_id":{
                  "type":"integer",
                  "example":123
               },
               "description":{
                  "type":"string"
               },
               "price1":{
                  "type":"number",
                  "format":"double",
                  "example":"17000.0",
                  "description":"Price with vat"
               },
               "price2":{
                  "type":"number",
                  "format":"double",
                  "example":"14166.67",
                  "description":"Price without vat"
               },
               "easy_currency_code":{
                  "example":"CZK",
                  "type":"string"
               },
               "vat":{
                  "type":"number",
                  "format":"double",
                  "example":"20.0",
                  "description":"Vat percentage"
               },
               "spent_on":{
                  "type":"string",
                  "format":"date"
               },
               "easy_external_id":{
                  "type":"string",
                  "example":"external-system-1"
               },
               "project":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "version":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "custom_fields":{
                  "type":"array",
                  "xml":{
                     "wrapped":true
                  },
                  "items":{
                     "$ref":"#/components/schemas/CustomFieldValueApiResponse"
                  }
               },
               "tag_list":{
                  "type":"array",
                  "description":"List of tags associated with entity",
                  "example":[
                     "deployment",
                     "gantt",
                     "ldap"
                  ],
                  "items":{
                     "type":"string"
                  }
               },
               "attachments":{
                  "type":"array",
                  "description":"if you specify `include=attachments`",
                  "xml":{
                     "wrapped":true
                  },
                  "items":{
                     "$ref":"#/components/schemas/Attachment"
                  }
               },
               "created_at":{
                  "type":"string",
                  "format":"date-time",
                  "readOnly":true
               },
               "updated_at":{
                  "type":"string",
                  "format":"date-time",
                  "readOnly":true
               }
            },
            "xml":{
               "name":"easy_money_expected_revenue"
            }
         },
         "EasyMoneyOtherExpenseApiRequest":{
            "properties":{
               "name":{
                  "type":"string"
               },
               "entity_type":{
                  "example":"Issue",
                  "type":"string"
               },
               "entity_id":{
                  "type":"integer",
                  "example":123
               },
               "description":{
                  "type":"string"
               },
               "price1":{
                  "type":"number",
                  "format":"double",
                  "example":"17000.0",
                  "description":"Price with vat"
               },
               "price2":{
                  "type":"number",
                  "format":"double",
                  "example":"14166.67",
                  "description":"Price without vat"
               },
               "easy_currency_code":{
                  "example":"CZK",
                  "type":"string"
               },
               "vat":{
                  "type":"number",
                  "format":"double",
                  "example":"20.0",
                  "description":"Vat percentage"
               },
               "spent_on":{
                  "type":"string",
                  "format":"date"
               },
               "easy_external_id":{
                  "type":"string",
                  "example":"external-system-1"
               },
               "project_id":{
                  "type":"integer"
               },
               "version_id":{
                  "type":"integer"
               },
               "custom_fields":{
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/CustomFieldValueApiRequest"
                  }
               },
               "tag_list":{
                  "type":"array",
                  "description":"List of tags associated with entity",
                  "example":[
                     "deployment",
                     "gantt",
                     "ldap"
                  ],
                  "items":{
                     "type":"string"
                  }
               },
               "use_vat":{
                  "type":"boolean",
                  "description":"A flag that indicates that we should use the 'vat' attribute"
               }
            },
            "xml":{
               "name":"easy_money"
            }
         },
         "EasyMoneyOtherExpenseApiResponse":{
            "properties":{
               "id":{
                  "type":"integer",
                  "readOnly":true,
                  "example":1
               },
               "name":{
                  "type":"string"
               },
               "entity_type":{
                  "example":"Issue",
                  "type":"string"
               },
               "entity_id":{
                  "type":"integer",
                  "example":123
               },
               "description":{
                  "type":"string"
               },
               "price1":{
                  "type":"number",
                  "format":"double",
                  "example":"17000.0",
                  "description":"Price with vat"
               },
               "price2":{
                  "type":"number",
                  "format":"double",
                  "example":"14166.67",
                  "description":"Price without vat"
               },
               "easy_currency_code":{
                  "example":"CZK",
                  "type":"string"
               },
               "vat":{
                  "type":"number",
                  "format":"double",
                  "example":"20.0",
                  "description":"Vat percentage"
               },
               "spent_on":{
                  "type":"string",
                  "format":"date"
               },
               "easy_external_id":{
                  "type":"string",
                  "example":"external-system-1"
               },
               "project":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "version":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "custom_fields":{
                  "type":"array",
                  "xml":{
                     "wrapped":true
                  },
                  "items":{
                     "$ref":"#/components/schemas/CustomFieldValueApiResponse"
                  }
               },
               "tag_list":{
                  "type":"array",
                  "description":"List of tags associated with entity",
                  "example":[
                     "deployment",
                     "gantt",
                     "ldap"
                  ],
                  "items":{
                     "type":"string"
                  }
               },
               "attachments":{
                  "type":"array",
                  "description":"if you specify `include=attachments`",
                  "xml":{
                     "wrapped":true
                  },
                  "items":{
                     "$ref":"#/components/schemas/Attachment"
                  }
               },
               "created_at":{
                  "type":"string",
                  "format":"date-time",
                  "readOnly":true
               },
               "updated_at":{
                  "type":"string",
                  "format":"date-time",
                  "readOnly":true
               }
            },
            "xml":{
               "name":"easy_money_other_expense"
            }
         },
         "EasyMoneyOtherRevenueApiRequest":{
            "properties":{
               "name":{
                  "type":"string"
               },
               "entity_type":{
                  "example":"Issue",
                  "type":"string"
               },
               "entity_id":{
                  "type":"integer",
                  "example":123
               },
               "description":{
                  "type":"string"
               },
               "price1":{
                  "type":"number",
                  "format":"double",
                  "example":"17000.0",
                  "description":"Price with vat"
               },
               "price2":{
                  "type":"number",
                  "format":"double",
                  "example":"14166.67",
                  "description":"Price without vat"
               },
               "easy_currency_code":{
                  "example":"CZK",
                  "type":"string"
               },
               "vat":{
                  "type":"number",
                  "format":"double",
                  "example":"20.0",
                  "description":"Vat percentage"
               },
               "spent_on":{
                  "type":"string",
                  "format":"date"
               },
               "easy_external_id":{
                  "type":"string",
                  "example":"external-system-1"
               },
               "project_id":{
                  "type":"integer"
               },
               "version_id":{
                  "type":"integer"
               },
               "custom_fields":{
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/CustomFieldValueApiRequest"
                  }
               },
               "tag_list":{
                  "type":"array",
                  "description":"List of tags associated with entity",
                  "example":[
                     "deployment",
                     "gantt",
                     "ldap"
                  ],
                  "items":{
                     "type":"string"
                  }
               },
               "use_vat":{
                  "type":"boolean",
                  "description":"A flag that indicates that we should use the 'vat' attribute"
               }
            },
            "xml":{
               "name":"easy_money"
            }
         },
         "EasyMoneyOtherRevenueApiResponse":{
            "properties":{
               "id":{
                  "type":"integer",
                  "readOnly":true,
                  "example":1
               },
               "name":{
                  "type":"string"
               },
               "entity_type":{
                  "example":"Issue",
                  "type":"string"
               },
               "entity_id":{
                  "type":"integer",
                  "example":123
               },
               "description":{
                  "type":"string"
               },
               "price1":{
                  "type":"number",
                  "format":"double",
                  "example":"17000.0",
                  "description":"Price with vat"
               },
               "price2":{
                  "type":"number",
                  "format":"double",
                  "example":"14166.67",
                  "description":"Price without vat"
               },
               "easy_currency_code":{
                  "example":"CZK",
                  "type":"string"
               },
               "vat":{
                  "type":"number",
                  "format":"double",
                  "example":"20.0",
                  "description":"Vat percentage"
               },
               "spent_on":{
                  "type":"string",
                  "format":"date"
               },
               "easy_external_id":{
                  "type":"string",
                  "example":"external-system-1"
               },
               "project":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "version":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "custom_fields":{
                  "type":"array",
                  "xml":{
                     "wrapped":true
                  },
                  "items":{
                     "$ref":"#/components/schemas/CustomFieldValueApiResponse"
                  }
               },
               "tag_list":{
                  "type":"array",
                  "description":"List of tags associated with entity",
                  "example":[
                     "deployment",
                     "gantt",
                     "ldap"
                  ],
                  "items":{
                     "type":"string"
                  }
               },
               "attachments":{
                  "type":"array",
                  "description":"if you specify `include=attachments`",
                  "xml":{
                     "wrapped":true
                  },
                  "items":{
                     "$ref":"#/components/schemas/Attachment"
                  }
               },
               "created_at":{
                  "type":"string",
                  "format":"date-time",
                  "readOnly":true
               },
               "updated_at":{
                  "type":"string",
                  "format":"date-time",
                  "readOnly":true
               }
            },
            "xml":{
               "name":"easy_money_other_revenue"
            }
         },
         "EasyOneTimeContractApiResponse":{
            "properties":{
               "id":{
                  "type":"integer",
                  "readOnly":true,
                  "example":1
               },
               "name":{
                  "type":"string",
                  "example":"Contract #1"
               },
               "total_price":{
                  "type":"number",
                  "example":12.34
               },
               "currency":{
                  "type":"string",
                  "example":"EUR"
               },
               "guid":{
                  "type":"string",
                  "example":"2d931510-d99f-494a-8c67-87feb05e1594"
               },
               "easy_partner":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "easy_product_solution":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "easy_contact":{
                  "type":"object",
                  "$ref":"#/components/schemas/EasyContactApiResponse"
               },
               "easy_price_book_quote_brand":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "easy_price_book_product_category":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "easy_price_book_quote":{
                  "type":"object",
                  "$ref":"#/components/schemas/EasyPriceBookQuoteApiResponse"
               },
               "easy_price_book_product_version":{
                  "type":"object",
                  "properties":{
                     "id":{
                        "type":"integer"
                     },
                     "name":{
                        "type":"string",
                        "example":"v11",
                        "enum":[
                           "2020",
                           "2021"
                        ]
                     }
                  }
               },
               "journals":{
                  "type":"array",
                  "description":"if you specify `include=journals`",
                  "xml":{
                     "wrapped":true
                  },
                  "items":{
                     "$ref":"#/components/schemas/JournalApiResponse"
                  }
               },
               "created_at":{
                  "type":"string",
                  "format":"date-time",
                  "readOnly":true
               },
               "updated_at":{
                  "type":"string",
                  "format":"date-time",
                  "readOnly":true
               }
            },
            "xml":{
               "name":"easy_one_time_contract"
            }
         },
         "EasyPartnerApiRequest":{
            "properties":{
               "name":{
                  "type":"string"
               },
               "valid_until":{
                  "type":"string",
                  "example":"2020-12-24",
                  "format":"date"
               },
               "website":{
                  "type":"string",
                  "example":"http://www.seznam.cz/",
                  "format":"url",
                  "description":""
               },
               "state":{
                  "type":"string"
               },
               "region":{
                  "type":"string"
               },
               "easy_avatar_url":{
                  "type":"string",
                  "example":"http://mycompany.easyredmine.com/assets/images/my_image.jpg",
                  "format":"url",
                  "description":""
               },
               "easy_external_id":{
                  "type":"string",
                  "description":""
               },
               "parent_id":{
                  "type":"integer"
               },
               "author_id":{
                  "type":"integer"
               },
               "easy_partner_level_id":{
                  "type":"integer"
               },
               "channel_manager_id":{
                  "type":"integer"
               },
               "easy_supplier_company_id":{
                  "type":"integer"
               },
               "external_channel_manager_id":{
                  "type":"integer"
               },
               "custom_fields":{
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/CustomFieldValueApiRequest"
                  }
               },
               "primary_easy_billing_info_attributes":{
                  "type":"object",
                  "$ref":"#/components/schemas/EasyBillingInfoApiRequest"
               },
               "contact_easy_billing_info_attributes":{
                  "type":"object",
                  "$ref":"#/components/schemas/EasyBillingInfoApiRequest"
               }
            },
            "xml":{
               "name":"easy_partner"
            }
         },
         "EasyPartnerApiResponse":{
            "properties":{
               "id":{
                  "type":"integer",
                  "readOnly":true,
                  "example":1
               },
               "name":{
                  "type":"string"
               },
               "valid_until":{
                  "type":"string",
                  "example":"2020-12-24",
                  "format":"date"
               },
               "website":{
                  "type":"string",
                  "example":"http://www.seznam.cz/",
                  "format":"url",
                  "description":""
               },
               "state":{
                  "type":"string"
               },
               "region":{
                  "type":"string"
               },
               "easy_avatar_url":{
                  "type":"string",
                  "example":"http://mycompany.easyredmine.com/assets/images/my_image.jpg",
                  "format":"url",
                  "description":""
               },
               "easy_external_id":{
                  "type":"string",
                  "description":""
               },
               "parent":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "author":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "easy_partner_level":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "channel_manager":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "easy_supplier_company":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "external_channel_manager":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "custom_fields":{
                  "type":"array",
                  "xml":{
                     "wrapped":true
                  },
                  "items":{
                     "$ref":"#/components/schemas/CustomFieldValueApiResponse"
                  }
               },
               "organization":{
                  "example":"Easy Software s.r.o.",
                  "type":"string"
               },
               "street":{
                  "example":"Prague",
                  "description":"Street",
                  "type":"string"
               },
               "city":{
                  "example":"Prague",
                  "description":"Country",
                  "type":"string"
               },
               "country_code":{
                  "example":"CZ",
                  "description":"Country",
                  "type":"string"
               },
               "subdivision_code":{
                  "example":"CN",
                  "description":"Subdivision",
                  "type":"string"
               },
               "postal_code":{
                  "example":"16000",
                  "description":"Postal code",
                  "type":"string"
               },
               "registration_no":{
                  "readOnly":true,
                  "type":"string"
               },
               "vat_no":{
                  "example":"CZ26426269",
                  "type":"string"
               },
               "vat_rate":{
                  "type":"number",
                  "example":"22",
                  "description":"% vat"
               },
               "email":{
                  "example":"supdaniel@seznam.cz",
                  "format":"email",
                  "type":"string"
               },
               "telephone":{
                  "example":"+420344344344",
                  "description":"Phone number",
                  "type":"string"
               },
               "bank_account":{
                  "example":"164578953494/2700",
                  "description":"Bank account",
                  "type":"string"
               },
               "iban":{
                  "example":"CZ420800000000045466101292",
                  "description":"International Bank Account Number",
                  "type":"string"
               },
               "variable_symbol":{
                  "example":"601924858",
                  "description":"Variable symbol",
                  "type":"string"
               },
               "swift":{
                  "example":"ING8NL2A",
                  "description":"Society for Worldwide Interbank Financial Telecommunication",
                  "type":"string"
               },
               "bic":{
                  "example":"CFZCZPPAXXX",
                  "description":"Business Identification Code",
                  "type":"string"
               },
               "billing_info":{
                  "type":"object",
                  "$ref":"#/components/schemas/EasyBillingInfoApiResponse"
               },
               "guid":{
                  "type":"string",
                  "description":"",
                  "format":"uuid",
                  "readOnly":true
               },
               "affiliate_uuid":{
                  "type":"string",
                  "example":"bc8995e169d97555",
                  "format":"uuid",
                  "readOnly":true
               },
               "journals":{
                  "type":"array",
                  "description":"if you specify `include=journals`",
                  "xml":{
                     "wrapped":true
                  },
                  "items":{
                     "$ref":"#/components/schemas/JournalApiResponse"
                  }
               },
               "attachments":{
                  "type":"array",
                  "description":"if you specify `include=attachments`",
                  "xml":{
                     "wrapped":true
                  },
                  "items":{
                     "$ref":"#/components/schemas/Attachment"
                  }
               },
               "created_at":{
                  "type":"string",
                  "format":"date-time",
                  "readOnly":true
               },
               "updated_at":{
                  "type":"string",
                  "format":"date-time",
                  "readOnly":true
               }
            },
            "xml":{
               "name":"easy_partner"
            }
         },
         "EasyPersonalContactApiResponse":{
            "properties":{
               "id":{
                  "type":"integer",
                  "readOnly":true,
                  "example":1
               },
               "first_name":{
                  "type":"string",
                  "example":"María",
                  "description":""
               },
               "last_name":{
                  "type":"string",
                  "example":"Sayago",
                  "description":""
               },
               "email":{
                  "type":"string",
                  "example":"maria.sayago@seidor.es",
                  "format":"email",
                  "description":""
               },
               "middle_name":{
                  "type":"string",
                  "description":""
               },
               "first_name_phonetic":{
                  "type":"string",
                  "description":""
               },
               "last_name_phonetic":{
                  "type":"string",
                  "description":""
               },
               "previous_last_name":{
                  "type":"string",
                  "description":""
               },
               "nick_name":{
                  "type":"string",
                  "description":""
               },
               "prefix_name":{
                  "type":"string",
                  "description":""
               },
               "suffix_name":{
                  "type":"string",
                  "description":""
               },
               "telephone":{
                  "type":"string",
                  "example":" +34912968570",
                  "description":""
               },
               "latitude":{
                  "type":"number",
                  "example":"40.4167",
                  "format":"float",
                  "description":""
               },
               "longitude":{
                  "type":"number",
                  "example":"-3.70358",
                  "format":"float",
                  "description":""
               },
               "organization":{
                  "type":"string",
                  "description":""
               },
               "job_title":{
                  "type":"string",
                  "description":""
               },
               "street":{
                  "type":"string",
                  "description":""
               },
               "subdivision_code":{
                  "type":"string",
                  "description":""
               },
               "city":{
                  "type":"string",
                  "example":"Madrid",
                  "description":""
               },
               "country_code":{
                  "type":"string",
                  "example":"ES",
                  "description":""
               },
               "communication_language":{
                  "type":"string",
                  "example":"en",
                  "description":""
               },
               "region":{
                  "type":"string",
                  "description":"Region"
               },
               "postal_code":{
                  "type":"string",
                  "description":""
               },
               "easy_avatar_url":{
                  "type":"string",
                  "description":""
               },
               "easy_external_id":{
                  "type":"string",
                  "description":""
               },
               "description":{
                  "type":"string",
                  "description":"Description"
               },
               "subregion":{
                  "type":"string",
                  "description":""
               },
               "private":{
                  "type":"boolean",
                  "description":""
               },
               "full_name":{
                  "type":"string",
                  "example":"María Sayago",
                  "description":""
               },
               "landline":{
                  "type":"string",
                  "description":""
               },
               "instant_message":{
                  "type":"string",
                  "description":""
               },
               "custom_fields":{
                  "type":"array",
                  "xml":{
                     "wrapped":true
                  },
                  "items":{
                     "$ref":"#/components/schemas/CustomFieldValueApiResponse"
                  }
               },
               "account":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "account_manager":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "external_account_manager":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "easy_personal_contact_type":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "author":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "time_zone":{
                  "type":"string",
                  "example":"",
                  "description":"Time zone",
                  "readOnly":true
               },
               "guid":{
                  "type":"string",
                  "example":"f23dc34c-846a-45ee-bb29-c056070d68ba",
                  "readOnly":true
               },
               "internal_name":{
                  "type":"string",
                  "example":"",
                  "readOnly":true
               },
               "non_deletable":{
                  "type":"boolean",
                  "example":"",
                  "readOnly":true
               },
               "non_editable":{
                  "type":"boolean",
                  "example":"",
                  "readOnly":true
               },
               "parent_id":{
                  "type":"integer",
                  "example":"",
                  "description":"Parent",
                  "readOnly":true
               },
               "attachments":{
                  "type":"array",
                  "description":"if you specify `include=attachments`",
                  "xml":{
                     "wrapped":true
                  },
                  "items":{
                     "$ref":"#/components/schemas/Attachment"
                  }
               },
               "journals":{
                  "type":"array",
                  "description":"if you specify `include=journals`",
                  "xml":{
                     "wrapped":true
                  },
                  "items":{
                     "$ref":"#/components/schemas/JournalApiResponse"
                  }
               },
               "created_at":{
                  "type":"string",
                  "format":"date-time",
                  "readOnly":true
               },
               "updated_at":{
                  "type":"string",
                  "format":"date-time",
                  "readOnly":true
               }
            },
            "xml":{
               "name":"easy_personal_contact"
            }
         },
         "EasyPersonalContactApiRequest":{
            "properties":{
               "first_name":{
                  "type":"string",
                  "example":"María",
                  "description":""
               },
               "last_name":{
                  "type":"string",
                  "example":"Sayago",
                  "description":""
               },
               "email":{
                  "type":"string",
                  "example":"maria.sayago@seidor.es",
                  "format":"email",
                  "description":""
               },
               "middle_name":{
                  "type":"string",
                  "description":""
               },
               "first_name_phonetic":{
                  "type":"string",
                  "description":""
               },
               "last_name_phonetic":{
                  "type":"string",
                  "description":""
               },
               "previous_last_name":{
                  "type":"string",
                  "description":""
               },
               "nick_name":{
                  "type":"string",
                  "description":""
               },
               "prefix_name":{
                  "type":"string",
                  "description":""
               },
               "suffix_name":{
                  "type":"string",
                  "description":""
               },
               "telephone":{
                  "type":"string",
                  "example":" +34912968570",
                  "description":""
               },
               "latitude":{
                  "type":"number",
                  "example":"40.4167",
                  "format":"float",
                  "description":""
               },
               "longitude":{
                  "type":"number",
                  "example":"-3.70358",
                  "format":"float",
                  "description":""
               },
               "organization":{
                  "type":"string",
                  "description":""
               },
               "job_title":{
                  "type":"string",
                  "description":""
               },
               "street":{
                  "type":"string",
                  "description":""
               },
               "subdivision_code":{
                  "type":"string",
                  "description":""
               },
               "city":{
                  "type":"string",
                  "example":"Madrid",
                  "description":""
               },
               "country_code":{
                  "type":"string",
                  "example":"ES",
                  "description":""
               },
               "communication_language":{
                  "type":"string",
                  "example":"en",
                  "description":""
               },
               "region":{
                  "type":"string",
                  "description":"Region"
               },
               "postal_code":{
                  "type":"string",
                  "description":""
               },
               "easy_avatar_url":{
                  "type":"string",
                  "description":""
               },
               "easy_external_id":{
                  "type":"string",
                  "description":""
               },
               "description":{
                  "type":"string",
                  "description":"Description"
               },
               "subregion":{
                  "type":"string",
                  "description":""
               },
               "private":{
                  "type":"boolean",
                  "description":""
               },
               "full_name":{
                  "type":"string",
                  "example":"María Sayago",
                  "description":""
               },
               "landline":{
                  "type":"string",
                  "description":""
               },
               "instant_message":{
                  "type":"string",
                  "description":""
               },
               "custom_fields":{
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/CustomFieldValueApiRequest"
                  }
               },
               "account_id":{
                  "type":"integer"
               },
               "account_manager_id":{
                  "type":"integer"
               },
               "external_account_manager_id":{
                  "type":"integer"
               },
               "easy_personal_contact_type_id":{
                  "type":"integer"
               }
            },
            "xml":{
               "name":"easy_personal_contact"
            }
         },
         "EasyPriceBookApiResponse":{
            "properties":{
               "id":{
                  "type":"integer",
                  "readOnly":true,
                  "example":1
               },
               "name":{
                  "type":"string"
               },
               "description":{
                  "type":"string"
               },
               "active":{
                  "type":"boolean"
               },
               "easy_price_book_quote_brand_id":{
                  "type":"integer"
               },
               "settings":{
                  "type":"string",
                  "format":"hash",
                  "example":"{\"update_type\":\"0\"}"
               },
               "author":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "custom_fields":{
                  "type":"array",
                  "xml":{
                     "wrapped":true
                  },
                  "items":{
                     "$ref":"#/components/schemas/CustomFieldValueApiResponse"
                  }
               },
               "created_at":{
                  "type":"string",
                  "format":"date-time",
                  "readOnly":true
               },
               "updated_at":{
                  "type":"string",
                  "format":"date-time",
                  "readOnly":true
               },
               "easy_price_book_product_assignments":{
                  "type":"array",
                  "xml":{
                     "wrapped":true
                  },
                  "items":{
                     "$ref":"#/components/schemas/EasyPriceBookProductAssignmentApiResponse"
                  }
               },
               "easy_price_book_bundles":{
                  "type":"array",
                  "xml":{
                     "wrapped":true
                  },
                  "items":{
                     "$ref":"#/components/schemas/EasyPriceBookBundleApiResponse"
                  }
               },
               "easy_price_book_prices":{
                  "type":"array",
                  "xml":{
                     "wrapped":true
                  },
                  "items":{
                     "$ref":"#/components/schemas/EasyPriceBookPriceApiResponse"
                  }
               }
            },
            "xml":{
               "name":"easy_price_book"
            }
         },
         "EasyPriceBookBundleApiResponse":{
            "properties":{
               "id":{
                  "type":"integer",
                  "readOnly":true,
                  "example":1
               },
               "name":{
                  "type":"string"
               },
               "description":{
                  "type":"string"
               },
               "bundle_code":{
                  "type":"string"
               },
               "author":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "easy_price_book":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "easy_price_book_bundle_product_assignments":{
                  "type":"array",
                  "xml":{
                     "wrapped":true
                  },
                  "items":{
                     "$ref":"#/components/schemas/EasyPriceBookBundleProductAssignmentApiResponse"
                  }
               },
               "easy_price_book_products":{
                  "type":"array",
                  "xml":{
                     "wrapped":true
                  },
                  "items":{
                     "$ref":"#/components/schemas/EasyPriceBookProductApiResponse"
                  }
               },
               "easy_price_book_prices":{
                  "type":"array",
                  "xml":{
                     "wrapped":true
                  },
                  "items":{
                     "$ref":"#/components/schemas/EasyPriceBookPriceApiResponse"
                  }
               },
               "custom_fields":{
                  "type":"array",
                  "xml":{
                     "wrapped":true
                  },
                  "items":{
                     "$ref":"#/components/schemas/CustomFieldValueApiResponse"
                  }
               },
               "created_at":{
                  "type":"string",
                  "format":"date-time",
                  "readOnly":true
               },
               "updated_at":{
                  "type":"string",
                  "format":"date-time",
                  "readOnly":true
               }
            },
            "xml":{
               "name":"easy_price_book_bundle"
            }
         },
         "EasyPriceBookBundleProductAssignmentApiResponse":{
            "properties":{
               "id":{
                  "type":"integer",
                  "readOnly":true,
                  "example":1
               },
               "easy_price_book_product":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "weight":{
                  "type":"number"
               },
               "created_at":{
                  "type":"string",
                  "format":"date-time",
                  "readOnly":true
               },
               "updated_at":{
                  "type":"string",
                  "format":"date-time",
                  "readOnly":true
               }
            },
            "xml":{
               "name":"easy_price_book_bundle_product_assignment"
            }
         },
         "EasyPriceBookPriceApiResponse":{
            "properties":{
               "id":{
                  "type":"integer",
                  "readOnly":true,
                  "example":1
               },
               "price":{
                  "type":"number",
                  "example":12.34
               },
               "currency":{
                  "type":"string",
                  "example":"EUR"
               },
               "unit":{
                  "type":"string",
                  "example":"Users/1 year"
               },
               "easy_price_book_id":{
                  "type":"integer"
               },
               "entity_id":{
                  "type":"integer"
               },
               "entity_type":{
                  "type":"string"
               },
               "custom_fields":{
                  "type":"array",
                  "xml":{
                     "wrapped":true
                  },
                  "items":{
                     "$ref":"#/components/schemas/CustomFieldValueApiResponse"
                  }
               }
            },
            "xml":{
               "name":"easy_price_book_price"
            }
         },
         "EasyPriceBookProductApiResponse":{
            "properties":{
               "id":{
                  "type":"integer",
                  "readOnly":true,
                  "example":1
               },
               "name":{
                  "type":"string"
               },
               "description":{
                  "type":"string"
               },
               "product_code":{
                  "type":"string"
               },
               "active":{
                  "type":"boolean"
               },
               "easy_price_book_prices":{
                  "type":"array",
                  "xml":{
                     "wrapped":true
                  },
                  "items":{
                     "$ref":"#/components/schemas/EasyPriceBookPriceApiResponse"
                  }
               },
               "custom_fields":{
                  "type":"array",
                  "xml":{
                     "wrapped":true
                  },
                  "items":{
                     "$ref":"#/components/schemas/CustomFieldValueApiResponse"
                  }
               },
               "created_at":{
                  "type":"string",
                  "format":"date-time",
                  "readOnly":true
               },
               "updated_at":{
                  "type":"string",
                  "format":"date-time",
                  "readOnly":true
               }
            },
            "xml":{
               "name":"easy_price_book_product"
            }
         },
         "EasyPriceBookProductAssignmentApiResponse":{
            "properties":{
               "id":{
                  "type":"integer"
               },
               "easy_price_book_id":{
                  "type":"integer"
               },
               "easy_price_book_product":{
                  "type":"object",
                  "$ref":"#/components/schemas/EasyPriceBookProductApiResponse"
               },
               "custom_fields":{
                  "type":"array",
                  "xml":{
                     "wrapped":true
                  },
                  "items":{
                     "$ref":"#/components/schemas/CustomFieldValueApiResponse"
                  }
               }
            },
            "xml":{
               "name":"easy_price_book_product_assignment"
            }
         },
         "EasyPriceBookQuoteApiResponse":{
            "properties":{
               "id":{
                  "type":"integer",
                  "readOnly":true,
                  "example":1
               },
               "guid":{
                  "type":"string",
                  "format":"uuid"
               },
               "name":{
                  "type":"string"
               },
               "currency":{
                  "type":"string",
                  "example":"CZK"
               },
               "price":{
                  "type":"number",
                  "example":"123.45",
                  "format":"decimal"
               },
               "userlimit":{
                  "type":"integer"
               },
               "usermonths":{
                  "type":"integer"
               },
               "invoice_to_partner":{
                  "type":"boolean"
               },
               "author":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "brand":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "easy_crm_case":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "account":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "easy_price_book_product_version":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "easy_product_solution":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "easy_crm_case_items":{
                  "type":"array",
                  "xml":{
                     "wrapped":true
                  },
                  "items":{
                     "$ref":"#/components/schemas/EasyCrmCaseItemApiResponse"
                  }
               },
               "settings":{
                  "type":"object",
                  "properties":{
                     "start_from_provisioning":{
                        "type":"integer"
                     }
                  }
               },
               "start_date":{
                  "type":"string",
                  "example":"2020-12-24",
                  "format":"date"
               },
               "end_date":{
                  "type":"string",
                  "example":"2020-12-24",
                  "format":"date"
               },
               "created_at":{
                  "type":"string",
                  "format":"date-time",
                  "readOnly":true
               },
               "updated_at":{
                  "type":"string",
                  "format":"date-time",
                  "readOnly":true
               }
            },
            "xml":{
               "name":"easy_price_book_quote"
            }
         },
         "EasyPriceBookRecordApiResponse":{
            "properties":{
               "id":{
                  "type":"integer"
               },
               "entity_id":{
                  "type":"integer"
               },
               "entity_type":{
                  "type":"string"
               },
               "easy_price_book":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "easy_price_book_price":{
                  "type":"object",
                  "$ref":"#/components/schemas/EasyPriceBookPriceApiResponse"
               },
               "easy_price_book_product":{
                  "type":"object",
                  "properties":{
                     "id":{
                        "type":"integer"
                     },
                     "name":{
                        "type":"string"
                     },
                     "description":{
                        "type":"string"
                     },
                     "product_code":{
                        "type":"string"
                     },
                     "active":{
                        "type":"boolean"
                     }
                  }
               },
               "easy_price_book_bundle":{
                  "type":"object",
                  "properties":{
                     "id":{
                        "type":"integer"
                     },
                     "name":{
                        "type":"string"
                     },
                     "description":{
                        "type":"string"
                     },
                     "bundle_code":{
                        "type":"string"
                     }
                  }
               },
               "entity_total_price":{
                  "type":"number",
                  "example":"123.45",
                  "format":"decimal"
               },
               "original_total_price":{
                  "type":"number",
                  "example":"123.45",
                  "format":"decimal"
               },
               "currency_code":{
                  "type":"string",
                  "example":"CZK"
               },
               "record_date":{
                  "type":"string",
                  "example":"2020-12-24",
                  "format":"date"
               },
               "author":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "created_at":{
                  "type":"string",
                  "format":"date-time",
                  "readOnly":true
               },
               "updated_at":{
                  "type":"string",
                  "format":"date-time",
                  "readOnly":true
               }
            },
            "xml":{
               "name":"easy_price_book_record"
            }
         },
         "EasySetting":{
            "required":[
               "id",
               "name"
            ],
            "properties":{
               "id":{
                  "type":"integer",
                  "format":"int64",
                  "example":1
               },
               "name":{
                  "type":"string",
                  "example":"secret_service_api_key"
               },
               "value":{
                  "type":"string",
                  "example":"2b55fb3f0be9ff5b895f"
               },
               "project_id":{
                  "type":"integer"
               }
            }
         },
         "EasySlaEventApiResponse":{
            "properties":{
               "id":{
                  "type":"integer",
                  "readOnly":true,
                  "example":1
               },
               "name":{
                  "type":"string",
                  "example":"weekly status update",
                  "description":"Event name"
               },
               "occurence_time":{
                  "type":"string",
                  "example":"2020-10-27 09:00:00 UTC",
                  "format":"date-time",
                  "description":"DEPRECATED - use occurrence_time"
               },
               "occurrence_time":{
                  "example":"2020-10-27 09:00:00 UTC",
                  "format":"date-time",
                  "description":"Time of event occurrence",
                  "type":"string"
               },
               "issue_id":{
                  "type":"integer",
                  "example":14,
                  "description":"Related issue"
               },
               "user_id":{
                  "type":"integer",
                  "example":382,
                  "description":"User who triggered event"
               },
               "sla_response":{
                  "type":"string",
                  "example":"2020-10-27 09:02:36 UTC",
                  "format":"date-time",
                  "description":"Issue response time"
               },
               "sla_resolve":{
                  "type":"string",
                  "example":"2020-10-28 15:23:06 UTC",
                  "format":"date-time",
                  "description":"Issue estimated resolve time"
               },
               "first_response":{
                  "type":"number",
                  "example":6.2,
                  "description":"Delta of issue creation time and event creation time"
               },
               "sla_response_fulfillment":{
                  "type":"number",
                  "example":6.2,
                  "description":"Time it took for issue to get a response"
               },
               "sla_resolve_fulfillment":{
                  "type":"number",
                  "example":6.2,
                  "description":"Time it took for issue to be resolved"
               },
               "project_id":{
                  "type":"integer",
                  "example":172,
                  "description":"Related project"
               },
               "issue_status_id":{
                  "type":"integer",
                  "example":12,
                  "description":"Related issue status at time of event creation"
               },
               "created_at":{
                  "type":"string",
                  "format":"date-time",
                  "readOnly":true
               },
               "updated_at":{
                  "type":"string",
                  "format":"date-time",
                  "readOnly":true
               }
            },
            "xml":{
               "name":"easy_sla_event"
            }
         },
         "EasyStakeholderApiResponse":{
            "properties":{
               "id":{
                  "type":"integer",
                  "readOnly":true,
                  "example":1
               },
               "first_name":{
                  "type":"string",
                  "example":"María",
                  "description":""
               },
               "last_name":{
                  "type":"string",
                  "example":"Sayago",
                  "description":""
               },
               "email":{
                  "type":"string",
                  "example":"maria.sayago@seidor.es",
                  "format":"email",
                  "description":""
               },
               "middle_name":{
                  "type":"string",
                  "description":""
               },
               "first_name_phonetic":{
                  "type":"string",
                  "description":""
               },
               "last_name_phonetic":{
                  "type":"string",
                  "description":""
               },
               "previous_last_name":{
                  "type":"string",
                  "description":""
               },
               "nick_name":{
                  "type":"string",
                  "description":""
               },
               "prefix_name":{
                  "type":"string",
                  "description":""
               },
               "suffix_name":{
                  "type":"string",
                  "description":""
               },
               "telephone":{
                  "type":"string",
                  "example":"+34912968570",
                  "description":""
               },
               "latitude":{
                  "type":"number",
                  "example":"40.4167",
                  "format":"float",
                  "description":""
               },
               "longitude":{
                  "type":"number",
                  "example":"-3.70358",
                  "format":"float",
                  "description":""
               },
               "organization":{
                  "type":"string",
                  "description":""
               },
               "job_title":{
                  "type":"string",
                  "description":""
               },
               "street":{
                  "type":"string",
                  "description":""
               },
               "subdivision_code":{
                  "type":"string",
                  "description":""
               },
               "city":{
                  "type":"string",
                  "example":"Madrid",
                  "description":""
               },
               "country_code":{
                  "type":"string",
                  "example":"ES",
                  "description":""
               },
               "communication_language":{
                  "type":"string",
                  "example":"en",
                  "description":""
               },
               "region":{
                  "type":"string",
                  "description":"Region"
               },
               "postal_code":{
                  "type":"string",
                  "description":""
               },
               "easy_avatar_url":{
                  "type":"string",
                  "description":""
               },
               "easy_external_id":{
                  "type":"string",
                  "description":""
               },
               "description":{
                  "type":"string",
                  "description":"Description"
               },
               "subregion":{
                  "type":"string",
                  "description":""
               },
               "full_name":{
                  "type":"string",
                  "example":"María Sayago",
                  "description":""
               },
               "landline":{
                  "type":"string",
                  "description":""
               },
               "instant_message":{
                  "type":"string",
                  "description":""
               },
               "custom_fields":{
                  "type":"array",
                  "xml":{
                     "wrapped":true
                  },
                  "items":{
                     "$ref":"#/components/schemas/CustomFieldValueApiResponse"
                  }
               },
               "author":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "time_zone":{
                  "type":"string",
                  "example":"",
                  "description":"Time zone",
                  "readOnly":true
               },
               "guid":{
                  "type":"string",
                  "example":"f23dc34c-846a-45ee-bb29-c056070d68ba",
                  "readOnly":true
               },
               "internal_name":{
                  "type":"string",
                  "example":"",
                  "readOnly":true
               },
               "non_deletable":{
                  "type":"boolean",
                  "example":"",
                  "readOnly":true
               },
               "non_editable":{
                  "type":"boolean",
                  "example":"",
                  "readOnly":true
               },
               "parent_id":{
                  "type":"integer",
                  "example":"",
                  "description":"Parent",
                  "readOnly":true
               },
               "attachments":{
                  "type":"array",
                  "description":"if you specify `include=attachments`",
                  "xml":{
                     "wrapped":true
                  },
                  "items":{
                     "$ref":"#/components/schemas/Attachment"
                  }
               },
               "journals":{
                  "type":"array",
                  "description":"if you specify `include=journals`",
                  "xml":{
                     "wrapped":true
                  },
                  "items":{
                     "$ref":"#/components/schemas/JournalApiResponse"
                  }
               },
               "created_at":{
                  "type":"string",
                  "format":"date-time",
                  "readOnly":true
               },
               "updated_at":{
                  "type":"string",
                  "format":"date-time",
                  "readOnly":true
               }
            },
            "xml":{
               "name":"easy_stakeholder"
            }
         },
         "EasyStakeholderApiRequest":{
            "properties":{
               "first_name":{
                  "type":"string",
                  "example":"María",
                  "description":""
               },
               "last_name":{
                  "type":"string",
                  "example":"Sayago",
                  "description":""
               },
               "email":{
                  "type":"string",
                  "example":"maria.sayago@seidor.es",
                  "format":"email",
                  "description":""
               },
               "middle_name":{
                  "type":"string",
                  "description":""
               },
               "first_name_phonetic":{
                  "type":"string",
                  "description":""
               },
               "last_name_phonetic":{
                  "type":"string",
                  "description":""
               },
               "previous_last_name":{
                  "type":"string",
                  "description":""
               },
               "nick_name":{
                  "type":"string",
                  "description":""
               },
               "prefix_name":{
                  "type":"string",
                  "description":""
               },
               "suffix_name":{
                  "type":"string",
                  "description":""
               },
               "telephone":{
                  "type":"string",
                  "example":"+34912968570",
                  "description":""
               },
               "latitude":{
                  "type":"number",
                  "example":"40.4167",
                  "format":"float",
                  "description":""
               },
               "longitude":{
                  "type":"number",
                  "example":"-3.70358",
                  "format":"float",
                  "description":""
               },
               "organization":{
                  "type":"string",
                  "description":""
               },
               "job_title":{
                  "type":"string",
                  "description":""
               },
               "street":{
                  "type":"string",
                  "description":""
               },
               "subdivision_code":{
                  "type":"string",
                  "description":""
               },
               "city":{
                  "type":"string",
                  "example":"Madrid",
                  "description":""
               },
               "country_code":{
                  "type":"string",
                  "example":"ES",
                  "description":""
               },
               "communication_language":{
                  "type":"string",
                  "example":"en",
                  "description":""
               },
               "region":{
                  "type":"string",
                  "description":"Region"
               },
               "postal_code":{
                  "type":"string",
                  "description":""
               },
               "easy_avatar_url":{
                  "type":"string",
                  "description":""
               },
               "easy_external_id":{
                  "type":"string",
                  "description":""
               },
               "description":{
                  "type":"string",
                  "description":"Description"
               },
               "subregion":{
                  "type":"string",
                  "description":""
               },
               "full_name":{
                  "type":"string",
                  "example":"María Sayago",
                  "description":""
               },
               "landline":{
                  "type":"string",
                  "description":""
               },
               "instant_message":{
                  "type":"string",
                  "description":""
               },
               "custom_fields":{
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/CustomFieldValueApiRequest"
                  }
               }
            },
            "xml":{
               "name":"easy_stakeholder"
            }
         },
         "EasyTimeBasedContractApiResponse":{
            "properties":{
               "id":{
                  "type":"integer",
                  "readOnly":true,
                  "example":1
               },
               "name":{
                  "type":"string",
                  "example":"Contract #1"
               },
               "total_price":{
                  "type":"number",
                  "example":12.34
               },
               "currency":{
                  "type":"string",
                  "example":"EUR"
               },
               "guid":{
                  "type":"string",
                  "example":"2d931510-d99f-494a-8c67-87feb05e1594"
               },
               "easy_partner":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "easy_product_solution":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "easy_contact":{
                  "type":"object",
                  "$ref":"#/components/schemas/EasyContactApiResponse"
               },
               "easy_price_book_quote_brand":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "easy_price_book_product_category":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "easy_price_book_quote":{
                  "type":"object",
                  "$ref":"#/components/schemas/EasyPriceBookQuoteApiResponse"
               },
               "easy_price_book_product_version":{
                  "type":"object",
                  "properties":{
                     "id":{
                        "type":"integer"
                     },
                     "name":{
                        "type":"string",
                        "example":"v11",
                        "enum":[
                           "2020",
                           "2021"
                        ]
                     }
                  }
               },
               "journals":{
                  "type":"array",
                  "description":"if you specify `include=journals`",
                  "xml":{
                     "wrapped":true
                  },
                  "items":{
                     "$ref":"#/components/schemas/JournalApiResponse"
                  }
               },
               "created_at":{
                  "type":"string",
                  "format":"date-time",
                  "readOnly":true
               },
               "updated_at":{
                  "type":"string",
                  "format":"date-time",
                  "readOnly":true
               },
               "start_date":{
                  "type":"string",
                  "example":"2020-12-24",
                  "format":"date"
               },
               "end_date":{
                  "type":"string",
                  "example":"2020-12-24",
                  "format":"date"
               }
            },
            "xml":{
               "name":"easy_time_based_contract"
            }
         },
         "EasyToDoListApiRequest":{
            "properties":{
               "name":{
                  "type":"string",
                  "example":"todo",
                  "description":"Name"
               },
               "position":{
                  "type":"integer",
                  "example":"1"
               }
            },
            "required":[
               "name",
               "user_id",
               "position"
            ],
            "xml":{
               "name":"easy_to_do_list"
            }
         },
         "EasyToDoListApiResponse":{
            "properties":{
               "id":{
                  "type":"integer",
                  "readOnly":true,
                  "example":1
               },
               "name":{
                  "type":"string",
                  "example":"todo",
                  "description":"Name"
               },
               "position":{
                  "type":"integer",
                  "example":"1"
               },
               "easy_to_do_list_items":{
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/EasyToDoListItemApiResponse"
                  }
               },
               "created_at":{
                  "type":"string",
                  "format":"date-time",
                  "readOnly":true
               },
               "updated_at":{
                  "type":"string",
                  "format":"date-time",
                  "readOnly":true
               }
            },
            "xml":{
               "name":"easy_to_do_list"
            }
         },
         "EasyToDoListItemApiRequest":{
            "properties":{
               "name":{
                  "type":"string",
                  "example":"weekly status update",
                  "description":"Name"
               },
               "position":{
                  "type":"integer",
                  "example":"1"
               },
               "is_done":{
                  "type":"boolean"
               },
               "easy_to_do_list_id":{
                  "type":"integer"
               },
               "entity_id":{
                  "type":"integer",
                  "example":"1"
               },
               "entity_type":{
                  "type":"string",
                  "example":"Issue"
               }
            },
            "required":[
               "name",
               "position",
               "is_done",
               "easy_to_do_list_id"
            ],
            "xml":{
               "name":"easy_to_do_list_item"
            }
         },
         "EasyToDoListItemApiResponse":{
            "properties":{
               "id":{
                  "type":"integer",
                  "readOnly":true,
                  "example":1
               },
               "name":{
                  "type":"string",
                  "example":"weekly status update",
                  "description":"Name"
               },
               "position":{
                  "type":"integer",
                  "example":"1"
               },
               "is_done":{
                  "type":"boolean"
               },
               "easy_to_do_list":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "entity_id":{
                  "type":"integer",
                  "example":"1"
               },
               "entity_type":{
                  "type":"string",
                  "example":"Issue"
               },
               "created_at":{
                  "type":"string",
                  "format":"date-time",
                  "readOnly":true
               },
               "updated_at":{
                  "type":"string",
                  "format":"date-time",
                  "readOnly":true
               }
            },
            "xml":{
               "name":"easy_to_do_list_item"
            }
         },
         "EasyVersionCategoryApiRequest":{
            "properties":{
               "name":{
                  "example":"",
                  "type":"string"
               }
            },
            "xml":{
               "name":"easy_version_category"
            }
         },
         "EasyVersionCategoryApiResponse":{
            "properties":{
               "id":{
                  "type":"integer",
                  "readOnly":true,
                  "example":1
               },
               "name":{
                  "example":"",
                  "type":"string"
               }
            },
            "xml":{
               "name":"easy_version_category"
            }
         },
         "EasyWebHookApiRequest":{
            "properties":{
               "name":{
                  "type":"string",
                  "example":"Integromat - callback",
                  "description":"Name"
               },
               "entity_type":{
                  "type":"string",
                  "example":"Issue",
                  "description":"Entity type"
               },
               "action":{
                  "type":"string",
                  "example":"create",
                  "description":"Usually one of CRUD, but can be custom",
                  "enum":[
                     "create",
                     "update",
                     "destroy"
                  ]
               },
               "url":{
                  "type":"string",
                  "format":"uri",
                  "example":"https://hook.integromat.com/super-secret-key?action=create-task",
                  "description":"URL"
               },
               "entity_data_type":{
                  "type":"string",
                  "example":"json",
                  "description":""
               },
               "status":{
                  "type":"string",
                  "example":"active",
                  "enum":[
                     "inactive",
                     "active"
                  ]
               },
               "api_includes":{
                  "type":"string",
                  "description":"Redmine-like 'includes' for api",
                  "example":"journals"
               },
               "author_id":{
                  "type":"integer"
               },
               "project_id":{
                  "type":"integer"
               }
            },
            "xml":{
               "name":"easy_web_hook"
            }
         },
         "EasyWebHookApiResponse":{
            "properties":{
               "id":{
                  "type":"integer",
                  "readOnly":true,
                  "example":1
               },
               "name":{
                  "type":"string",
                  "example":"Integromat - callback",
                  "description":"Name"
               },
               "entity_type":{
                  "type":"string",
                  "example":"Issue",
                  "description":"Entity type"
               },
               "action":{
                  "type":"string",
                  "example":"create",
                  "description":"Usually one of CRUD, but can be custom",
                  "enum":[
                     "create",
                     "update",
                     "destroy"
                  ]
               },
               "url":{
                  "type":"string",
                  "format":"uri",
                  "example":"https://hook.integromat.com/super-secret-key?action=create-task",
                  "description":"URL"
               },
               "entity_data_type":{
                  "type":"string",
                  "example":"json",
                  "description":""
               },
               "status":{
                  "type":"string",
                  "example":"active",
                  "enum":[
                     "inactive",
                     "active"
                  ]
               },
               "api_includes":{
                  "type":"string",
                  "description":"Redmine-like 'includes' for api",
                  "example":"journals"
               },
               "author":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "project":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "created_at":{
                  "type":"string",
                  "format":"date-time",
                  "readOnly":true
               },
               "updated_at":{
                  "type":"string",
                  "format":"date-time",
                  "readOnly":true
               }
            },
            "xml":{
               "name":"easy_web_hook"
            }
         },
         "ErrorModel":{
            "required":[
               "attribute",
               "messages"
            ],
            "properties":{
               "attribute":{
                  "type":"string",
                  "example":"login"
               },
               "messages":{
                  "type":"array",
                  "items":{
                     "type":"string",
                     "example":"cannot be blank"
                  }
               }
            }
         },
         "GroupApiRequest":{
            "properties":{
               "easy_external_id":{
                  "example":"external-system-1",
                  "type":"string"
               },
               "name":{
                  "example":"support",
                  "type":"string"
               },
               "easy_system_flag":{
                  "type":"boolean",
                  "description":"used for special operations, not human user"
               },
               "custom_fields":{
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/CustomFieldValueApiRequest"
                  }
               },
               "user_ids":{
                  "description":"Array of User IDs which belongs to this group",
                  "type":"array",
                  "items":{
                     "type":"integer"
                  }
               }
            },
            "required":[
               "name"
            ],
            "xml":{
               "name":"group"
            }
         },
         "GroupApiResponse":{
            "properties":{
               "id":{
                  "type":"integer",
                  "readOnly":true,
                  "example":1
               },
               "easy_external_id":{
                  "example":"external-system-1",
                  "type":"string"
               },
               "name":{
                  "example":"support",
                  "type":"string"
               },
               "easy_system_flag":{
                  "type":"boolean",
                  "description":"used for special operations, not human user"
               },
               "custom_fields":{
                  "type":"array",
                  "xml":{
                     "wrapped":true
                  },
                  "items":{
                     "$ref":"#/components/schemas/CustomFieldValueApiResponse"
                  }
               },
               "builtin":{
                  "type":"boolean",
                  "description":"false if the group can be given to a user"
               },
               "created_on":{
                  "type":"string",
                  "format":"date-time",
                  "readOnly":true
               },
               "users":{
                  "type":"array",
                  "description":"if you specify `include=users`",
                  "readOnly":true,
                  "items":{
                     "title":"User",
                     "type":"object",
                     "readOnly":true,
                     "properties":{
                        "id":{
                           "type":"integer"
                        },
                        "name":{
                           "type":"string"
                        }
                     }
                  }
               },
               "memberships":{
                  "type":"array",
                  "description":"if you specify `include=memberships`",
                  "readOnly":true,
                  "items":{
                     "title":"Membership",
                     "type":"object",
                     "readOnly":true,
                     "properties":{
                        "id":{
                           "type":"integer"
                        },
                        "project":{
                           "type":"object",
                           "properties":{
                              "id":{
                                 "type":"integer"
                              },
                              "name":{
                                 "type":"string"
                              }
                           }
                        },
                        "roles":{
                           "type":"array",
                           "items":{
                              "title":"Role",
                              "type":"object",
                              "properties":{
                                 "id":{
                                    "type":"integer"
                                 },
                                 "name":{
                                    "type":"string"
                                 },
                                 "inherited":{
                                    "type":"boolean",
                                    "description":"only if inherited_from.present?"
                                 }
                              }
                           }
                        }
                     }
                  }
               }
            },
            "xml":{
               "name":"group"
            }
         },
         "IssueApiRequest":{
            "properties":{
               "easy_external_id":{
                  "example":"external-system-1",
                  "type":"string"
               },
               "subject":{
                  "example":"Blue 2",
                  "type":"string"
               },
               "description":{
                  "example":"I can’t abide these Jawas. Disgusting creatures.",
                  "type":"string"
               },
               "estimated_hours":{
                  "type":"string"
               },
               "done_ratio":{
                  "type":"integer",
                  "description":"step=10"
               },
               "project_id":{
                  "type":"integer"
               },
               "tracker_id":{
                  "type":"integer"
               },
               "status_id":{
                  "type":"integer"
               },
               "priority_id":{
                  "type":"integer"
               },
               "activity_id":{
                  "type":"integer"
               },
               "category_id":{
                  "type":"integer"
               },
               "fixed_version_id":{
                  "type":"integer"
               },
               "parent_id":{
                  "type":"integer"
               },
               "author_id":{
                  "type":"integer"
               },
               "is_private":{
                  "type":"boolean"
               },
               "is_favorited":{
                  "type":"boolean"
               },
               "easy_email_to":{
                  "type":"string"
               },
               "easy_email_cc":{
                  "type":"string"
               },
               "start_date":{
                  "format":"date",
                  "type":"string"
               },
               "due_date":{
                  "format":"date",
                  "type":"string"
               },
               "custom_fields":{
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/CustomFieldValueApiRequest"
                  }
               },
               "tag_list":{
                  "type":"array",
                  "description":"List of tags associated with entity",
                  "example":[
                     "deployment",
                     "gantt",
                     "ldap"
                  ],
                  "items":{
                     "type":"string"
                  }
               }
            },
            "required":[
               "subject",
               "project_id",
               "tracker_id",
               "status_id",
               "priority_id",
               "author_id"
            ],
            "xml":{
               "name":"issue"
            }
         },
         "IssueApiResponse":{
            "properties":{
               "id":{
                  "type":"integer",
                  "readOnly":true,
                  "example":1
               },
               "easy_external_id":{
                  "example":"external-system-1",
                  "type":"string"
               },
               "subject":{
                  "example":"Blue 2",
                  "type":"string"
               },
               "description":{
                  "example":"I can’t abide these Jawas. Disgusting creatures.",
                  "type":"string"
               },
               "estimated_hours":{
                  "type":"string"
               },
               "done_ratio":{
                  "type":"integer",
                  "description":"step=10"
               },
               "project":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "tracker":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "status":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "priority":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "activity":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "category":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "fixed_version":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "parent":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "author":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "is_private":{
                  "type":"boolean"
               },
               "is_favorited":{
                  "type":"boolean"
               },
               "easy_email_to":{
                  "type":"string"
               },
               "easy_email_cc":{
                  "type":"string"
               },
               "start_date":{
                  "format":"date",
                  "type":"string"
               },
               "due_date":{
                  "format":"date",
                  "type":"string"
               },
               "custom_fields":{
                  "type":"array",
                  "xml":{
                     "wrapped":true
                  },
                  "items":{
                     "$ref":"#/components/schemas/CustomFieldValueApiResponse"
                  }
               },
               "tag_list":{
                  "type":"array",
                  "description":"List of tags associated with entity",
                  "example":[
                     "deployment",
                     "gantt",
                     "ldap"
                  ],
                  "items":{
                     "type":"string"
                  }
               },
               "css_classes":{
                  "readOnly":true,
                  "example":"issue tracker-7 status-13 priority-18 priority-highest",
                  "type":"string"
               },
               "total_estimated_hours":{
                  "readOnly":true,
                  "type":"string"
               },
               "created_on":{
                  "type":"string",
                  "format":"date-time",
                  "readOnly":true
               },
               "updated_on":{
                  "type":"string",
                  "format":"date-time",
                  "readOnly":true
               },
               "closed_on":{
                  "type":"string",
                  "format":"date-time"
               },
               "attachments":{
                  "type":"array",
                  "description":"if you specify `include=attachments`",
                  "xml":{
                     "wrapped":true
                  },
                  "items":{
                     "$ref":"#/components/schemas/Attachment"
                  }
               },
               "relations":{
                  "type":"array",
                  "description":"if you specify `include=relations`",
                  "xml":{
                     "wrapped":true
                  },
                  "items":{
                     "title":"Relation",
                     "type":"object",
                     "readOnly":true,
                     "properties":{
                        "id":{
                           "type":"integer",
                           "example":"1"
                        },
                        "issue_id":{
                           "type":"integer",
                           "example":"3"
                        },
                        "issue_to_id":{
                           "type":"integer",
                           "example":"5"
                        },
                        "relation_type":{
                           "example":"precedes",
                           "enum":[
                              "relates",
                              "duplicates",
                              "duplicated",
                              "blocks",
                              "blocked",
                              "precedes",
                              "follows",
                              "copied_to",
                              "copied_from",
                              "start_to_start",
                              "finish_to_finish",
                              "start_to_finish"
                           ],
                           "type":"string"
                        },
                        "delay":{
                           "type":"integer",
                           "description":"value in days",
                           "example":"5"
                        }
                     }
                  }
               },
               "changesets":{
                  "type":"array",
                  "description":"if you specify `include=changesets`",
                  "xml":{
                     "wrapped":true
                  },
                  "items":{
                     "title":"Changeset",
                     "type":"object",
                     "readOnly":true,
                     "properties":{
                        "user":{
                           "type":"object",
                           "properties":{
                              "id":{
                                 "type":"integer"
                              },
                              "name":{
                                 
                              }
                           }
                        },
                        "comments":{
                           "type":"string"
                        },
                        "committed_on":{
                           "format":"date-time",
                           "type":"string"
                        }
                     }
                  }
               },
               "journals":{
                  "type":"array",
                  "description":"if you specify `include=journals`",
                  "xml":{
                     "wrapped":true
                  },
                  "items":{
                     "$ref":"#/components/schemas/JournalApiResponse"
                  }
               },
               "watchers":{
                  "type":"array",
                  "description":"if you specify `include=watchers`",
                  "xml":{
                     "wrapped":true
                  },
                  "items":{
                     "title":"Watcher",
                     "type":"object",
                     "readOnly":true,
                     "properties":{
                        "user":{
                           "type":"object",
                           "properties":{
                              "id":{
                                 "type":"integer"
                              },
                              "name":{
                                 
                              }
                           }
                        }
                     }
                  }
               }
            },
            "xml":{
               "name":"issue"
            }
         },
         "JournalApiResponse":{
            "properties":{
               "id":{
                  "type":"integer"
               },
               "user":{
                  "type":"object",
                  "properties":{
                     "id":{
                        "type":"integer"
                     },
                     "name":{
                        
                     }
                  }
               },
               "notes":{
                  "type":"string"
               },
               "created_on":{
                  "format":"date-time",
                  "type":"string"
               },
               "private_notes":{
                  "type":"boolean"
               },
               "details":{
                  "type":"array",
                  "xml":{
                     "wrapped":true
                  },
                  "items":{
                     "title":"JournalDetail",
                     "type":"object",
                     "properties":{
                        "property":{
                           "type":"string"
                        },
                        "name":{
                           "type":"string"
                        },
                        "old_value":{
                           "type":"string"
                        },
                        "new_value":{
                           "type":"string"
                        }
                     }
                  }
               }
            },
            "title":"Journal",
            "type":"object",
            "readOnly":true,
            "xml":{
               "name":"journal"
            }
         },
         "MembershipApiRequest":{
            "required":[
               "role_ids",
               "user_ids"
            ],
            "properties":{
               "user_ids":{
                  "type":"array",
                  "description":"IDs of several users for batch creation. Ignored in PUT requests.",
                  "items":{
                     "type":"integer"
                  }
               },
               "role_ids":{
                  "type":"array",
                  "description":"IDs of roles",
                  "items":{
                     "type":"integer"
                  }
               }
            },
            "xml":{
               "name":"membership"
            }
         },
         "MembershipApiResponse":{
            "properties":{
               "id":{
                  "type":"integer",
                  "readOnly":true,
                  "example":1
               },
               "project":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "user":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "group":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "roles":{
                  "type":"array",
                  "readOnly":true,
                  "items":{
                     "title":"Role",
                     "type":"object",
                     "readOnly":true,
                     "properties":{
                        "id":{
                           "type":"integer"
                        },
                        "name":{
                           "type":"string"
                        },
                        "inherited":{
                           "type":"boolean"
                        }
                     }
                  }
               },
               "created_at":{
                  "type":"string",
                  "format":"date-time",
                  "readOnly":true
               },
               "updated_at":{
                  "type":"string",
                  "format":"date-time",
                  "readOnly":true
               }
            },
            "xml":{
               "name":"membership"
            }
         },
         "ProjectApiRequest":{
            "properties":{
               "easy_external_id":{
                  "example":"external-system-1",
                  "type":"string"
               },
               "name":{
                  "example":"Blue 2",
                  "type":"string"
               },
               "homepage":{
                  "example":"blue-2",
                  "type":"string"
               },
               "description":{
                  "example":"I can’t abide these Jawas. Disgusting creatures.",
                  "type":"string"
               },
               "parent_id":{
                  "type":"integer"
               },
               "author_id":{
                  "type":"integer"
               },
               "is_planned":{
                  "type":"boolean"
               },
               "easy_is_easy_template":{
                  "type":"boolean",
                  "description":"Is this project a template?"
               },
               "easy_start_date":{
                  "format":"date",
                  "type":"string"
               },
               "easy_due_date":{
                  "format":"date",
                  "type":"string"
               },
               "custom_fields":{
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/CustomFieldValueApiRequest"
                  }
               },
               "tag_list":{
                  "type":"array",
                  "description":"List of tags associated with entity",
                  "example":[
                     "deployment",
                     "gantt",
                     "ldap"
                  ],
                  "items":{
                     "type":"string"
                  }
               },
               "easy_currency_code":{
                  "minLength":3,
                  "maxLength":3,
                  "example":"EUR",
                  "type":"string"
               },
               "easy_priority_id":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer"
                     },
                     "name":{
                        
                     }
                  }
               }
            },
            "required":[
               "name",
               "author_id"
            ],
            "xml":{
               "name":"project"
            }
         },
         "ProjectApiResponse":{
            "properties":{
               "id":{
                  "type":"integer",
                  "readOnly":true,
                  "example":1
               },
               "easy_external_id":{
                  "example":"external-system-1",
                  "type":"string"
               },
               "name":{
                  "example":"Blue 2",
                  "type":"string"
               },
               "homepage":{
                  "example":"blue-2",
                  "type":"string"
               },
               "description":{
                  "example":"I can’t abide these Jawas. Disgusting creatures.",
                  "type":"string"
               },
               "parent":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "author":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "is_planned":{
                  "type":"boolean"
               },
               "easy_is_easy_template":{
                  "type":"boolean",
                  "description":"Is this project a template?"
               },
               "easy_start_date":{
                  "format":"date",
                  "type":"string"
               },
               "easy_due_date":{
                  "format":"date",
                  "type":"string"
               },
               "custom_fields":{
                  "type":"array",
                  "xml":{
                     "wrapped":true
                  },
                  "items":{
                     "$ref":"#/components/schemas/CustomFieldValueApiResponse"
                  }
               },
               "tag_list":{
                  "type":"array",
                  "description":"List of tags associated with entity",
                  "example":[
                     "deployment",
                     "gantt",
                     "ldap"
                  ],
                  "items":{
                     "type":"string"
                  }
               },
               "status":{
                  "readOnly":true,
                  "enum":[
                     1,
                     5,
                     9,
                     15,
                     19
                  ],
                  "example":"1",
                  "description":"1 = ACTIVE\n\n5 = CLOSED\n\n9 = ARCHIVED\n\n15 = PLANNED\n\n19 = DELETED",
                  "type":"string"
               },
               "identifier":{
                  "readOnly":true,
                  "example":"blue2",
                  "type":"string"
               },
               "sum_time_entries":{
                  "type":"integer",
                  "readOnly":true
               },
               "sum_estimated_hours":{
                  "type":"integer",
                  "readOnly":true
               },
               "currency":{
                  "readOnly":true,
                  "type":"string"
               },
               "created_on":{
                  "type":"string",
                  "format":"date-time",
                  "readOnly":true
               },
               "updated_on":{
                  "type":"string",
                  "format":"date-time",
                  "readOnly":true
               },
               "start_date":{
                  "format":"date",
                  "type":"string"
               },
               "due_date":{
                  "format":"date",
                  "type":"string"
               },
               "trackers":{
                  "type":"array",
                  "description":"if you specify `include=trackers`",
                  "items":{
                     "title":"Tracker",
                     "type":"object",
                     "readOnly":true,
                     "properties":{
                        "id":{
                           "type":"integer",
                           "example":"1"
                        },
                        "name":{
                           "example":"bug",
                           "type":"string"
                        },
                        "internal_name":{
                           "example":"easy_bug",
                           "type":"string"
                        },
                        "easy_external_id":{
                           "example":"easy_bug",
                           "type":"string"
                        }
                     }
                  }
               },
               "issue_categories":{
                  "type":"array",
                  "description":"if you specify `include=issue_categories`",
                  "items":{
                     "title":"IssueCategory",
                     "type":"object",
                     "readOnly":true,
                     "properties":{
                        "id":{
                           "type":"integer"
                        },
                        "name":{
                           "type":"string"
                        }
                     }
                  }
               },
               "time_entry_activities":{
                  "type":"array",
                  "description":"if you specify `include=time_entry_activities`",
                  "items":{
                     "title":"TimeEntryActivity",
                     "type":"object",
                     "readOnly":true,
                     "properties":{
                        "id":{
                           "type":"integer"
                        },
                        "name":{
                           "type":"string"
                        }
                     }
                  }
               },
               "enabled_modules":{
                  "type":"array",
                  "description":"if you specify `include=enabled_modules`",
                  "items":{
                     "title":"EnabledModule",
                     "type":"object",
                     "readOnly":true,
                     "properties":{
                        "id":{
                           "type":"integer"
                        },
                        "name":{
                           "type":"string"
                        }
                     }
                  }
               },
               "scheduled_for_destroy":{
                  "type":"boolean",
                  "description":"indicates if the project has been scheduled to be deleted",
                  "readOnly":true
               },
               "destroy_at":{
                  "type":"string",
                  "format":"date-time",
                  "description":"the date when the project is expected to be deleted; is shown only if the project has been scheduled to be deleted",
                  "readOnly":true
               }
            },
            "xml":{
               "name":"project"
            }
         },
         "ProjectDocumentApiRequest":{
            "properties":{
               "title":{
                  "example":"",
                  "type":"string"
               },
               "description":{
                  "example":"",
                  "type":"string"
               },
               "category_id":{
                  "type":"integer"
               },
               "custom_fields":{
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/CustomFieldValueApiRequest"
                  }
               }
            },
            "required":[
               "title",
               "category_id"
            ],
            "xml":{
               "name":"document"
            }
         },
         "CreateProjectTemplateApiRequest":{
            "required":[
               "template"
            ],
            "properties":{
               "template":{
                  "type":"object",
                  "properties":{
                     "assign_entity":{
                        "type":"object",
                        "properties":{
                           "type":{
                              "type":"string",
                              "example":"EasyContact",
                              "description":"Entity class"
                           },
                           "id":{
                              "type":"string",
                              "example":"6",
                              "description":"Entity id"
                           }
                        }
                     },
                     "project":{
                        "type":"array",
                        "items":{
                           "required":[
                              "id"
                           ],
                           "properties":{
                              "id":{
                                 "type":"string",
                                 "example":"188",
                                 "description":"Id of the source template"
                              },
                              "name":{
                                 "type":"string",
                                 "example":"Help Desk",
                                 "description":"Name of new project"
                              },
                              "custom_field_values":{
                                 "type":"array",
                                 "xml":{
                                    "wrapped":true
                                 },
                                 "items":{
                                    "$ref":"#/components/schemas/CustomFieldValueApiRequest"
                                 }
                              }
                           }
                        }
                     },
                     "parent_id":{
                        "type":"string",
                        "example":"15",
                        "description":"Parent project id"
                     },
                     "start_date":{
                        "type":"string",
                        "format":"date",
                        "example":"2021-02-02",
                        "description":"Date to update target project with when \"dates_settings\"=\"update_dates\""
                     },
                     "dates_settings":{
                        "type":"string",
                        "example":"update_settings",
                        "enum":[
                           "update_dates",
                           "match_starting_dates",
                           "do_not_change_any_dates"
                        ],
                        "description":"Project entities date settings"
                     },
                     "change_issues_author":{
                        "type":"string",
                        "example":"32",
                        "description":"Change author of all tasks to the given user id"
                     },
                     "inherit_time_entry_activities":{
                        "type":"string",
                        "example":"1",
                        "description":"Inherit time entry activities"
                     }
                  }
               },
               "notifications":{
                  "type":"string",
                  "example":"1",
                  "description":"Send e-mail notifications"
               }
            },
            "xml":{
               "name":"project_template"
            }
         },
         "CopyProjectTemplateApiRequest":{
            "required":[
               "template"
            ],
            "properties":{
               "template":{
                  "type":"object",
                  "properties":{
                     "target_root_project_id":{
                        "type":"string",
                        "example":"15",
                        "description":"Target project id"
                     },
                     "start_date":{
                        "type":"string",
                        "format":"date",
                        "example":"2021-02-02",
                        "description":"Date to update target project with when \"dates_settings\"=\"update_dates\""
                     },
                     "dates_settings":{
                        "type":"string",
                        "example":"update_settings",
                        "enum":[
                           "update_dates",
                           "match_starting_dates"
                        ],
                        "description":"Project entities date settings"
                     },
                     "change_issues_author":{
                        "type":"string",
                        "example":"32",
                        "description":"Change author of all tasks to the given user id"
                     },
                     "inherit_time_entry_activities":{
                        "type":"string",
                        "example":"1",
                        "description":"Inherit time entry activities"
                     }
                  }
               }
            },
            "xml":{
               "name":"project_template"
            }
         },
         "RoleApiRequest":{
            "xml":{
               "name":"role"
            }
         },
         "RoleApiResponse":{
            "properties":{
               "id":{
                  "type":"integer",
                  "readOnly":true,
                  "example":1
               },
               "name":{
                  "type":"string",
                  "example":"Director (C-level) role",
                  "description":"Name"
               },
               "assignable":{
                  "type":"boolean",
                  "description":"Tasks can be assigned to this role"
               },
               "permissions":{
                  "type":"array",
                  "items":{
                     "type":"string"
                  },
                  "example":[
                     "add_project",
                     "edit_own_projects"
                  ]
               },
               "issues_visibility":{
                  "type":"string",
                  "example":"all",
                  "enum":[
                     "all",
                     "default",
                     "own"
                  ],
                  "description":"Tasks visibility"
               },
               "users_visibility":{
                  "type":"string",
                  "example":"all",
                  "enum":[
                     "all",
                     "members_of_visible_projects"
                  ],
                  "description":"Users visibility"
               },
               "time_entries_visibility":{
                  "type":"string",
                  "example":"all",
                  "enum":[
                     "all",
                     "own"
                  ],
                  "description":"Spent time visibility"
               }
            },
            "xml":{
               "name":"role"
            }
         },
         "SearchApiResponse":{
            "properties":{
               "id":{
                  "type":"integer",
                  "format":"int64",
                  "example":1
               },
               "type":{
                  "type":"string",
                  "example":"issue"
               },
               "title":{
                  "type":"string",
                  "example":"Title of entity"
               },
               "url":{
                  "type":"string",
                  "example":"https://example.com/issue/443062"
               },
               "description":{
                  "type":"string",
                  "example":"Description of entity"
               },
               "datetime":{
                  "type":"string",
                  "format":"datetime",
                  "example":"2019-03-05T09:20:05+07:00"
               }
            },
            "xml":{
               "name":"result"
            }
         },
         "TestCaseApiRequest":{
            "properties":{
               "project_id":{
                  "type":"integer"
               },
               "author_id":{
                  "type":"integer"
               },
               "name":{
                  "type":"string"
               },
               "scenario":{
                  "type":"string"
               },
               "expected_result":{
                  "type":"string"
               },
               "issue_ids":{
                  "type":"array",
                  "items":{
                     "type":"integer"
                  }
               },
               "test_plan_ids":{
                  "type":"array",
                  "items":{
                     "type":"integer"
                  }
               },
               "custom_fields":{
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/CustomFieldValueApiRequest"
                  }
               },
               "attachments":{
                  "type":"array",
                  "description":"if you specify `include=attachments`",
                  "xml":{
                     "wrapped":true
                  },
                  "items":{
                     "$ref":"#/components/schemas/Attachment"
                  }
               }
            },
            "required":[
               "project_id",
               "name"
            ],
            "xml":{
               "name":"test_case"
            }
         },
         "TestCaseApiResponse":{
            "properties":{
               "id":{
                  "type":"integer",
                  "readOnly":true,
                  "example":1
               },
               "project":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "author":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "name":{
                  "type":"string"
               },
               "scenario":{
                  "type":"string"
               },
               "expected_result":{
                  "type":"string"
               },
               "issue_ids":{
                  "type":"array",
                  "items":{
                     "type":"integer"
                  }
               },
               "test_plan_ids":{
                  "type":"array",
                  "items":{
                     "type":"integer"
                  }
               },
               "custom_fields":{
                  "type":"array",
                  "xml":{
                     "wrapped":true
                  },
                  "items":{
                     "$ref":"#/components/schemas/CustomFieldValueApiResponse"
                  }
               },
               "attachments":{
                  "type":"array",
                  "description":"if you specify `include=attachments`",
                  "xml":{
                     "wrapped":true
                  },
                  "items":{
                     "$ref":"#/components/schemas/Attachment"
                  }
               }
            },
            "xml":{
               "name":"test_case"
            }
         },
         "TestCaseIssueExecutionApiRequest":{
            "properties":{
               "author_id":{
                  "type":"integer"
               },
               "issue_id":{
                  "type":"integer"
               },
               "test_case_id":{
                  "type":"integer"
               },
               "test_case_issue_execution_result_id":{
                  "type":"integer"
               },
               "comments":{
                  "type":"string"
               },
               "attachments":{
                  "type":"array",
                  "description":"if you specify `include=attachments`",
                  "xml":{
                     "wrapped":true
                  },
                  "items":{
                     "$ref":"#/components/schemas/Attachment"
                  }
               }
            },
            "required":[
               "issue_id"
            ],
            "xml":{
               "name":"test_case_issue_execution"
            }
         },
         "TestCaseIssueExecutionApiResponse":{
            "properties":{
               "id":{
                  "type":"integer",
                  "readOnly":true,
                  "example":1
               },
               "author":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "issue":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "test_case":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "test_case_issue_execution_result":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "comments":{
                  "type":"string"
               },
               "attachments":{
                  "type":"array",
                  "description":"if you specify `include=attachments`",
                  "xml":{
                     "wrapped":true
                  },
                  "items":{
                     "$ref":"#/components/schemas/Attachment"
                  }
               }
            },
            "xml":{
               "name":"test_case_issue_execution"
            }
         },
         "TestCaseIssueExecutionResultApiRequest":{
            "properties":{
               "name":{
                  "type":"string"
               },
               "active":{
                  "type":"boolean"
               }
            },
            "xml":{
               "name":"test_case_issue_execution_result"
            }
         },
         "TestCaseIssueExecutionResultApiResponse":{
            "properties":{
               "id":{
                  "type":"integer",
                  "readOnly":true,
                  "example":1
               },
               "name":{
                  "type":"string"
               },
               "active":{
                  "type":"boolean"
               }
            },
            "xml":{
               "name":"test_case_issue_execution_result"
            }
         },
         "TestPlanApiRequest":{
            "properties":{
               "project_id":{
                  "type":"integer"
               },
               "author_id":{
                  "type":"integer"
               },
               "name":{
                  "type":"string"
               },
               "issue_ids":{
                  "type":"array",
                  "items":{
                     "type":"integer"
                  }
               },
               "test_case_ids":{
                  "type":"array",
                  "items":{
                     "type":"integer"
                  }
               },
               "custom_fields":{
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/CustomFieldValueApiRequest"
                  }
               }
            },
            "required":[
               "project_id",
               "name"
            ],
            "xml":{
               "name":"test_plan"
            }
         },
         "TestPlanApiResponse":{
            "properties":{
               "id":{
                  "type":"integer",
                  "readOnly":true,
                  "example":1
               },
               "project":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "author":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "name":{
                  "type":"string"
               },
               "issue_ids":{
                  "type":"array",
                  "items":{
                     "type":"integer"
                  }
               },
               "test_case_ids":{
                  "type":"array",
                  "items":{
                     "type":"integer"
                  }
               },
               "custom_fields":{
                  "type":"array",
                  "xml":{
                     "wrapped":true
                  },
                  "items":{
                     "$ref":"#/components/schemas/CustomFieldValueApiResponse"
                  }
               }
            },
            "xml":{
               "name":"test_plan"
            }
         },
         "TimeEntryApiRequest":{
            "properties":{
               "project_id":{
                  "type":"integer"
               },
               "issue_id":{
                  "type":"integer"
               },
               "user_id":{
                  "type":"integer"
               },
               "priority_id":{
                  "type":"integer"
               },
               "activity_id":{
                  "type":"integer"
               },
               "easy_external_id":{
                  "type":"string"
               },
               "hours":{
                  "example":"8",
                  "description":"Amount of spent hours",
                  "type":"string"
               },
               "spent_on":{
                  "format":"date",
                  "example":"2019-07-09",
                  "description":"Date of spent time. It can be limited by global setting",
                  "type":"string"
               },
               "comments":{
                  "example":"I work very hard",
                  "type":"string"
               },
               "easy_is_billable":{
                  "type":"boolean"
               },
               "easy_billed":{
                  "type":"boolean"
               },
               "custom_fields":{
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/CustomFieldValueApiRequest"
                  }
               },
               "tag_list":{
                  "type":"array",
                  "description":"List of tags associated with entity",
                  "example":[
                     "deployment",
                     "gantt",
                     "ldap"
                  ],
                  "items":{
                     "type":"string"
                  }
               }
            },
            "required":[
               "project_id",
               "user_id",
               "hours",
               "spent_on"
            ],
            "xml":{
               "name":"time_entry"
            }
         },
         "TimeEntryApiResponse":{
            "properties":{
               "id":{
                  "type":"integer",
                  "readOnly":true,
                  "example":1
               },
               "project":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "issue":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "user":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "priority":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "activity":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "easy_external_id":{
                  "type":"string"
               },
               "hours":{
                  "example":"8",
                  "description":"Amount of spent hours",
                  "type":"string"
               },
               "spent_on":{
                  "format":"date",
                  "example":"2019-07-09",
                  "description":"Date of spent time. It can be limited by global setting",
                  "type":"string"
               },
               "comments":{
                  "example":"I work very hard",
                  "type":"string"
               },
               "easy_is_billable":{
                  "type":"boolean"
               },
               "easy_billed":{
                  "type":"boolean"
               },
               "custom_fields":{
                  "type":"array",
                  "xml":{
                     "wrapped":true
                  },
                  "items":{
                     "$ref":"#/components/schemas/CustomFieldValueApiResponse"
                  }
               },
               "tag_list":{
                  "type":"array",
                  "description":"List of tags associated with entity",
                  "example":[
                     "deployment",
                     "gantt",
                     "ldap"
                  ],
                  "items":{
                     "type":"string"
                  }
               },
               "created_on":{
                  "type":"string",
                  "format":"date-time",
                  "readOnly":true
               },
               "updated_on":{
                  "type":"string",
                  "format":"date-time",
                  "readOnly":true
               }
            },
            "xml":{
               "name":"time_entry"
            }
         },
         "UserApiRequest":{
            "properties":{
               "easy_external_id":{
                  "example":"external-system-1",
                  "type":"string"
               },
               "login":{
                  "example":"filip",
                  "description":"only for creation, can't be changed",
                  "type":"string"
               },
               "firstname":{
                  "example":"Filip",
                  "type":"string"
               },
               "lastname":{
                  "example":"Moravek",
                  "type":"string"
               },
               "mail":{
                  "format":"email",
                  "example":"ceo@easy.cz",
                  "type":"string"
               },
               "status":{
                  "type":"integer",
                  "example":1,
                  "enum":[
                     1,
                     2,
                     3
                  ]
               },
               "easy_system_flag":{
                  "type":"boolean",
                  "description":"used for special operations, not human user"
               },
               "easy_lesser_admin":{
                  "type":"boolean",
                  "description":"Partial administrator"
               },
               "language":{
                  "type":"string"
               },
               "admin":{
                  "type":"boolean",
                  "description":"Is user Administrator?"
               },
               "easy_user_type_id":{
                  "type":"integer"
               },
               "supervisor_user_id":{
                  "type":"integer"
               },
               "custom_fields":{
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/CustomFieldValueApiRequest"
                  }
               },
               "tag_list":{
                  "type":"array",
                  "description":"List of tags associated with entity",
                  "example":[
                     "deployment",
                     "gantt",
                     "ldap"
                  ],
                  "items":{
                     "type":"string"
                  }
               },
               "password":{
                  "format":"password",
                  "type":"string"
               },
               "password_confirmation":{
                  "format":"password",
                  "type":"string"
               },
               "group_ids":{
                  "type":"array",
                  "description":"Assign user to given groups. Expect array of IDs",
                  "items":{
                     "type":"integer"
                  }
               },
               "auth_source_id":{
                  "type":"integer",
                  "description":"ID of LDAP auth. source"
               },
               "easy_gantt_resources_estimated_ratio":{
                  "type":"number",
                  "format":"float",
                  "description":"(available if the user is allowed to manage Easy Gantt Resource user attributes)",
                  "example":"1.0"
               },
               "easy_gantt_resources_hours_limit":{
                  "type":"number",
                  "format":"float",
                  "description":"(available if the user is allowed to manage Easy Gantt Resource user attributes)",
                  "example":"1.0"
               },
               "easy_gantt_resources_advance_hours_limits":{
                  "type":"array",
                  "description":"Should contain 7 values, one per each day of the week. (Available if the user is allowed to manage Easy Gantt Resource user attributes.)",
                  "example":[
                     8.0,
                     8.0,
                     8.0,
                     8.0,
                     8.0,
                     0.0,
                     0.0
                  ],
                  "xml":{
                     "wrapped":true
                  },
                  "items":{
                     "$ref":"#/components/schemas/EasyGanttResourcesAdvanceHoursLimit"
                  }
               }
            },
            "required":[
               "firstname",
               "lastname",
               "mail",
               "password",
               "password_confirmation"
            ],
            "xml":{
               "name":"user"
            }
         },
         "UserApiResponse":{
            "properties":{
               "id":{
                  "type":"integer",
                  "readOnly":true,
                  "example":1
               },
               "easy_external_id":{
                  "example":"external-system-1",
                  "type":"string"
               },
               "login":{
                  "example":"admin",
                  "type":"string"
               },
               "firstname":{
                  "example":"Filip",
                  "type":"string"
               },
               "lastname":{
                  "example":"Moravek",
                  "type":"string"
               },
               "mail":{
                  "format":"email",
                  "example":"ceo@easy.cz",
                  "type":"string"
               },
               "status":{
                  "type":"integer",
                  "example":1,
                  "enum":[
                     1,
                     2,
                     3
                  ]
               },
               "easy_system_flag":{
                  "type":"boolean",
                  "description":"used for special operations, not human user"
               },
               "easy_lesser_admin":{
                  "type":"boolean",
                  "description":"Partial administrator"
               },
               "language":{
                  "type":"string"
               },
               "admin":{
                  "type":"boolean",
                  "description":"Is user Administrator?"
               },
               "easy_user_type":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "supervisor_user":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "custom_fields":{
                  "type":"array",
                  "xml":{
                     "wrapped":true
                  },
                  "items":{
                     "$ref":"#/components/schemas/CustomFieldValueApiResponse"
                  }
               },
               "tag_list":{
                  "type":"array",
                  "description":"List of tags associated with entity",
                  "example":[
                     "deployment",
                     "gantt",
                     "ldap"
                  ],
                  "items":{
                     "type":"string"
                  }
               },
               "utc_offset":{
                  "type":"integer",
                  "example":3600,
                  "description":"Time zone offset in seconds",
                  "readOnly":true
               },
               "last_login_on":{
                  "type":"string",
                  "format":"date-time"
               },
               "avatar_url":{
                  "type":"string",
                  "format":"uri"
               },
               "working_time_calendar":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer"
                     },
                     "name":{
                        "type":"string"
                     },
                     "default_working_hours":{
                        "type":"number",
                        "format":"float",
                        "example":"8.0"
                     },
                     "time_from":{
                        "type":"string",
                        "description":"Time when work start",
                        "example":"09:00"
                     },
                     "time_to":{
                        "type":"string",
                        "description":"Time when work end",
                        "example":"17:00"
                     }
                  }
               },
               "groups":{
                  "type":"array",
                  "description":"if you specify `include=groups`",
                  "readOnly":true,
                  "items":{
                     "type":"object",
                     "readOnly":true,
                     "properties":{
                        "id":{
                           "type":"integer"
                        },
                        "name":{
                           "type":"string"
                        }
                     }
                  }
               },
               "memberships":{
                  "type":"array",
                  "description":"if you specify `include=memberships`",
                  "readOnly":true,
                  "items":{
                     "title":"Membership",
                     "type":"object",
                     "readOnly":true,
                     "properties":{
                        "id":{
                           "type":"integer"
                        },
                        "project":{
                           "type":"object",
                           "properties":{
                              "id":{
                                 "type":"integer"
                              },
                              "name":{
                                 "type":"string"
                              }
                           }
                        },
                        "roles":{
                           "type":"array",
                           "items":{
                              "title":"Role",
                              "type":"object",
                              "properties":{
                                 "id":{
                                    "type":"integer"
                                 },
                                 "name":{
                                    "type":"string"
                                 },
                                 "inherited":{
                                    "type":"boolean",
                                    "description":"only if inherited_from.present?"
                                 }
                              }
                           }
                        }
                     }
                  }
               },
               "created_on":{
                  "type":"string",
                  "format":"date-time",
                  "readOnly":true
               },
               "updated_on":{
                  "type":"string",
                  "format":"date-time",
                  "readOnly":true
               },
               "easy_gantt_resources_estimated_ratio":{
                  "type":"number",
                  "format":"float",
                  "description":"(available if the user is allowed to manage Easy Gantt Resource user attributes)",
                  "example":"1.0"
               },
               "easy_gantt_resources_hours_limit":{
                  "type":"number",
                  "format":"float",
                  "description":"(available if the user is allowed to manage Easy Gantt Resource user attributes)",
                  "example":"1.0"
               },
               "easy_gantt_resources_advance_hours_limits":{
                  "type":"array",
                  "xml":{
                     "wrapped":true
                  },
                  "description":"Should contain 7 values, one per each day of the week. (Available if the user is allowed to manage Easy Gantt Resource user attributes.)",
                  "example":[
                     8.0,
                     8.0,
                     8.0,
                     8.0,
                     8.0,
                     0.0,
                     0.0
                  ],
                  "items":{
                     "$ref":"#/components/schemas/EasyGanttResourcesAdvanceHoursLimit"
                  }
               }
            },
            "xml":{
               "name":"user"
            }
         },
         "VersionApiRequest":{
            "properties":{
               "name":{
                  "example":"Next step into the future",
                  "type":"string"
               },
               "description":{
                  "example":"",
                  "type":"string"
               },
               "effective_date":{
                  "format":"date",
                  "type":"string"
               },
               "due_date":{
                  "format":"date",
                  "type":"string"
               },
               "wiki_page_title":{
                  "example":"",
                  "type":"string"
               },
               "status":{
                  "example":"open",
                  "enum":[
                     "open",
                     "locked",
                     "closed"
                  ],
                  "type":"string"
               },
               "sharing":{
                  "example":"none",
                  "enum":[
                     "none",
                     "descendants",
                     "hierarchy",
                     "tree",
                     "system"
                  ],
                  "type":"string"
               },
               "default_project_version":{
                  "type":"boolean"
               },
               "easy_external_id":{
                  "example":"external-system-1",
                  "type":"string"
               },
               "project_id":{
                  "type":"integer"
               },
               "easy_version_category_id":{
                  "type":"integer"
               },
               "custom_fields":{
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/CustomFieldValueApiRequest"
                  }
               }
            },
            "xml":{
               "name":"version"
            }
         },
         "VersionApiResponse":{
            "properties":{
               "id":{
                  "type":"integer",
                  "readOnly":true,
                  "example":1
               },
               "name":{
                  "example":"Next step into the future",
                  "type":"string"
               },
               "description":{
                  "example":"",
                  "type":"string"
               },
               "effective_date":{
                  "format":"date",
                  "type":"string"
               },
               "due_date":{
                  "format":"date",
                  "type":"string"
               },
               "wiki_page_title":{
                  "example":"",
                  "type":"string"
               },
               "status":{
                  "example":"open",
                  "enum":[
                     "open",
                     "locked",
                     "closed"
                  ],
                  "type":"string"
               },
               "sharing":{
                  "example":"none",
                  "enum":[
                     "none",
                     "descendants",
                     "hierarchy",
                     "tree",
                     "system"
                  ],
                  "type":"string"
               },
               "default_project_version":{
                  "type":"boolean"
               },
               "easy_external_id":{
                  "example":"external-system-1",
                  "type":"string"
               },
               "project":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "easy_version_category":{
                  "type":"object",
                  "readOnly":true,
                  "properties":{
                     "id":{
                        "type":"integer",
                        "xml":{
                           "attribute":true
                        }
                     },
                     "name":{
                        "type":"string",
                        "xml":{
                           "attribute":true
                        }
                     }
                  }
               },
               "custom_fields":{
                  "type":"array",
                  "xml":{
                     "wrapped":true
                  },
                  "items":{
                     "$ref":"#/components/schemas/CustomFieldValueApiResponse"
                  }
               },
               "journals":{
                  "type":"array",
                  "description":"if you specify `include=journals`",
                  "xml":{
                     "wrapped":true
                  },
                  "items":{
                     "$ref":"#/components/schemas/JournalApiResponse"
                  }
               },
               "created_on":{
                  "type":"string",
                  "format":"date-time",
                  "readOnly":true
               },
               "updated_on":{
                  "type":"string",
                  "format":"date-time",
                  "readOnly":true
               }
            },
            "xml":{
               "name":"version"
            }
         }
      },
      "examples":{
         
      },
      "links":{
         
      },
      "parameters":{
         
      },
      "requestBodies":{
         
      },
      "responses":{
         
      },
      "securitySchemes":{
         "headerKey":{
            "type":"apiKey",
            "name":"X-Redmine-API-Key",
            "in":"header"
         },
         "key":{
            "type":"apiKey",
            "name":"key",
            "in":"query"
         }
      }
   }
}